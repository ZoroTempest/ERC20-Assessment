{
	"id": "f4508b9c6e79882046f8163c532c0df1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DegenToken-main/contracts/DegenToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract DegenToken is ERC20, Ownable {\n    // Structure to represent a food item\n    struct FoodItem {\n        uint256 foodId;\n        string foodName;\n        uint256 foodCost;\n    }\n\n    FoodItem[] public availableFood; // List of available food items\n\n    // Mapping to store owned food items for each address\n    mapping(address => FoodItem[]) private ownedFoodItems;\n\n    constructor() ERC20(\"FoodToken\", \"FTK\") Ownable(msg.sender) {\n        // Initialize some food items with different prices\n        availableFood.push(FoodItem(1, \"Banana Cake\", 10));\n        availableFood.push(FoodItem(2, \"Liemposilog\", 25));\n        availableFood.push(FoodItem(3, \"Croffles\", 30));\n        availableFood.push(FoodItem(4, \"Iced Latte\", 15));\n    }\n\n    function mintTokens(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 0; // No fractional tokens\n    }\n\n    function getTokenBalance() external view returns (uint256) {\n        return balanceOf(msg.sender);\n    }\n\n    function burnTokens(uint256 amount) public {\n        require(\n            balanceOf(msg.sender) >= amount,\n            \"Insufficient token balance to burn\"\n        );\n        _burn(msg.sender, amount);\n    }\n\n    function transferTokens(address recipient, uint256 amount) external {\n        require(\n            balanceOf(msg.sender) >= amount,\n            \"Transfer failed: insufficient balance\"\n        );\n        approve(msg.sender, amount);\n        transferFrom(msg.sender, recipient, amount);\n    }\n\n    // Redeem tokens for a specific food item\n    function redeemFood(uint256 foodId) external {\n        require(foodId > 0 && foodId <= availableFood.length, \"Invalid food ID\");\n        FoodItem memory food = availableFood[foodId - 1]; // Adjust index (1-based ID)\n\n        require(\n            balanceOf(msg.sender) >= food.foodCost,\n            \"Insufficient balance to redeem food\"\n        );\n\n        _burn(msg.sender, food.foodCost);\n\n        // Add the food item to the user's owned food items\n        ownedFoodItems[msg.sender].push(food);\n\n        // Emit an event for the food redemption\n        emit FoodRedeemed(\n            msg.sender,\n            food.foodId,\n            food.foodName,\n            food.foodCost\n        );\n    }\n\n    // Fetch all available food items\n    function getAvailableFood() external view returns (FoodItem[] memory) {\n        return availableFood;\n    }\n\n    // Fetch owned food items for the caller\n    function getOwnedFoodItems() external view returns (FoodItem[] memory) {\n        return ownedFoodItems[msg.sender];\n    }\n\n    // Event to log food redemption\n    event FoodRedeemed(\n        address indexed redeemer,\n        uint256 foodId,\n        string foodName,\n        uint256 foodCost\n    );\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DegenToken-main/contracts/DegenToken.sol": {
				"DegenToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "redeemer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "foodId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "foodName",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "foodCost",
									"type": "uint256"
								}
							],
							"name": "FoodRedeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "availableFood",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "foodId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "foodName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "foodCost",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAvailableFood",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "foodId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "foodName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "foodCost",
											"type": "uint256"
										}
									],
									"internalType": "struct DegenToken.FoodItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwnedFoodItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "foodId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "foodName",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "foodCost",
											"type": "uint256"
										}
									],
									"internalType": "struct DegenToken.FoodItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "foodId",
									"type": "uint256"
								}
							],
							"name": "redeemFood",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DegenToken-main/contracts/DegenToken.sol\":168:2991  contract DegenToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DegenToken-main/contracts/DegenToken.sol\":546:909  constructor() ERC20(\"FoodToken\", \"FTK\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":594:604  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x466f6f64546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x46544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":676:689  availableFood */\n  0x06\n    /* \"DegenToken-main/contracts/DegenToken.sol\":695:725  FoodItem(1, \"Banana Cake\", 10) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"DegenToken-main/contracts/DegenToken.sol\":704:705  1 */\n  0x01\n    /* \"DegenToken-main/contracts/DegenToken.sol\":695:725  FoodItem(1, \"Banana Cake\", 10) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x42616e616e612043616b65000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DegenToken-main/contracts/DegenToken.sol\":722:724  10 */\n  0x0a\n    /* \"DegenToken-main/contracts/DegenToken.sol\":695:725  FoodItem(1, \"Banana Cake\", 10) */\n  dup2\n  mstore\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":676:726  availableFood.push(FoodItem(1, \"Banana Cake\", 10)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_17\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_17:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":736:749  availableFood */\n  0x06\n    /* \"DegenToken-main/contracts/DegenToken.sol\":755:785  FoodItem(2, \"Liemposilog\", 25) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"DegenToken-main/contracts/DegenToken.sol\":764:765  2 */\n  0x02\n    /* \"DegenToken-main/contracts/DegenToken.sol\":755:785  FoodItem(2, \"Liemposilog\", 25) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x4c69656d706f73696c6f67000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DegenToken-main/contracts/DegenToken.sol\":782:784  25 */\n  0x19\n    /* \"DegenToken-main/contracts/DegenToken.sol\":755:785  FoodItem(2, \"Liemposilog\", 25) */\n  dup2\n  mstore\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":736:786  availableFood.push(FoodItem(2, \"Liemposilog\", 25)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_19:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":796:809  availableFood */\n  0x06\n    /* \"DegenToken-main/contracts/DegenToken.sol\":815:842  FoodItem(3, \"Croffles\", 30) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"DegenToken-main/contracts/DegenToken.sol\":824:825  3 */\n  0x03\n    /* \"DegenToken-main/contracts/DegenToken.sol\":815:842  FoodItem(3, \"Croffles\", 30) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x43726f66666c6573000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DegenToken-main/contracts/DegenToken.sol\":839:841  30 */\n  0x1e\n    /* \"DegenToken-main/contracts/DegenToken.sol\":815:842  FoodItem(3, \"Croffles\", 30) */\n  dup2\n  mstore\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":796:843  availableFood.push(FoodItem(3, \"Croffles\", 30)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_21\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_21:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":853:866  availableFood */\n  0x06\n    /* \"DegenToken-main/contracts/DegenToken.sol\":872:901  FoodItem(4, \"Iced Latte\", 15) */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"DegenToken-main/contracts/DegenToken.sol\":881:882  4 */\n  0x04\n    /* \"DegenToken-main/contracts/DegenToken.sol\":872:901  FoodItem(4, \"Iced Latte\", 15) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x49636564204c6174746500000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"DegenToken-main/contracts/DegenToken.sol\":898:900  15 */\n  0x0f\n    /* \"DegenToken-main/contracts/DegenToken.sol\":872:901  FoodItem(4, \"Iced Latte\", 15) */\n  dup2\n  mstore\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":853:902  availableFood.push(FoodItem(4, \"Iced Latte\", 15)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x03\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_23:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  pop\n  pop\n    /* \"DegenToken-main/contracts/DegenToken.sol\":168:2991  contract DegenToken is ERC20, Ownable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_26:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_27:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_28:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_29:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_54:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_56\n  tag_28\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":714:798   */\ntag_55:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_30:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_31:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_32:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_33:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_61\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_32\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1429:1468   */\n  tag_62\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_32\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_34:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_35:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_36:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_66\n    /* \"#utility.yul\":1818:1852   */\n  tag_67\n    /* \"#utility.yul\":1827:1851   */\n  tag_68\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1818:1852   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1800:1853   */\n  tag_34\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_37:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_38:\n    /* \"#utility.yul\":2056:2095   */\n  tag_71\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2208   */\n  tag_72\n    /* \"#utility.yul\":2166:2207   */\n  tag_73\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_33\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_39:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_40:\n    /* \"#utility.yul\":2377:2409   */\n  tag_76\n  tag_39\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2418:2483   */\n  tag_77\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_41:\n    /* \"#utility.yul\":2555:2675   */\ntag_79:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_82\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_79)\ntag_81:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_42:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_85\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_30\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2906:2935   */\n  tag_86\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_31\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_87:\n    /* \"#utility.yul\":3133:3213   */\n  tag_88\n    /* \"#utility.yul\":3189:3211   */\n  tag_89\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_31\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_41\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_84:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_43:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_44:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_92\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_43\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_45:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_94\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_44\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_96\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_26\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_98\n  tag_27\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4038:4094   */\ntag_97:\n    /* \"#utility.yul\":4118:4156   */\n  tag_99\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_29\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4203:4270   */\n  tag_100\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_103:\n    /* \"#utility.yul\":5144:5211   */\n  tag_104\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_45\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_101)\n    /* \"#utility.yul\":4365:4983   */\ntag_102:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_105\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_30\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_106:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_106)\ntag_108:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_110\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_44\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_109:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_101:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_46:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_47:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_113\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_46\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_48:\n    /* \"#utility.yul\":5555:5579   */\n  tag_115\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_47\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_117\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_48\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"DegenToken-main/contracts/DegenToken.sol\":168:2991  contract DegenToken is ERC20, Ownable {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DegenToken-main/contracts/DegenToken.sol\":168:2991  contract DegenToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84c13cd0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xca07fbc4\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xca07fbc4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xef6eb4c7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf0dda65c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x84c13cd0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6d1b229d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x82b2e257\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18461949\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1797:2490  function redeemFood(uint256 foodId) external {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1020:1126  function decimals() public pure override returns (uint8) {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1242:1449  function burnTokens(uint256 amount) public {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1132:1236  function getTokenBalance() external view returns (uint256) {... */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2534:2641  function getAvailableFood() external view returns (FoodItem[] memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1455:1745  function transferTokens(address recipient, uint256 amount) external {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2692:2813  function getOwnedFoodItems() external view returns (FoodItem[] memory) {... */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":358:389  FoodItem[] public availableFood */\n    tag_20:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DegenToken-main/contracts/DegenToken.sol\":915:1014  function mintTokens(address to, uint256 amount) public onlyOwner {... */\n    tag_21:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_105\n      jump\t// in\n    tag_106:\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_108\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_107)\n    tag_108:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_109:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_109\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1797:2490  function redeemFood(uint256 foodId) external {... */\n    tag_43:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1869:1870  0 */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1860:1866  foodId */\n      dup2\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1860:1870  foodId > 0 */\n      gt\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1860:1904  foodId > 0 && foodId <= availableFood.length */\n      dup1\n      iszero\n      tag_117\n      jumpi\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1884:1897  availableFood */\n      0x06\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1884:1904  availableFood.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1874:1880  foodId */\n      dup2\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1874:1904  foodId <= availableFood.length */\n      gt\n      iszero\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1860:1904  foodId > 0 && foodId <= availableFood.length */\n    tag_117:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1852:1924  require(foodId > 0 && foodId <= availableFood.length, \"Invalid food ID\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1934:1954  FoodItem memory food */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1957:1970  availableFood */\n      0x06\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1980:1981  1 */\n      0x01\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1971:1977  foodId */\n      dup4\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1971:1981  foodId - 1 */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1957:1982  availableFood[foodId - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n    tag_123:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1934:1982  FoodItem memory food = availableFood[foodId - 1] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_105\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_105\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2068:2072  food */\n      dup1\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2068:2081  food.foodCost */\n      0x40\n      add\n      mload\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2043:2064  balanceOf(msg.sender) */\n      tag_132\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2053:2063  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2043:2052  balanceOf */\n      tag_59\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2043:2064  balanceOf(msg.sender) */\n      jump\t// in\n    tag_132:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2043:2081  balanceOf(msg.sender) >= food.foodCost */\n      lt\n      iszero\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2022:2142  require(... */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2153:2185  _burn(msg.sender, food.foodCost) */\n      tag_136\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2159:2169  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2171:2175  food */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2171:2184  food.foodCost */\n      0x40\n      add\n      mload\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2153:2158  _burn */\n      tag_137\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2153:2185  _burn(msg.sender, food.foodCost) */\n      jump\t// in\n    tag_136:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2256:2270  ownedFoodItems */\n      0x07\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2256:2282  ownedFoodItems[msg.sender] */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2271:2281  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2256:2282  ownedFoodItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2288:2292  food */\n      dup2\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2256:2293  ownedFoodItems[msg.sender].push(food) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2384:2394  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2358:2483  FoodRedeemed(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6897b74eb742aaf38dadb2956389fae0b6ed24f776eb038d3df6cf5b909371a4\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2408:2412  food */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2408:2419  food.foodId */\n      0x00\n      add\n      mload\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2433:2437  food */\n      dup4\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2433:2446  food.foodName */\n      0x20\n      add\n      mload\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2460:2464  food */\n      dup5\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2460:2473  food.foodCost */\n      0x40\n      add\n      mload\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2358:2483  FoodRedeemed(... */\n      mload(0x40)\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1842:2490  {... */\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1797:2490  function redeemFood(uint256 foodId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1020:1126  function decimals() public pure override returns (uint8) {... */\n    tag_50:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1070:1075  uint8 */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1094:1095  0 */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1087:1095  return 0 */\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1020:1126  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1242:1449  function burnTokens(uint256 amount) public {... */\n    tag_55:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1341:1347  amount */\n      dup1\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1316:1337  balanceOf(msg.sender) */\n      tag_150\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1326:1336  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1316:1325  balanceOf */\n      tag_59\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1316:1337  balanceOf(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1316:1347  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1295:1407  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1417:1442  _burn(msg.sender, amount) */\n      tag_154\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1423:1433  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1435:1441  amount */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1417:1422  _burn */\n      tag_137\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1417:1442  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_154:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1242:1449  function burnTokens(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1132:1236  function getTokenBalance() external view returns (uint256) {... */\n    tag_64:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1182:1189  uint256 */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1208:1229  balanceOf(msg.sender) */\n      tag_163\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1218:1228  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1208:1217  balanceOf */\n      tag_59\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1208:1229  balanceOf(msg.sender) */\n      jump\t// in\n    tag_163:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1201:1229  return balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1132:1236  function getTokenBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2534:2641  function getAvailableFood() external view returns (FoodItem[] memory) {... */\n    tag_67:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2585:2602  FoodItem[] memory */\n      0x60\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2621:2634  availableFood */\n      0x06\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2614:2634  return availableFood */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_165:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_166\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_105\n      jump\t// in\n    tag_168:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_105\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_165)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2534:2641  function getAvailableFood() external view returns (FoodItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_105\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_105\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1455:1745  function transferTokens(address recipient, uint256 amount) external {... */\n    tag_83:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1579:1585  amount */\n      dup1\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1554:1575  balanceOf(msg.sender) */\n      tag_184\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1564:1574  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1554:1563  balanceOf */\n      tag_59\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1554:1575  balanceOf(msg.sender) */\n      jump\t// in\n    tag_184:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1554:1585  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1533:1648  require(... */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1658:1685  approve(msg.sender, amount) */\n      tag_188\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1666:1676  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1678:1684  amount */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1658:1665  approve */\n      tag_33\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1658:1685  approve(msg.sender, amount) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1695:1738  transferFrom(msg.sender, recipient, amount) */\n      tag_189\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1708:1718  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1720:1729  recipient */\n      dup4\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1731:1737  amount */\n      dup4\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1695:1707  transferFrom */\n      tag_47\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1695:1738  transferFrom(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_189:\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1455:1745  function transferTokens(address recipient, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2692:2813  function getOwnedFoodItems() external view returns (FoodItem[] memory) {... */\n    tag_85:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2744:2761  FoodItem[] memory */\n      0x60\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2780:2794  ownedFoodItems */\n      0x07\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2780:2806  ownedFoodItems[msg.sender] */\n      0x00\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2795:2805  msg.sender */\n      caller\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2780:2806  ownedFoodItems[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2773:2806  return ownedFoodItems[msg.sender] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_191:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_192\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_194\n      swap1\n      tag_105\n      jump\t// in\n    tag_194:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_195\n      swap1\n      tag_105\n      jump\t// in\n    tag_195:\n      dup1\n      iszero\n      tag_196\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_197\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_196)\n    tag_197:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_198:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_198\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_191)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DegenToken-main/contracts/DegenToken.sol\":2692:2813  function getOwnedFoodItems() external view returns (FoodItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":358:389  FoodItem[] public availableFood */\n    tag_94:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_105\n      jump\t// in\n    tag_202:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_105\n      jump\t// in\n    tag_203:\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_205\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_204)\n    tag_205:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_206:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_206\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"DegenToken-main/contracts/DegenToken.sol\":915:1014  function mintTokens(address to, uint256 amount) public onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":990:1007  _mint(to, amount) */\n      tag_210\n        /* \"DegenToken-main/contracts/DegenToken.sol\":996:998  to */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":1000:1006  amount */\n      dup3\n        /* \"DegenToken-main/contracts/DegenToken.sol\":990:995  _mint */\n      tag_211\n        /* \"DegenToken-main/contracts/DegenToken.sol\":990:1007  _mint(to, amount) */\n      jump\t// in\n    tag_210:\n        /* \"DegenToken-main/contracts/DegenToken.sol\":915:1014  function mintTokens(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_257\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_262)\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_266)\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_267\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_268:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_269:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_270:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_271:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_272:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_331\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_268\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":711:782   */\n      tag_332\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_333\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_270\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":881:910   */\n      tag_334\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_271\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_29:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_336\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_272\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_274:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_276:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_277:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_342\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_276\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_278:\n        /* \"#utility.yul\":1876:1900   */\n      tag_344\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_277\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_345:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_279:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_347\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_278\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_280:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_281:\n        /* \"#utility.yul\":2232:2256   */\n      tag_350\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_280\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_351:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_282:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_353\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_281\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_32:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_356\n      tag_274\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2525:2644   */\n    tag_355:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_357\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_279\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_358\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_282\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_283:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_284:\n        /* \"#utility.yul\":3089:3110   */\n      tag_361\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_283\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_35:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_363\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_284\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_285:\n        /* \"#utility.yul\":3426:3450   */\n      tag_365\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_280\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_39:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_367\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_285\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_42:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_370\n      tag_274\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":3767:3886   */\n    tag_369:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_371\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_282\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_46:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_374\n      tag_274\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4136:4255   */\n    tag_373:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_375\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_279\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_376\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_279\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_377\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_282\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_286:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_287:\n        /* \"#utility.yul\":4826:4848   */\n      tag_380\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_286\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_52:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_382\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_287\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_58:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_385\n      tag_274\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5157:5276   */\n    tag_384:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_386\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_279\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5555   */\n    tag_288:\n        /* \"#utility.yul\":5508:5514   */\n      0x00\n        /* \"#utility.yul\":5542:5547   */\n      dup2\n        /* \"#utility.yul\":5536:5548   */\n      mload\n        /* \"#utility.yul\":5526:5548   */\n      swap1\n      pop\n        /* \"#utility.yul\":5416:5555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5770   */\n    tag_289:\n        /* \"#utility.yul\":5685:5696   */\n      0x00\n        /* \"#utility.yul\":5719:5725   */\n      dup3\n        /* \"#utility.yul\":5714:5717   */\n      dup3\n        /* \"#utility.yul\":5707:5726   */\n      mstore\n        /* \"#utility.yul\":5759:5763   */\n      0x20\n        /* \"#utility.yul\":5754:5757   */\n      dup3\n        /* \"#utility.yul\":5750:5764   */\n      add\n        /* \"#utility.yul\":5735:5764   */\n      swap1\n      pop\n        /* \"#utility.yul\":5561:5770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5776:5933   */\n    tag_290:\n        /* \"#utility.yul\":5868:5872   */\n      0x00\n        /* \"#utility.yul\":5891:5894   */\n      dup2\n        /* \"#utility.yul\":5883:5894   */\n      swap1\n      pop\n        /* \"#utility.yul\":5921:5925   */\n      0x20\n        /* \"#utility.yul\":5916:5919   */\n      dup3\n        /* \"#utility.yul\":5912:5926   */\n      add\n        /* \"#utility.yul\":5904:5926   */\n      swap1\n      pop\n        /* \"#utility.yul\":5776:5933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5939:6047   */\n    tag_291:\n        /* \"#utility.yul\":6016:6040   */\n      tag_391\n        /* \"#utility.yul\":6034:6039   */\n      dup2\n        /* \"#utility.yul\":6016:6040   */\n      tag_280\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6011:6014   */\n      dup3\n        /* \"#utility.yul\":6004:6041   */\n      mstore\n        /* \"#utility.yul\":5939:6047   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6053:6212   */\n    tag_292:\n        /* \"#utility.yul\":6127:6138   */\n      0x00\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6156:6159   */\n      dup3\n        /* \"#utility.yul\":6149:6168   */\n      mstore\n        /* \"#utility.yul\":6201:6205   */\n      0x20\n        /* \"#utility.yul\":6196:6199   */\n      dup3\n        /* \"#utility.yul\":6192:6206   */\n      add\n        /* \"#utility.yul\":6177:6206   */\n      swap1\n      pop\n        /* \"#utility.yul\":6053:6212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6218:6575   */\n    tag_293:\n        /* \"#utility.yul\":6296:6299   */\n      0x00\n        /* \"#utility.yul\":6324:6363   */\n      tag_394\n        /* \"#utility.yul\":6357:6362   */\n      dup3\n        /* \"#utility.yul\":6324:6363   */\n      tag_268\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6379:6440   */\n      tag_395\n        /* \"#utility.yul\":6433:6439   */\n      dup2\n        /* \"#utility.yul\":6428:6431   */\n      dup6\n        /* \"#utility.yul\":6379:6440   */\n      tag_292\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6372:6440   */\n      swap4\n      pop\n        /* \"#utility.yul\":6449:6514   */\n      tag_396\n        /* \"#utility.yul\":6507:6513   */\n      dup2\n        /* \"#utility.yul\":6502:6505   */\n      dup6\n        /* \"#utility.yul\":6495:6499   */\n      0x20\n        /* \"#utility.yul\":6488:6493   */\n      dup7\n        /* \"#utility.yul\":6484:6500   */\n      add\n        /* \"#utility.yul\":6449:6514   */\n      tag_270\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6539:6568   */\n      tag_397\n        /* \"#utility.yul\":6561:6567   */\n      dup2\n        /* \"#utility.yul\":6539:6568   */\n      tag_271\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6534:6537   */\n      dup5\n        /* \"#utility.yul\":6530:6569   */\n      add\n        /* \"#utility.yul\":6523:6569   */\n      swap2\n      pop\n        /* \"#utility.yul\":6300:6575   */\n      pop\n        /* \"#utility.yul\":6218:6575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:7425   */\n    tag_294:\n        /* \"#utility.yul\":6754:6757   */\n      0x00\n        /* \"#utility.yul\":6790:6794   */\n      0x60\n        /* \"#utility.yul\":6785:6788   */\n      dup4\n        /* \"#utility.yul\":6781:6795   */\n      add\n        /* \"#utility.yul\":6879:6883   */\n      0x00\n        /* \"#utility.yul\":6872:6877   */\n      dup4\n        /* \"#utility.yul\":6868:6884   */\n      add\n        /* \"#utility.yul\":6862:6885   */\n      mload\n        /* \"#utility.yul\":6898:6961   */\n      tag_399\n        /* \"#utility.yul\":6955:6959   */\n      0x00\n        /* \"#utility.yul\":6950:6953   */\n      dup7\n        /* \"#utility.yul\":6946:6960   */\n      add\n        /* \"#utility.yul\":6932:6944   */\n      dup3\n        /* \"#utility.yul\":6898:6961   */\n      tag_291\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":6805:6971   */\n      pop\n        /* \"#utility.yul\":7057:7061   */\n      0x20\n        /* \"#utility.yul\":7050:7055   */\n      dup4\n        /* \"#utility.yul\":7046:7062   */\n      add\n        /* \"#utility.yul\":7040:7063   */\n      mload\n        /* \"#utility.yul\":7110:7113   */\n      dup5\n        /* \"#utility.yul\":7104:7108   */\n      dup3\n        /* \"#utility.yul\":7100:7114   */\n      sub\n        /* \"#utility.yul\":7093:7097   */\n      0x20\n        /* \"#utility.yul\":7088:7091   */\n      dup7\n        /* \"#utility.yul\":7084:7098   */\n      add\n        /* \"#utility.yul\":7077:7115   */\n      mstore\n        /* \"#utility.yul\":7136:7209   */\n      tag_400\n        /* \"#utility.yul\":7204:7208   */\n      dup3\n        /* \"#utility.yul\":7190:7202   */\n      dup3\n        /* \"#utility.yul\":7136:7209   */\n      tag_293\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7128:7209   */\n      swap2\n      pop\n        /* \"#utility.yul\":6981:7220   */\n      pop\n        /* \"#utility.yul\":7306:7310   */\n      0x40\n        /* \"#utility.yul\":7299:7304   */\n      dup4\n        /* \"#utility.yul\":7295:7311   */\n      add\n        /* \"#utility.yul\":7289:7312   */\n      mload\n        /* \"#utility.yul\":7325:7388   */\n      tag_401\n        /* \"#utility.yul\":7382:7386   */\n      0x40\n        /* \"#utility.yul\":7377:7380   */\n      dup7\n        /* \"#utility.yul\":7373:7387   */\n      add\n        /* \"#utility.yul\":7359:7371   */\n      dup3\n        /* \"#utility.yul\":7325:7388   */\n      tag_291\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7230:7398   */\n      pop\n        /* \"#utility.yul\":7415:7419   */\n      dup1\n        /* \"#utility.yul\":7408:7419   */\n      swap2\n      pop\n        /* \"#utility.yul\":6759:7425   */\n      pop\n        /* \"#utility.yul\":6645:7425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7431:7687   */\n    tag_295:\n        /* \"#utility.yul\":7550:7560   */\n      0x00\n        /* \"#utility.yul\":7585:7681   */\n      tag_403\n        /* \"#utility.yul\":7677:7680   */\n      dup4\n        /* \"#utility.yul\":7669:7675   */\n      dup4\n        /* \"#utility.yul\":7585:7681   */\n      tag_294\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7571:7681   */\n      swap1\n      pop\n        /* \"#utility.yul\":7431:7687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7693:7831   */\n    tag_296:\n        /* \"#utility.yul\":7788:7792   */\n      0x00\n        /* \"#utility.yul\":7820:7824   */\n      0x20\n        /* \"#utility.yul\":7815:7818   */\n      dup3\n        /* \"#utility.yul\":7811:7825   */\n      add\n        /* \"#utility.yul\":7803:7825   */\n      swap1\n      pop\n        /* \"#utility.yul\":7693:7831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7905:9016   */\n    tag_297:\n        /* \"#utility.yul\":8074:8077   */\n      0x00\n        /* \"#utility.yul\":8103:8182   */\n      tag_406\n        /* \"#utility.yul\":8176:8181   */\n      dup3\n        /* \"#utility.yul\":8103:8182   */\n      tag_288\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8198:8309   */\n      tag_407\n        /* \"#utility.yul\":8302:8308   */\n      dup2\n        /* \"#utility.yul\":8297:8300   */\n      dup6\n        /* \"#utility.yul\":8198:8309   */\n      tag_289\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8191:8309   */\n      swap4\n      pop\n        /* \"#utility.yul\":8335:8338   */\n      dup4\n        /* \"#utility.yul\":8380:8384   */\n      0x20\n        /* \"#utility.yul\":8372:8378   */\n      dup3\n        /* \"#utility.yul\":8368:8385   */\n      mul\n        /* \"#utility.yul\":8363:8366   */\n      dup6\n        /* \"#utility.yul\":8359:8386   */\n      add\n        /* \"#utility.yul\":8410:8491   */\n      tag_408\n        /* \"#utility.yul\":8485:8490   */\n      dup6\n        /* \"#utility.yul\":8410:8491   */\n      tag_290\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8514:8521   */\n      dup1\n        /* \"#utility.yul\":8545:8546   */\n      0x00\n        /* \"#utility.yul\":8530:8971   */\n    tag_409:\n        /* \"#utility.yul\":8555:8561   */\n      dup6\n        /* \"#utility.yul\":8552:8553   */\n      dup2\n        /* \"#utility.yul\":8549:8562   */\n      lt\n        /* \"#utility.yul\":8530:8971   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":8626:8635   */\n      dup5\n        /* \"#utility.yul\":8620:8624   */\n      dup5\n        /* \"#utility.yul\":8616:8636   */\n      sub\n        /* \"#utility.yul\":8611:8614   */\n      dup10\n        /* \"#utility.yul\":8604:8637   */\n      mstore\n        /* \"#utility.yul\":8677:8683   */\n      dup2\n        /* \"#utility.yul\":8671:8684   */\n      mload\n        /* \"#utility.yul\":8705:8819   */\n      tag_412\n        /* \"#utility.yul\":8814:8818   */\n      dup6\n        /* \"#utility.yul\":8799:8812   */\n      dup3\n        /* \"#utility.yul\":8705:8819   */\n      tag_295\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8697:8819   */\n      swap5\n      pop\n        /* \"#utility.yul\":8842:8927   */\n      tag_413\n        /* \"#utility.yul\":8920:8926   */\n      dup4\n        /* \"#utility.yul\":8842:8927   */\n      tag_296\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8832:8927   */\n      swap3\n      pop\n        /* \"#utility.yul\":8956:8960   */\n      0x20\n        /* \"#utility.yul\":8951:8954   */\n      dup11\n        /* \"#utility.yul\":8947:8961   */\n      add\n        /* \"#utility.yul\":8940:8961   */\n      swap10\n      pop\n        /* \"#utility.yul\":8590:8971   */\n      pop\n        /* \"#utility.yul\":8577:8578   */\n      0x01\n        /* \"#utility.yul\":8574:8575   */\n      dup2\n        /* \"#utility.yul\":8570:8579   */\n      add\n        /* \"#utility.yul\":8565:8579   */\n      swap1\n      pop\n        /* \"#utility.yul\":8530:8971   */\n      jump(tag_409)\n    tag_411:\n        /* \"#utility.yul\":8534:8548   */\n      pop\n        /* \"#utility.yul\":8987:8991   */\n      dup3\n        /* \"#utility.yul\":8980:8991   */\n      swap8\n      pop\n        /* \"#utility.yul\":9007:9010   */\n      dup8\n        /* \"#utility.yul\":9000:9010   */\n      swap6\n      pop\n        /* \"#utility.yul\":8079:9016   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7905:9016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9022:9495   */\n    tag_69:\n        /* \"#utility.yul\":9215:9219   */\n      0x00\n        /* \"#utility.yul\":9253:9255   */\n      0x20\n        /* \"#utility.yul\":9242:9251   */\n      dup3\n        /* \"#utility.yul\":9238:9256   */\n      add\n        /* \"#utility.yul\":9230:9256   */\n      swap1\n      pop\n        /* \"#utility.yul\":9302:9311   */\n      dup2\n        /* \"#utility.yul\":9296:9300   */\n      dup2\n        /* \"#utility.yul\":9292:9312   */\n      sub\n        /* \"#utility.yul\":9288:9289   */\n      0x00\n        /* \"#utility.yul\":9277:9286   */\n      dup4\n        /* \"#utility.yul\":9273:9290   */\n      add\n        /* \"#utility.yul\":9266:9313   */\n      mstore\n        /* \"#utility.yul\":9330:9488   */\n      tag_415\n        /* \"#utility.yul\":9483:9487   */\n      dup2\n        /* \"#utility.yul\":9474:9480   */\n      dup5\n        /* \"#utility.yul\":9330:9488   */\n      tag_297\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9322:9488   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9501:9619   */\n    tag_298:\n        /* \"#utility.yul\":9588:9612   */\n      tag_417\n        /* \"#utility.yul\":9606:9611   */\n      dup2\n        /* \"#utility.yul\":9588:9612   */\n      tag_277\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9583:9586   */\n      dup3\n        /* \"#utility.yul\":9576:9613   */\n      mstore\n        /* \"#utility.yul\":9501:9619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9625:9847   */\n    tag_73:\n        /* \"#utility.yul\":9718:9722   */\n      0x00\n        /* \"#utility.yul\":9756:9758   */\n      0x20\n        /* \"#utility.yul\":9745:9754   */\n      dup3\n        /* \"#utility.yul\":9741:9759   */\n      add\n        /* \"#utility.yul\":9733:9759   */\n      swap1\n      pop\n        /* \"#utility.yul\":9769:9840   */\n      tag_419\n        /* \"#utility.yul\":9837:9838   */\n      0x00\n        /* \"#utility.yul\":9826:9835   */\n      dup4\n        /* \"#utility.yul\":9822:9839   */\n      add\n        /* \"#utility.yul\":9813:9819   */\n      dup5\n        /* \"#utility.yul\":9769:9840   */\n      tag_298\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":9625:9847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9853:10327   */\n    tag_89:\n        /* \"#utility.yul\":9921:9927   */\n      0x00\n        /* \"#utility.yul\":9929:9935   */\n      0x00\n        /* \"#utility.yul\":9978:9980   */\n      0x40\n        /* \"#utility.yul\":9966:9975   */\n      dup4\n        /* \"#utility.yul\":9957:9964   */\n      dup6\n        /* \"#utility.yul\":9953:9976   */\n      sub\n        /* \"#utility.yul\":9949:9981   */\n      slt\n        /* \"#utility.yul\":9946:10065   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9984:10063   */\n      tag_422\n      tag_274\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9946:10065   */\n    tag_421:\n        /* \"#utility.yul\":10104:10105   */\n      0x00\n        /* \"#utility.yul\":10129:10182   */\n      tag_423\n        /* \"#utility.yul\":10174:10181   */\n      dup6\n        /* \"#utility.yul\":10165:10171   */\n      dup3\n        /* \"#utility.yul\":10154:10163   */\n      dup7\n        /* \"#utility.yul\":10150:10172   */\n      add\n        /* \"#utility.yul\":10129:10182   */\n      tag_279\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10119:10182   */\n      swap3\n      pop\n        /* \"#utility.yul\":10075:10192   */\n      pop\n        /* \"#utility.yul\":10231:10233   */\n      0x20\n        /* \"#utility.yul\":10257:10310   */\n      tag_424\n        /* \"#utility.yul\":10302:10309   */\n      dup6\n        /* \"#utility.yul\":10293:10299   */\n      dup3\n        /* \"#utility.yul\":10282:10291   */\n      dup7\n        /* \"#utility.yul\":10278:10300   */\n      add\n        /* \"#utility.yul\":10257:10310   */\n      tag_279\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10247:10310   */\n      swap2\n      pop\n        /* \"#utility.yul\":10202:10320   */\n      pop\n        /* \"#utility.yul\":9853:10327   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10333:10866   */\n    tag_96:\n        /* \"#utility.yul\":10502:10506   */\n      0x00\n        /* \"#utility.yul\":10540:10542   */\n      0x60\n        /* \"#utility.yul\":10529:10538   */\n      dup3\n        /* \"#utility.yul\":10525:10543   */\n      add\n        /* \"#utility.yul\":10517:10543   */\n      swap1\n      pop\n        /* \"#utility.yul\":10553:10624   */\n      tag_426\n        /* \"#utility.yul\":10621:10622   */\n      0x00\n        /* \"#utility.yul\":10610:10619   */\n      dup4\n        /* \"#utility.yul\":10606:10623   */\n      add\n        /* \"#utility.yul\":10597:10603   */\n      dup7\n        /* \"#utility.yul\":10553:10624   */\n      tag_285\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10671:10680   */\n      dup2\n        /* \"#utility.yul\":10665:10669   */\n      dup2\n        /* \"#utility.yul\":10661:10681   */\n      sub\n        /* \"#utility.yul\":10656:10658   */\n      0x20\n        /* \"#utility.yul\":10645:10654   */\n      dup4\n        /* \"#utility.yul\":10641:10659   */\n      add\n        /* \"#utility.yul\":10634:10682   */\n      mstore\n        /* \"#utility.yul\":10699:10777   */\n      tag_427\n        /* \"#utility.yul\":10772:10776   */\n      dup2\n        /* \"#utility.yul\":10763:10769   */\n      dup6\n        /* \"#utility.yul\":10699:10777   */\n      tag_272\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10691:10777   */\n      swap1\n      pop\n        /* \"#utility.yul\":10787:10859   */\n      tag_428\n        /* \"#utility.yul\":10855:10857   */\n      0x40\n        /* \"#utility.yul\":10844:10853   */\n      dup4\n        /* \"#utility.yul\":10840:10858   */\n      add\n        /* \"#utility.yul\":10831:10837   */\n      dup5\n        /* \"#utility.yul\":10787:10859   */\n      tag_285\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10333:10866   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10872:11052   */\n    tag_299:\n        /* \"#utility.yul\":10920:10997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10910:10998   */\n      mstore\n        /* \"#utility.yul\":11017:11021   */\n      0x22\n        /* \"#utility.yul\":11014:11015   */\n      0x04\n        /* \"#utility.yul\":11007:11022   */\n      mstore\n        /* \"#utility.yul\":11041:11045   */\n      0x24\n        /* \"#utility.yul\":11038:11039   */\n      0x00\n        /* \"#utility.yul\":11031:11046   */\n      revert\n        /* \"#utility.yul\":11058:11378   */\n    tag_105:\n        /* \"#utility.yul\":11102:11108   */\n      0x00\n        /* \"#utility.yul\":11139:11140   */\n      0x02\n        /* \"#utility.yul\":11133:11137   */\n      dup3\n        /* \"#utility.yul\":11129:11141   */\n      div\n        /* \"#utility.yul\":11119:11141   */\n      swap1\n      pop\n        /* \"#utility.yul\":11186:11187   */\n      0x01\n        /* \"#utility.yul\":11180:11184   */\n      dup3\n        /* \"#utility.yul\":11176:11188   */\n      and\n        /* \"#utility.yul\":11207:11225   */\n      dup1\n        /* \"#utility.yul\":11197:11278   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":11263:11267   */\n      0x7f\n        /* \"#utility.yul\":11255:11261   */\n      dup3\n        /* \"#utility.yul\":11251:11268   */\n      and\n        /* \"#utility.yul\":11241:11268   */\n      swap2\n      pop\n        /* \"#utility.yul\":11197:11278   */\n    tag_431:\n        /* \"#utility.yul\":11325:11327   */\n      0x20\n        /* \"#utility.yul\":11317:11323   */\n      dup3\n        /* \"#utility.yul\":11314:11328   */\n      lt\n        /* \"#utility.yul\":11294:11312   */\n      dup2\n        /* \"#utility.yul\":11291:11329   */\n      sub\n        /* \"#utility.yul\":11288:11372   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":11344:11362   */\n      tag_433\n      tag_299\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11288:11372   */\n    tag_432:\n        /* \"#utility.yul\":11109:11378   */\n      pop\n        /* \"#utility.yul\":11058:11378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11384:11549   */\n    tag_300:\n        /* \"#utility.yul\":11524:11541   */\n      0x496e76616c696420666f6f642049440000000000000000000000000000000000\n        /* \"#utility.yul\":11520:11521   */\n      0x00\n        /* \"#utility.yul\":11512:11518   */\n      dup3\n        /* \"#utility.yul\":11508:11522   */\n      add\n        /* \"#utility.yul\":11501:11542   */\n      mstore\n        /* \"#utility.yul\":11384:11549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11555:11921   */\n    tag_301:\n        /* \"#utility.yul\":11697:11700   */\n      0x00\n        /* \"#utility.yul\":11718:11785   */\n      tag_436\n        /* \"#utility.yul\":11782:11784   */\n      0x0f\n        /* \"#utility.yul\":11777:11780   */\n      dup4\n        /* \"#utility.yul\":11718:11785   */\n      tag_269\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11711:11785   */\n      swap2\n      pop\n        /* \"#utility.yul\":11794:11887   */\n      tag_437\n        /* \"#utility.yul\":11883:11886   */\n      dup3\n        /* \"#utility.yul\":11794:11887   */\n      tag_300\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11912:11914   */\n      0x20\n        /* \"#utility.yul\":11907:11910   */\n      dup3\n        /* \"#utility.yul\":11903:11915   */\n      add\n        /* \"#utility.yul\":11896:11915   */\n      swap1\n      pop\n        /* \"#utility.yul\":11555:11921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11927:12346   */\n    tag_120:\n        /* \"#utility.yul\":12093:12097   */\n      0x00\n        /* \"#utility.yul\":12131:12133   */\n      0x20\n        /* \"#utility.yul\":12120:12129   */\n      dup3\n        /* \"#utility.yul\":12116:12134   */\n      add\n        /* \"#utility.yul\":12108:12134   */\n      swap1\n      pop\n        /* \"#utility.yul\":12180:12189   */\n      dup2\n        /* \"#utility.yul\":12174:12178   */\n      dup2\n        /* \"#utility.yul\":12170:12190   */\n      sub\n        /* \"#utility.yul\":12166:12167   */\n      0x00\n        /* \"#utility.yul\":12155:12164   */\n      dup4\n        /* \"#utility.yul\":12151:12168   */\n      add\n        /* \"#utility.yul\":12144:12191   */\n      mstore\n        /* \"#utility.yul\":12208:12339   */\n      tag_439\n        /* \"#utility.yul\":12334:12338   */\n      dup2\n        /* \"#utility.yul\":12208:12339   */\n      tag_301\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12200:12339   */\n      swap1\n      pop\n        /* \"#utility.yul\":11927:12346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12352:12532   */\n    tag_302:\n        /* \"#utility.yul\":12400:12477   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12397:12398   */\n      0x00\n        /* \"#utility.yul\":12390:12478   */\n      mstore\n        /* \"#utility.yul\":12497:12501   */\n      0x11\n        /* \"#utility.yul\":12494:12495   */\n      0x04\n        /* \"#utility.yul\":12487:12502   */\n      mstore\n        /* \"#utility.yul\":12521:12525   */\n      0x24\n        /* \"#utility.yul\":12518:12519   */\n      0x00\n        /* \"#utility.yul\":12511:12526   */\n      revert\n        /* \"#utility.yul\":12538:12732   */\n    tag_122:\n        /* \"#utility.yul\":12578:12582   */\n      0x00\n        /* \"#utility.yul\":12598:12618   */\n      tag_442\n        /* \"#utility.yul\":12616:12617   */\n      dup3\n        /* \"#utility.yul\":12598:12618   */\n      tag_280\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12593:12618   */\n      swap2\n      pop\n        /* \"#utility.yul\":12632:12652   */\n      tag_443\n        /* \"#utility.yul\":12650:12651   */\n      dup4\n        /* \"#utility.yul\":12632:12652   */\n      tag_280\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12627:12652   */\n      swap3\n      pop\n        /* \"#utility.yul\":12676:12677   */\n      dup3\n        /* \"#utility.yul\":12673:12674   */\n      dup3\n        /* \"#utility.yul\":12669:12678   */\n      sub\n        /* \"#utility.yul\":12661:12678   */\n      swap1\n      pop\n        /* \"#utility.yul\":12700:12701   */\n      dup2\n        /* \"#utility.yul\":12694:12698   */\n      dup2\n        /* \"#utility.yul\":12691:12702   */\n      gt\n        /* \"#utility.yul\":12688:12725   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":12705:12723   */\n      tag_445\n      tag_302\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":12688:12725   */\n    tag_444:\n        /* \"#utility.yul\":12538:12732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12738:12918   */\n    tag_125:\n        /* \"#utility.yul\":12786:12863   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12783:12784   */\n      0x00\n        /* \"#utility.yul\":12776:12864   */\n      mstore\n        /* \"#utility.yul\":12883:12887   */\n      0x32\n        /* \"#utility.yul\":12880:12881   */\n      0x04\n        /* \"#utility.yul\":12873:12888   */\n      mstore\n        /* \"#utility.yul\":12907:12911   */\n      0x24\n        /* \"#utility.yul\":12904:12905   */\n      0x00\n        /* \"#utility.yul\":12897:12912   */\n      revert\n        /* \"#utility.yul\":12924:13146   */\n    tag_303:\n        /* \"#utility.yul\":13064:13098   */\n      0x496e73756666696369656e742062616c616e636520746f2072656465656d2066\n        /* \"#utility.yul\":13060:13061   */\n      0x00\n        /* \"#utility.yul\":13052:13058   */\n      dup3\n        /* \"#utility.yul\":13048:13062   */\n      add\n        /* \"#utility.yul\":13041:13099   */\n      mstore\n        /* \"#utility.yul\":13133:13138   */\n      0x6f6f640000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13128:13130   */\n      0x20\n        /* \"#utility.yul\":13120:13126   */\n      dup3\n        /* \"#utility.yul\":13116:13131   */\n      add\n        /* \"#utility.yul\":13109:13139   */\n      mstore\n        /* \"#utility.yul\":12924:13146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13152:13518   */\n    tag_304:\n        /* \"#utility.yul\":13294:13297   */\n      0x00\n        /* \"#utility.yul\":13315:13382   */\n      tag_449\n        /* \"#utility.yul\":13379:13381   */\n      0x23\n        /* \"#utility.yul\":13374:13377   */\n      dup4\n        /* \"#utility.yul\":13315:13382   */\n      tag_269\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13308:13382   */\n      swap2\n      pop\n        /* \"#utility.yul\":13391:13484   */\n      tag_450\n        /* \"#utility.yul\":13480:13483   */\n      dup3\n        /* \"#utility.yul\":13391:13484   */\n      tag_303\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13509:13511   */\n      0x40\n        /* \"#utility.yul\":13504:13507   */\n      dup3\n        /* \"#utility.yul\":13500:13512   */\n      add\n        /* \"#utility.yul\":13493:13512   */\n      swap1\n      pop\n        /* \"#utility.yul\":13152:13518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13524:13943   */\n    tag_135:\n        /* \"#utility.yul\":13690:13694   */\n      0x00\n        /* \"#utility.yul\":13728:13730   */\n      0x20\n        /* \"#utility.yul\":13717:13726   */\n      dup3\n        /* \"#utility.yul\":13713:13731   */\n      add\n        /* \"#utility.yul\":13705:13731   */\n      swap1\n      pop\n        /* \"#utility.yul\":13777:13786   */\n      dup2\n        /* \"#utility.yul\":13771:13775   */\n      dup2\n        /* \"#utility.yul\":13767:13787   */\n      sub\n        /* \"#utility.yul\":13763:13764   */\n      0x00\n        /* \"#utility.yul\":13752:13761   */\n      dup4\n        /* \"#utility.yul\":13748:13765   */\n      add\n        /* \"#utility.yul\":13741:13788   */\n      mstore\n        /* \"#utility.yul\":13805:13936   */\n      tag_452\n        /* \"#utility.yul\":13931:13935   */\n      dup2\n        /* \"#utility.yul\":13805:13936   */\n      tag_304\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":13797:13936   */\n      swap1\n      pop\n        /* \"#utility.yul\":13524:13943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13949:14129   */\n    tag_305:\n        /* \"#utility.yul\":13997:14074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13994:13995   */\n      0x00\n        /* \"#utility.yul\":13987:14075   */\n      mstore\n        /* \"#utility.yul\":14094:14098   */\n      0x41\n        /* \"#utility.yul\":14091:14092   */\n      0x04\n        /* \"#utility.yul\":14084:14099   */\n      mstore\n        /* \"#utility.yul\":14118:14122   */\n      0x24\n        /* \"#utility.yul\":14115:14116   */\n      0x00\n        /* \"#utility.yul\":14108:14123   */\n      revert\n        /* \"#utility.yul\":14135:14276   */\n    tag_306:\n        /* \"#utility.yul\":14184:14188   */\n      0x00\n        /* \"#utility.yul\":14207:14210   */\n      dup2\n        /* \"#utility.yul\":14199:14210   */\n      swap1\n      pop\n        /* \"#utility.yul\":14230:14233   */\n      dup2\n        /* \"#utility.yul\":14227:14228   */\n      0x00\n        /* \"#utility.yul\":14220:14234   */\n      mstore\n        /* \"#utility.yul\":14264:14268   */\n      0x20\n        /* \"#utility.yul\":14261:14262   */\n      0x00\n        /* \"#utility.yul\":14251:14269   */\n      keccak256\n        /* \"#utility.yul\":14243:14269   */\n      swap1\n      pop\n        /* \"#utility.yul\":14135:14276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14282:14375   */\n    tag_307:\n        /* \"#utility.yul\":14319:14325   */\n      0x00\n        /* \"#utility.yul\":14366:14368   */\n      0x20\n        /* \"#utility.yul\":14361:14363   */\n      0x1f\n        /* \"#utility.yul\":14354:14359   */\n      dup4\n        /* \"#utility.yul\":14350:14364   */\n      add\n        /* \"#utility.yul\":14346:14369   */\n      div\n        /* \"#utility.yul\":14336:14369   */\n      swap1\n      pop\n        /* \"#utility.yul\":14282:14375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14381:14488   */\n    tag_308:\n        /* \"#utility.yul\":14425:14433   */\n      0x00\n        /* \"#utility.yul\":14475:14480   */\n      dup3\n        /* \"#utility.yul\":14469:14473   */\n      dup3\n        /* \"#utility.yul\":14465:14481   */\n      shl\n        /* \"#utility.yul\":14444:14481   */\n      swap1\n      pop\n        /* \"#utility.yul\":14381:14488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14494:14887   */\n    tag_309:\n        /* \"#utility.yul\":14563:14569   */\n      0x00\n        /* \"#utility.yul\":14613:14614   */\n      0x08\n        /* \"#utility.yul\":14601:14611   */\n      dup4\n        /* \"#utility.yul\":14597:14615   */\n      mul\n        /* \"#utility.yul\":14636:14733   */\n      tag_458\n        /* \"#utility.yul\":14666:14732   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14655:14664   */\n      dup3\n        /* \"#utility.yul\":14636:14733   */\n      tag_308\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14754:14793   */\n      tag_459\n        /* \"#utility.yul\":14784:14792   */\n      dup7\n        /* \"#utility.yul\":14773:14782   */\n      dup4\n        /* \"#utility.yul\":14754:14793   */\n      tag_308\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":14742:14793   */\n      swap6\n      pop\n        /* \"#utility.yul\":14826:14830   */\n      dup1\n        /* \"#utility.yul\":14822:14831   */\n      not\n        /* \"#utility.yul\":14815:14820   */\n      dup5\n        /* \"#utility.yul\":14811:14832   */\n      and\n        /* \"#utility.yul\":14802:14832   */\n      swap4\n      pop\n        /* \"#utility.yul\":14875:14879   */\n      dup1\n        /* \"#utility.yul\":14865:14873   */\n      dup7\n        /* \"#utility.yul\":14861:14880   */\n      and\n        /* \"#utility.yul\":14854:14859   */\n      dup5\n        /* \"#utility.yul\":14851:14881   */\n      or\n        /* \"#utility.yul\":14841:14881   */\n      swap3\n      pop\n        /* \"#utility.yul\":14570:14887   */\n      pop\n      pop\n        /* \"#utility.yul\":14494:14887   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14893:14953   */\n    tag_310:\n        /* \"#utility.yul\":14921:14924   */\n      0x00\n        /* \"#utility.yul\":14942:14947   */\n      dup2\n        /* \"#utility.yul\":14935:14947   */\n      swap1\n      pop\n        /* \"#utility.yul\":14893:14953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14959:15101   */\n    tag_311:\n        /* \"#utility.yul\":15009:15018   */\n      0x00\n        /* \"#utility.yul\":15042:15095   */\n      tag_462\n        /* \"#utility.yul\":15060:15094   */\n      tag_463\n        /* \"#utility.yul\":15069:15093   */\n      tag_464\n        /* \"#utility.yul\":15087:15092   */\n      dup5\n        /* \"#utility.yul\":15069:15093   */\n      tag_280\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15060:15094   */\n      tag_310\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15042:15095   */\n      tag_280\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15029:15095   */\n      swap1\n      pop\n        /* \"#utility.yul\":14959:15101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15107:15182   */\n    tag_312:\n        /* \"#utility.yul\":15150:15153   */\n      0x00\n        /* \"#utility.yul\":15171:15176   */\n      dup2\n        /* \"#utility.yul\":15164:15176   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15188:15457   */\n    tag_313:\n        /* \"#utility.yul\":15298:15337   */\n      tag_467\n        /* \"#utility.yul\":15329:15336   */\n      dup4\n        /* \"#utility.yul\":15298:15337   */\n      tag_311\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15359:15450   */\n      tag_468\n        /* \"#utility.yul\":15408:15449   */\n      tag_469\n        /* \"#utility.yul\":15432:15448   */\n      dup3\n        /* \"#utility.yul\":15408:15449   */\n      tag_312\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15400:15406   */\n      dup5\n        /* \"#utility.yul\":15393:15397   */\n      dup5\n        /* \"#utility.yul\":15387:15398   */\n      sload\n        /* \"#utility.yul\":15359:15450   */\n      tag_309\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15353:15357   */\n      dup3\n        /* \"#utility.yul\":15346:15451   */\n      sstore\n        /* \"#utility.yul\":15264:15457   */\n      pop\n        /* \"#utility.yul\":15188:15457   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15463:15536   */\n    tag_314:\n        /* \"#utility.yul\":15508:15511   */\n      0x00\n        /* \"#utility.yul\":15529:15530   */\n      0x00\n        /* \"#utility.yul\":15522:15530   */\n      swap1\n      pop\n        /* \"#utility.yul\":15463:15536   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15542:15731   */\n    tag_315:\n        /* \"#utility.yul\":15619:15651   */\n      tag_472\n      tag_314\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15660:15725   */\n      tag_473\n        /* \"#utility.yul\":15718:15724   */\n      dup2\n        /* \"#utility.yul\":15710:15716   */\n      dup5\n        /* \"#utility.yul\":15704:15708   */\n      dup5\n        /* \"#utility.yul\":15660:15725   */\n      tag_313\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":15595:15731   */\n      pop\n        /* \"#utility.yul\":15542:15731   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15737:15923   */\n    tag_316:\n        /* \"#utility.yul\":15797:15917   */\n    tag_475:\n        /* \"#utility.yul\":15814:15817   */\n      dup2\n        /* \"#utility.yul\":15807:15812   */\n      dup2\n        /* \"#utility.yul\":15804:15818   */\n      lt\n        /* \"#utility.yul\":15797:15917   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":15868:15907   */\n      tag_478\n        /* \"#utility.yul\":15905:15906   */\n      0x00\n        /* \"#utility.yul\":15898:15903   */\n      dup3\n        /* \"#utility.yul\":15868:15907   */\n      tag_315\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15841:15842   */\n      0x01\n        /* \"#utility.yul\":15834:15839   */\n      dup2\n        /* \"#utility.yul\":15830:15843   */\n      add\n        /* \"#utility.yul\":15821:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15797:15917   */\n      jump(tag_475)\n    tag_477:\n        /* \"#utility.yul\":15737:15923   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15929:16472   */\n    tag_317:\n        /* \"#utility.yul\":16030:16032   */\n      0x1f\n        /* \"#utility.yul\":16025:16028   */\n      dup3\n        /* \"#utility.yul\":16022:16033   */\n      gt\n        /* \"#utility.yul\":16019:16465   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":16064:16102   */\n      tag_481\n        /* \"#utility.yul\":16096:16101   */\n      dup2\n        /* \"#utility.yul\":16064:16102   */\n      tag_306\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16148:16177   */\n      tag_482\n        /* \"#utility.yul\":16166:16176   */\n      dup5\n        /* \"#utility.yul\":16148:16177   */\n      tag_307\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":16138:16146   */\n      dup2\n        /* \"#utility.yul\":16134:16178   */\n      add\n        /* \"#utility.yul\":16331:16333   */\n      0x20\n        /* \"#utility.yul\":16319:16329   */\n      dup6\n        /* \"#utility.yul\":16316:16334   */\n      lt\n        /* \"#utility.yul\":16313:16362   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":16352:16360   */\n      dup2\n        /* \"#utility.yul\":16337:16360   */\n      swap1\n      pop\n        /* \"#utility.yul\":16313:16362   */\n    tag_483:\n        /* \"#utility.yul\":16375:16455   */\n      tag_484\n        /* \"#utility.yul\":16431:16453   */\n      tag_485\n        /* \"#utility.yul\":16449:16452   */\n      dup6\n        /* \"#utility.yul\":16431:16453   */\n      tag_307\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16421:16429   */\n      dup4\n        /* \"#utility.yul\":16417:16454   */\n      add\n        /* \"#utility.yul\":16404:16415   */\n      dup3\n        /* \"#utility.yul\":16375:16455   */\n      tag_316\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":16034:16465   */\n      pop\n      pop\n        /* \"#utility.yul\":16019:16465   */\n    tag_480:\n        /* \"#utility.yul\":15929:16472   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16478:16595   */\n    tag_318:\n        /* \"#utility.yul\":16532:16540   */\n      0x00\n        /* \"#utility.yul\":16582:16587   */\n      dup3\n        /* \"#utility.yul\":16576:16580   */\n      dup3\n        /* \"#utility.yul\":16572:16588   */\n      shr\n        /* \"#utility.yul\":16551:16588   */\n      swap1\n      pop\n        /* \"#utility.yul\":16478:16595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16601:16770   */\n    tag_319:\n        /* \"#utility.yul\":16645:16651   */\n      0x00\n        /* \"#utility.yul\":16678:16729   */\n      tag_488\n        /* \"#utility.yul\":16726:16727   */\n      0x00\n        /* \"#utility.yul\":16722:16728   */\n      not\n        /* \"#utility.yul\":16714:16719   */\n      dup5\n        /* \"#utility.yul\":16711:16712   */\n      0x08\n        /* \"#utility.yul\":16707:16720   */\n      mul\n        /* \"#utility.yul\":16678:16729   */\n      tag_318\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16674:16730   */\n      not\n        /* \"#utility.yul\":16759:16763   */\n      dup1\n        /* \"#utility.yul\":16753:16757   */\n      dup4\n        /* \"#utility.yul\":16749:16764   */\n      and\n        /* \"#utility.yul\":16739:16764   */\n      swap2\n      pop\n        /* \"#utility.yul\":16652:16770   */\n      pop\n        /* \"#utility.yul\":16601:16770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16775:17070   */\n    tag_320:\n        /* \"#utility.yul\":16851:16855   */\n      0x00\n        /* \"#utility.yul\":16997:17026   */\n      tag_490\n        /* \"#utility.yul\":17022:17025   */\n      dup4\n        /* \"#utility.yul\":17016:17020   */\n      dup4\n        /* \"#utility.yul\":16997:17026   */\n      tag_319\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16989:17026   */\n      swap2\n      pop\n        /* \"#utility.yul\":17059:17062   */\n      dup3\n        /* \"#utility.yul\":17056:17057   */\n      0x02\n        /* \"#utility.yul\":17052:17063   */\n      mul\n        /* \"#utility.yul\":17046:17050   */\n      dup3\n        /* \"#utility.yul\":17043:17064   */\n      or\n        /* \"#utility.yul\":17035:17064   */\n      swap1\n      pop\n        /* \"#utility.yul\":16775:17070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17075:18470   */\n    tag_140:\n        /* \"#utility.yul\":17192:17229   */\n      tag_492\n        /* \"#utility.yul\":17225:17228   */\n      dup3\n        /* \"#utility.yul\":17192:17229   */\n      tag_268\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17294:17312   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17286:17292   */\n      dup2\n        /* \"#utility.yul\":17283:17313   */\n      gt\n        /* \"#utility.yul\":17280:17336   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":17316:17334   */\n      tag_494\n      tag_305\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17280:17336   */\n    tag_493:\n        /* \"#utility.yul\":17360:17398   */\n      tag_495\n        /* \"#utility.yul\":17392:17396   */\n      dup3\n        /* \"#utility.yul\":17386:17397   */\n      sload\n        /* \"#utility.yul\":17360:17398   */\n      tag_105\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17445:17512   */\n      tag_496\n        /* \"#utility.yul\":17505:17511   */\n      dup3\n        /* \"#utility.yul\":17497:17503   */\n      dup3\n        /* \"#utility.yul\":17491:17495   */\n      dup6\n        /* \"#utility.yul\":17445:17512   */\n      tag_317\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17539:17540   */\n      0x00\n        /* \"#utility.yul\":17563:17567   */\n      0x20\n        /* \"#utility.yul\":17550:17567   */\n      swap1\n      pop\n        /* \"#utility.yul\":17595:17597   */\n      0x1f\n        /* \"#utility.yul\":17587:17593   */\n      dup4\n        /* \"#utility.yul\":17584:17598   */\n      gt\n        /* \"#utility.yul\":17612:17613   */\n      0x01\n        /* \"#utility.yul\":17607:18225   */\n      dup2\n      eq\n      tag_498\n      jumpi\n        /* \"#utility.yul\":18269:18270   */\n      0x00\n        /* \"#utility.yul\":18286:18292   */\n      dup5\n        /* \"#utility.yul\":18283:18360   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":18335:18344   */\n      dup3\n        /* \"#utility.yul\":18330:18333   */\n      dup8\n        /* \"#utility.yul\":18326:18345   */\n      add\n        /* \"#utility.yul\":18320:18346   */\n      mload\n        /* \"#utility.yul\":18311:18346   */\n      swap1\n      pop\n        /* \"#utility.yul\":18283:18360   */\n    tag_499:\n        /* \"#utility.yul\":18386:18453   */\n      tag_500\n        /* \"#utility.yul\":18446:18452   */\n      dup6\n        /* \"#utility.yul\":18439:18444   */\n      dup3\n        /* \"#utility.yul\":18386:18453   */\n      tag_320\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18380:18384   */\n      dup7\n        /* \"#utility.yul\":18373:18454   */\n      sstore\n        /* \"#utility.yul\":18242:18464   */\n      pop\n        /* \"#utility.yul\":17577:18464   */\n      jump(tag_497)\n        /* \"#utility.yul\":17607:18225   */\n    tag_498:\n        /* \"#utility.yul\":17659:17663   */\n      0x1f\n        /* \"#utility.yul\":17655:17664   */\n      not\n        /* \"#utility.yul\":17647:17653   */\n      dup5\n        /* \"#utility.yul\":17643:17665   */\n      and\n        /* \"#utility.yul\":17693:17730   */\n      tag_501\n        /* \"#utility.yul\":17725:17729   */\n      dup7\n        /* \"#utility.yul\":17693:17730   */\n      tag_306\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17752:17753   */\n      0x00\n        /* \"#utility.yul\":17766:17974   */\n    tag_502:\n        /* \"#utility.yul\":17780:17787   */\n      dup3\n        /* \"#utility.yul\":17777:17778   */\n      dup2\n        /* \"#utility.yul\":17774:17788   */\n      lt\n        /* \"#utility.yul\":17766:17974   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":17859:17868   */\n      dup5\n        /* \"#utility.yul\":17854:17857   */\n      dup10\n        /* \"#utility.yul\":17850:17869   */\n      add\n        /* \"#utility.yul\":17844:17870   */\n      mload\n        /* \"#utility.yul\":17836:17842   */\n      dup3\n        /* \"#utility.yul\":17829:17871   */\n      sstore\n        /* \"#utility.yul\":17910:17911   */\n      0x01\n        /* \"#utility.yul\":17902:17908   */\n      dup3\n        /* \"#utility.yul\":17898:17912   */\n      add\n        /* \"#utility.yul\":17888:17912   */\n      swap2\n      pop\n        /* \"#utility.yul\":17957:17959   */\n      0x20\n        /* \"#utility.yul\":17946:17955   */\n      dup6\n        /* \"#utility.yul\":17942:17960   */\n      add\n        /* \"#utility.yul\":17929:17960   */\n      swap5\n      pop\n        /* \"#utility.yul\":17803:17807   */\n      0x20\n        /* \"#utility.yul\":17800:17801   */\n      dup2\n        /* \"#utility.yul\":17796:17808   */\n      add\n        /* \"#utility.yul\":17791:17808   */\n      swap1\n      pop\n        /* \"#utility.yul\":17766:17974   */\n      jump(tag_502)\n    tag_504:\n        /* \"#utility.yul\":18002:18008   */\n      dup7\n        /* \"#utility.yul\":17993:18000   */\n      dup4\n        /* \"#utility.yul\":17990:18009   */\n      lt\n        /* \"#utility.yul\":17987:18166   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":18060:18069   */\n      dup5\n        /* \"#utility.yul\":18055:18058   */\n      dup10\n        /* \"#utility.yul\":18051:18070   */\n      add\n        /* \"#utility.yul\":18045:18071   */\n      mload\n        /* \"#utility.yul\":18103:18151   */\n      tag_506\n        /* \"#utility.yul\":18145:18149   */\n      0x1f\n        /* \"#utility.yul\":18137:18143   */\n      dup10\n        /* \"#utility.yul\":18133:18150   */\n      and\n        /* \"#utility.yul\":18122:18131   */\n      dup3\n        /* \"#utility.yul\":18103:18151   */\n      tag_319\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":18095:18101   */\n      dup4\n        /* \"#utility.yul\":18088:18152   */\n      sstore\n        /* \"#utility.yul\":18010:18166   */\n      pop\n        /* \"#utility.yul\":17987:18166   */\n    tag_505:\n        /* \"#utility.yul\":18212:18213   */\n      0x01\n        /* \"#utility.yul\":18208:18209   */\n      0x02\n        /* \"#utility.yul\":18200:18206   */\n      dup9\n        /* \"#utility.yul\":18196:18210   */\n      mul\n        /* \"#utility.yul\":18192:18214   */\n      add\n        /* \"#utility.yul\":18186:18190   */\n      dup9\n        /* \"#utility.yul\":18179:18215   */\n      sstore\n        /* \"#utility.yul\":17614:18225   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17577:18464   */\n    tag_497:\n      pop\n        /* \"#utility.yul\":17167:18470   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17075:18470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18476:18697   */\n    tag_321:\n        /* \"#utility.yul\":18616:18650   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e636520746f206275\n        /* \"#utility.yul\":18612:18613   */\n      0x00\n        /* \"#utility.yul\":18604:18610   */\n      dup3\n        /* \"#utility.yul\":18600:18614   */\n      add\n        /* \"#utility.yul\":18593:18651   */\n      mstore\n        /* \"#utility.yul\":18685:18689   */\n      0x726e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18680:18682   */\n      0x20\n        /* \"#utility.yul\":18672:18678   */\n      dup3\n        /* \"#utility.yul\":18668:18683   */\n      add\n        /* \"#utility.yul\":18661:18690   */\n      mstore\n        /* \"#utility.yul\":18476:18697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18703:19069   */\n    tag_322:\n        /* \"#utility.yul\":18845:18848   */\n      0x00\n        /* \"#utility.yul\":18866:18933   */\n      tag_509\n        /* \"#utility.yul\":18930:18932   */\n      0x22\n        /* \"#utility.yul\":18925:18928   */\n      dup4\n        /* \"#utility.yul\":18866:18933   */\n      tag_269\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":18859:18933   */\n      swap2\n      pop\n        /* \"#utility.yul\":18942:19035   */\n      tag_510\n        /* \"#utility.yul\":19031:19034   */\n      dup3\n        /* \"#utility.yul\":18942:19035   */\n      tag_321\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":19060:19062   */\n      0x40\n        /* \"#utility.yul\":19055:19058   */\n      dup3\n        /* \"#utility.yul\":19051:19063   */\n      add\n        /* \"#utility.yul\":19044:19063   */\n      swap1\n      pop\n        /* \"#utility.yul\":18703:19069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19075:19494   */\n    tag_153:\n        /* \"#utility.yul\":19241:19245   */\n      0x00\n        /* \"#utility.yul\":19279:19281   */\n      0x20\n        /* \"#utility.yul\":19268:19277   */\n      dup3\n        /* \"#utility.yul\":19264:19282   */\n      add\n        /* \"#utility.yul\":19256:19282   */\n      swap1\n      pop\n        /* \"#utility.yul\":19328:19337   */\n      dup2\n        /* \"#utility.yul\":19322:19326   */\n      dup2\n        /* \"#utility.yul\":19318:19338   */\n      sub\n        /* \"#utility.yul\":19314:19315   */\n      0x00\n        /* \"#utility.yul\":19303:19312   */\n      dup4\n        /* \"#utility.yul\":19299:19316   */\n      add\n        /* \"#utility.yul\":19292:19339   */\n      mstore\n        /* \"#utility.yul\":19356:19487   */\n      tag_512\n        /* \"#utility.yul\":19482:19486   */\n      dup2\n        /* \"#utility.yul\":19356:19487   */\n      tag_322\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19348:19487   */\n      swap1\n      pop\n        /* \"#utility.yul\":19075:19494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19500:19724   */\n    tag_323:\n        /* \"#utility.yul\":19640:19674   */\n      0x5472616e73666572206661696c65643a20696e73756666696369656e74206261\n        /* \"#utility.yul\":19636:19637   */\n      0x00\n        /* \"#utility.yul\":19628:19634   */\n      dup3\n        /* \"#utility.yul\":19624:19638   */\n      add\n        /* \"#utility.yul\":19617:19675   */\n      mstore\n        /* \"#utility.yul\":19709:19716   */\n      0x6c616e6365000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19704:19706   */\n      0x20\n        /* \"#utility.yul\":19696:19702   */\n      dup3\n        /* \"#utility.yul\":19692:19707   */\n      add\n        /* \"#utility.yul\":19685:19717   */\n      mstore\n        /* \"#utility.yul\":19500:19724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19730:20096   */\n    tag_324:\n        /* \"#utility.yul\":19872:19875   */\n      0x00\n        /* \"#utility.yul\":19893:19960   */\n      tag_515\n        /* \"#utility.yul\":19957:19959   */\n      0x25\n        /* \"#utility.yul\":19952:19955   */\n      dup4\n        /* \"#utility.yul\":19893:19960   */\n      tag_269\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":19886:19960   */\n      swap2\n      pop\n        /* \"#utility.yul\":19969:20062   */\n      tag_516\n        /* \"#utility.yul\":20058:20061   */\n      dup3\n        /* \"#utility.yul\":19969:20062   */\n      tag_323\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":20087:20089   */\n      0x40\n        /* \"#utility.yul\":20082:20085   */\n      dup3\n        /* \"#utility.yul\":20078:20090   */\n      add\n        /* \"#utility.yul\":20071:20090   */\n      swap1\n      pop\n        /* \"#utility.yul\":19730:20096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20102:20521   */\n    tag_187:\n        /* \"#utility.yul\":20268:20272   */\n      0x00\n        /* \"#utility.yul\":20306:20308   */\n      0x20\n        /* \"#utility.yul\":20295:20304   */\n      dup3\n        /* \"#utility.yul\":20291:20309   */\n      add\n        /* \"#utility.yul\":20283:20309   */\n      swap1\n      pop\n        /* \"#utility.yul\":20355:20364   */\n      dup2\n        /* \"#utility.yul\":20349:20353   */\n      dup2\n        /* \"#utility.yul\":20345:20365   */\n      sub\n        /* \"#utility.yul\":20341:20342   */\n      0x00\n        /* \"#utility.yul\":20330:20339   */\n      dup4\n        /* \"#utility.yul\":20326:20343   */\n      add\n        /* \"#utility.yul\":20319:20366   */\n      mstore\n        /* \"#utility.yul\":20383:20514   */\n      tag_518\n        /* \"#utility.yul\":20509:20513   */\n      dup2\n        /* \"#utility.yul\":20383:20514   */\n      tag_324\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":20375:20514   */\n      swap1\n      pop\n        /* \"#utility.yul\":20102:20521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20527:20969   */\n    tag_232:\n        /* \"#utility.yul\":20676:20680   */\n      0x00\n        /* \"#utility.yul\":20714:20716   */\n      0x60\n        /* \"#utility.yul\":20703:20712   */\n      dup3\n        /* \"#utility.yul\":20699:20717   */\n      add\n        /* \"#utility.yul\":20691:20717   */\n      swap1\n      pop\n        /* \"#utility.yul\":20727:20798   */\n      tag_520\n        /* \"#utility.yul\":20795:20796   */\n      0x00\n        /* \"#utility.yul\":20784:20793   */\n      dup4\n        /* \"#utility.yul\":20780:20797   */\n      add\n        /* \"#utility.yul\":20771:20777   */\n      dup7\n        /* \"#utility.yul\":20727:20798   */\n      tag_298\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":20808:20880   */\n      tag_521\n        /* \"#utility.yul\":20876:20878   */\n      0x20\n        /* \"#utility.yul\":20865:20874   */\n      dup4\n        /* \"#utility.yul\":20861:20879   */\n      add\n        /* \"#utility.yul\":20852:20858   */\n      dup6\n        /* \"#utility.yul\":20808:20880   */\n      tag_285\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":20890:20962   */\n      tag_522\n        /* \"#utility.yul\":20958:20960   */\n      0x40\n        /* \"#utility.yul\":20947:20956   */\n      dup4\n        /* \"#utility.yul\":20943:20961   */\n      add\n        /* \"#utility.yul\":20934:20940   */\n      dup5\n        /* \"#utility.yul\":20890:20962   */\n      tag_285\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":20527:20969   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20975:21166   */\n    tag_261:\n        /* \"#utility.yul\":21015:21018   */\n      0x00\n        /* \"#utility.yul\":21034:21054   */\n      tag_524\n        /* \"#utility.yul\":21052:21053   */\n      dup3\n        /* \"#utility.yul\":21034:21054   */\n      tag_280\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":21029:21054   */\n      swap2\n      pop\n        /* \"#utility.yul\":21068:21088   */\n      tag_525\n        /* \"#utility.yul\":21086:21087   */\n      dup4\n        /* \"#utility.yul\":21068:21088   */\n      tag_280\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":21063:21088   */\n      swap3\n      pop\n        /* \"#utility.yul\":21111:21112   */\n      dup3\n        /* \"#utility.yul\":21108:21109   */\n      dup3\n        /* \"#utility.yul\":21104:21113   */\n      add\n        /* \"#utility.yul\":21097:21113   */\n      swap1\n      pop\n        /* \"#utility.yul\":21132:21135   */\n      dup1\n        /* \"#utility.yul\":21129:21130   */\n      dup3\n        /* \"#utility.yul\":21126:21136   */\n      gt\n        /* \"#utility.yul\":21123:21159   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":21139:21157   */\n      tag_527\n      tag_302\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":21123:21159   */\n    tag_526:\n        /* \"#utility.yul\":20975:21166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220704eafa01bac17e47874dfa6cbdf5fe938b7274a931f5b6f755ac1d7ed00d21a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1010": {
									"entryPoint": null,
									"id": 1010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 948,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:7",
										"nodeType": "YulBlock",
										"src": "0:5817:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5279:81:7",
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nativeSrc": "5289:65:7",
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nativeSrc": "5300:54:7",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:7",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:7",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nativeSrc": "5411:51:7",
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nativeSrc": "5421:35:7",
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nativeSrc": "5432:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:7",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:7",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nativeSrc": "5533:53:7",
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nativeSrc": "5555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nativeSrc": "5543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nativeSrc": "5543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:7",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:7",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nativeSrc": "5690:124:7",
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nativeSrc": "5700:26:7",
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nativeSrc": "5708:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nativeSrc": "5789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nativeSrc": "5736:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nativeSrc": "5736:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:7",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:7",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466F6F64546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E DUP2 PUSH2 0x3B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42616E616E612043616B65000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C69656D706F73696C6F67000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x19 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43726F66666C6573000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x49636564204C6174746500000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xF DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH2 0x7DB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0x4AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x567 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x52C JUMP JUMPDEST PUSH2 0x571 DUP7 DUP4 PUSH2 0x52C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5B5 PUSH2 0x5B0 PUSH2 0x5AB DUP5 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5CE DUP4 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x5E2 PUSH2 0x5DA DUP3 PUSH2 0x5BC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x538 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5F9 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x604 DUP2 DUP5 DUP5 PUSH2 0x5C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x627 JUMPI PUSH2 0x61C PUSH0 DUP3 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x60A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x66C JUMPI PUSH2 0x63D DUP2 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x646 DUP5 PUSH2 0x51D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x655 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x669 PUSH2 0x661 DUP6 PUSH2 0x51D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x609 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x68C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x671 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6A4 DUP4 DUP4 PUSH2 0x67D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6BD DUP3 PUSH2 0x477 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x481 JUMP JUMPDEST JUMPDEST PUSH2 0x6E0 DUP3 SLOAD PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x6EB DUP3 DUP3 DUP6 PUSH2 0x62B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x71C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x70A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x714 DUP6 DUP3 PUSH2 0x699 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x72A DUP7 PUSH2 0x50B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x751 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x72C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x76E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x76A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x67D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7AC DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BC DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D5 PUSH0 DUP4 ADD DUP5 PUSH2 0x7B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2007 DUP1 PUSH2 0x7E8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84C13CD0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCA07FBC4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCA07FBC4 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xEF6EB4C7 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x84C13CD0 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x302 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x82B2E257 EQ PUSH2 0x25A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18461949 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x470 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x4A5 JUMPI POP PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO JUMPDEST PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP4 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x535 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x561 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x583 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x5CF CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E CALLER DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6897B74EB742AAF38DADB2956389FAE0B6ED24F776EB038D3DF6CF5B909371A4 DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x701 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x717 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x724 DUP6 DUP3 DUP6 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x72F DUP6 DUP6 DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x74C CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 CALLER DUP3 PUSH2 0xD6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x7F0 PUSH0 PUSH2 0xFF2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7FC CALLER PUSH2 0x79A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8F7 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x824 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x937 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x963 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x991 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x9C2 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF DUP2 DUP6 DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9E4 CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2F CALLER DUP3 PUSH2 0x466 JUMP JUMPDEST POP PUSH2 0xA3B CALLER DUP4 DUP4 PUSH2 0x70D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB71 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xAD8 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC30 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC5C SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x10B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0xF6B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4E DUP2 PUSH2 0xFF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1134 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE5 DUP3 PUSH0 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP5 DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE75 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE66 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE74 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1134 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF52 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF66 DUP4 DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF73 PUSH2 0xD51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF91 PUSH2 0x900 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF0 JUMPI PUSH2 0xFB4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1125 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1130 PUSH0 DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1214 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12FD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1353 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1421 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13DC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1468 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14B2 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155E DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1568 DUP2 DUP6 PUSH2 0x1526 JUMP JUMPDEST SWAP4 POP PUSH2 0x1578 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1581 DUP2 PUSH2 0x1544 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A4 DUP2 DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D9 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E9 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1604 DUP2 PUSH2 0x15E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x160A JUMP JUMPDEST DUP2 EQ PUSH2 0x1626 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1637 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1660 DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1671 DUP6 DUP3 DUP7 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168F DUP2 PUSH2 0x167B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1686 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x160A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP7 DUP3 DUP8 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1736 DUP7 DUP3 DUP8 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1747 DUP7 DUP3 DUP8 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177F PUSH0 DUP4 ADD DUP5 PUSH2 0x175D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A7 DUP5 DUP3 DUP6 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x160A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1802 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x180C DUP2 DUP6 PUSH2 0x17E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1825 DUP2 PUSH2 0x1544 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1845 PUSH0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x185D DUP3 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1872 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1888 DUP4 DUP4 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x18B0 DUP2 DUP6 PUSH2 0x17BA JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x18C2 DUP6 PUSH2 0x17CA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18FD JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x18DE DUP6 DUP3 PUSH2 0x187D JUMP JUMPDEST SWAP5 POP PUSH2 0x18E9 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18C5 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1927 DUP2 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1951 PUSH0 DUP4 ADD DUP5 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198B DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH0 DUP4 ADD DUP7 PUSH2 0x16AE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19BA DUP2 DUP6 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A15 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A28 JUMPI PUSH2 0x1A27 PUSH2 0x19D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420666F6F642049440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A62 PUSH1 0xF DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6D DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8F DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1ACD DUP3 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD8 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1AF0 JUMPI PUSH2 0x1AEF PUSH2 0x1A96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F2072656465656D2066 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6F640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7D PUSH1 0x23 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B88 DUP3 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAA DUP2 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1C44 DUP7 DUP4 PUSH2 0x1BFF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7F PUSH2 0x1C7A PUSH2 0x1C75 DUP5 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C98 DUP4 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x1CA4 DUP3 PUSH2 0x1C86 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C0B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP5 DUP5 PUSH2 0x1C8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CE6 PUSH0 DUP3 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D07 DUP2 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x1D10 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D1F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D33 PUSH2 0x1D2B DUP6 PUSH2 0x1BF0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D3B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6E DUP4 DUP4 PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D87 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH2 0x1DAA DUP3 SLOAD PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DB5 DUP3 DUP3 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DE6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DD4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DDE DUP6 DUP3 PUSH2 0x1D63 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DF4 DUP7 PUSH2 0x1BDE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E1B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E38 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E34 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D47 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520746F206275 PUSH0 DUP3 ADD MSTORE PUSH32 0x726E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA7 PUSH1 0x22 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB2 DUP3 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED4 DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20696E73756666696369656E74206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F35 PUSH1 0x25 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F40 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F62 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP7 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1F96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA8 DUP3 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1A96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x4EAFA01BAC17E47874DFA6CBDF5FE938B7 0x27 BLOBBASEFEE SWAP4 0x1F JUMPDEST PUSH16 0x755AC1D7ED00D21A64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "168:2823:6:-:0;;;546:363;;;;;;;;;;594:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;676:13:6::2;695:30;;;;;;;;704:1;695:30;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;722:2;695:30;;::::0;676:50:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;736:13;755:30;;;;;;;;764:1;755:30;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;782:2;755:30;;::::0;736:50:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;796:13;815:27;;;;;;;;824:1;815:27;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;839:2;815:27;;::::0;796:47:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;853:13;872:29;;;;;;;;881:1;872:29;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;898:2;872:29;;::::0;853:49:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;168:2823:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;168:2823:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3416,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4404,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 3434,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3947,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4277,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3409,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3561,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4082,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3707,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4867,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2938,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1126,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@availableFood_952": {
									"entryPoint": 3068,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_385": {
									"entryPoint": 1946,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnTokens_1067": {
									"entryPoint": 1858,
									"id": 1067,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1034": {
									"entryPoint": 1851,
									"id": 1034,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAvailableFood_1172": {
									"entryPoint": 2049,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOwnedFoodItems_1185": {
									"entryPoint": 2624,
									"id": 1185,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenBalance_1045": {
									"entryPoint": 2034,
									"id": 1045,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mintTokens_1025": {
									"entryPoint": 3255,
									"id": 1025,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 982,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2304,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeemFood_1162": {
									"entryPoint": 1169,
									"id": 1162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2015,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2344,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1160,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1805,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3277,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1098": {
									"entryPoint": 2522,
									"id": 1098,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2488,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr": {
									"entryPoint": 6192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 7495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 7302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099": {
									"entryPoint": 6702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 7311,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21169:7",
										"nodeType": "YulBlock",
										"src": "0:21169:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3757:263:7",
													"nodeType": "YulBlock",
													"src": "3757:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:7",
																"nodeType": "YulBlock",
																"src": "3803:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:7"
																			},
																			"nativeSrc": "3805:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:7"
																		},
																		"nativeSrc": "3805:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:7"
																		},
																		"nativeSrc": "3774:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:7"
																},
																"nativeSrc": "3770:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:7"
															},
															"nativeSrc": "3767:119:7",
															"nodeType": "YulIf",
															"src": "3767:119:7"
														},
														{
															"nativeSrc": "3896:117:7",
															"nodeType": "YulBlock",
															"src": "3896:117:7",
															"statements": [
																{
																	"nativeSrc": "3911:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:7"
																				},
																				"nativeSrc": "3971:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:7"
																		},
																		"nativeSrc": "3950:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:7",
														"nodeType": "YulTypedName",
														"src": "3727:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:7",
														"nodeType": "YulTypedName",
														"src": "3738:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:7",
														"nodeType": "YulTypedName",
														"src": "3750:6:7",
														"type": ""
													}
												],
												"src": "3691:329:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5147:263:7",
													"nodeType": "YulBlock",
													"src": "5147:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:7",
																"nodeType": "YulBlock",
																"src": "5193:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:7"
																			},
																			"nativeSrc": "5195:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:7"
																		},
																		"nativeSrc": "5195:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:7"
																		},
																		"nativeSrc": "5164:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:7"
																},
																"nativeSrc": "5160:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:7"
															},
															"nativeSrc": "5157:119:7",
															"nodeType": "YulIf",
															"src": "5157:119:7"
														},
														{
															"nativeSrc": "5286:117:7",
															"nodeType": "YulBlock",
															"src": "5286:117:7",
															"statements": [
																{
																	"nativeSrc": "5301:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:7"
																				},
																				"nativeSrc": "5361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:7"
																		},
																		"nativeSrc": "5340:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:7",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:7",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:7",
														"nodeType": "YulTypedName",
														"src": "5140:6:7",
														"type": ""
													}
												],
												"src": "5081:329:7"
											},
											{
												"body": {
													"nativeSrc": "5515:40:7",
													"nodeType": "YulBlock",
													"src": "5515:40:7",
													"statements": [
														{
															"nativeSrc": "5526:22:7",
															"nodeType": "YulAssignment",
															"src": "5526:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5542:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5542:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5536:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5536:5:7"
																},
																"nativeSrc": "5536:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5536:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5526:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5416:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:7",
														"nodeType": "YulTypedName",
														"src": "5498:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5508:6:7",
														"nodeType": "YulTypedName",
														"src": "5508:6:7",
														"type": ""
													}
												],
												"src": "5416:139:7"
											},
											{
												"body": {
													"nativeSrc": "5697:73:7",
													"nodeType": "YulBlock",
													"src": "5697:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5714:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5714:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5719:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5719:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5707:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:7"
																},
																"nativeSrc": "5707:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5707:19:7"
															},
															"nativeSrc": "5707:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "5707:19:7"
														},
														{
															"nativeSrc": "5735:29:7",
															"nodeType": "YulAssignment",
															"src": "5735:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5754:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5759:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5759:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5750:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:7"
																},
																"nativeSrc": "5750:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5750:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5735:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "5735:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5561:209:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5669:3:7",
														"nodeType": "YulTypedName",
														"src": "5669:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5685:11:7",
														"nodeType": "YulTypedName",
														"src": "5685:11:7",
														"type": ""
													}
												],
												"src": "5561:209:7"
											},
											{
												"body": {
													"nativeSrc": "5873:60:7",
													"nodeType": "YulBlock",
													"src": "5873:60:7",
													"statements": [
														{
															"nativeSrc": "5883:11:7",
															"nodeType": "YulAssignment",
															"src": "5883:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5891:3:7",
																"nodeType": "YulIdentifier",
																"src": "5891:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5883:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5883:4:7"
																}
															]
														},
														{
															"nativeSrc": "5904:22:7",
															"nodeType": "YulAssignment",
															"src": "5904:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5916:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5916:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5921:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5921:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5912:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:7"
																},
																"nativeSrc": "5912:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5912:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5904:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5904:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5776:157:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5860:3:7",
														"nodeType": "YulTypedName",
														"src": "5860:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5868:4:7",
														"nodeType": "YulTypedName",
														"src": "5868:4:7",
														"type": ""
													}
												],
												"src": "5776:157:7"
											},
											{
												"body": {
													"nativeSrc": "5994:53:7",
													"nodeType": "YulBlock",
													"src": "5994:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6011:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6011:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6034:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6034:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6016:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6016:17:7"
																		},
																		"nativeSrc": "6016:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6016:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6004:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6004:6:7"
																},
																"nativeSrc": "6004:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6004:37:7"
															},
															"nativeSrc": "6004:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6004:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5939:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5982:5:7",
														"nodeType": "YulTypedName",
														"src": "5982:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5989:3:7",
														"nodeType": "YulTypedName",
														"src": "5989:3:7",
														"type": ""
													}
												],
												"src": "5939:108:7"
											},
											{
												"body": {
													"nativeSrc": "6139:73:7",
													"nodeType": "YulBlock",
													"src": "6139:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6161:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6161:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6149:6:7"
																},
																"nativeSrc": "6149:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6149:19:7"
															},
															"nativeSrc": "6149:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6149:19:7"
														},
														{
															"nativeSrc": "6177:29:7",
															"nodeType": "YulAssignment",
															"src": "6177:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6196:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6196:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6201:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6201:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6192:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6192:3:7"
																},
																"nativeSrc": "6192:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6192:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6177:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6177:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "6053:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6111:3:7",
														"nodeType": "YulTypedName",
														"src": "6111:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6116:6:7",
														"nodeType": "YulTypedName",
														"src": "6116:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6127:11:7",
														"nodeType": "YulTypedName",
														"src": "6127:11:7",
														"type": ""
													}
												],
												"src": "6053:159:7"
											},
											{
												"body": {
													"nativeSrc": "6300:275:7",
													"nodeType": "YulBlock",
													"src": "6300:275:7",
													"statements": [
														{
															"nativeSrc": "6310:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6310:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6357:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6357:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6324:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "6324:32:7"
																},
																"nativeSrc": "6324:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6324:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6314:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6314:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6372:68:7",
															"nodeType": "YulAssignment",
															"src": "6372:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6428:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6433:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6433:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "6379:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "6379:48:7"
																},
																"nativeSrc": "6379:61:7",
																"nodeType": "YulFunctionCall",
																"src": "6379:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6372:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6488:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6488:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6495:4:7",
																				"nodeType": "YulLiteral",
																				"src": "6495:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6484:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6484:3:7"
																		},
																		"nativeSrc": "6484:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6484:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6502:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6507:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6507:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6449:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "6449:34:7"
																},
																"nativeSrc": "6449:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6449:65:7"
															},
															"nativeSrc": "6449:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6449:65:7"
														},
														{
															"nativeSrc": "6523:46:7",
															"nodeType": "YulAssignment",
															"src": "6523:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6534:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6534:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6561:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6561:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6539:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "6539:21:7"
																		},
																		"nativeSrc": "6539:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6530:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6530:3:7"
																},
																"nativeSrc": "6530:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6530:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6523:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "6218:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6281:5:7",
														"nodeType": "YulTypedName",
														"src": "6281:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6288:3:7",
														"nodeType": "YulTypedName",
														"src": "6288:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6296:3:7",
														"nodeType": "YulTypedName",
														"src": "6296:3:7",
														"type": ""
													}
												],
												"src": "6218:357:7"
											},
											{
												"body": {
													"nativeSrc": "6759:666:7",
													"nodeType": "YulBlock",
													"src": "6759:666:7",
													"statements": [
														{
															"nativeSrc": "6769:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6769:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6785:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6785:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6790:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6790:4:7",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6781:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6781:3:7"
																},
																"nativeSrc": "6781:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6781:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "6773:4:7",
																	"nodeType": "YulTypedName",
																	"src": "6773:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6805:166:7",
															"nodeType": "YulBlock",
															"src": "6805:166:7",
															"statements": [
																{
																	"nativeSrc": "6842:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6842:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6872:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6872:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6879:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6879:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6868:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6868:3:7"
																				},
																				"nativeSrc": "6868:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6868:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6862:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6862:5:7"
																		},
																		"nativeSrc": "6862:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6846:12:7",
																			"nodeType": "YulTypedName",
																			"src": "6846:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6932:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "6932:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6950:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6950:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6955:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6955:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6946:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6946:3:7"
																				},
																				"nativeSrc": "6946:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6946:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6898:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "6898:33:7"
																		},
																		"nativeSrc": "6898:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6898:63:7"
																	},
																	"nativeSrc": "6898:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "6898:63:7"
																}
															]
														},
														{
															"nativeSrc": "6981:239:7",
															"nodeType": "YulBlock",
															"src": "6981:239:7",
															"statements": [
																{
																	"nativeSrc": "7020:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7020:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7050:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7050:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7057:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7057:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7046:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7046:3:7"
																				},
																				"nativeSrc": "7046:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7046:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7040:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7040:5:7"
																		},
																		"nativeSrc": "7040:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7040:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7024:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7024:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7088:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7088:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7093:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7093:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7084:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7084:3:7"
																				},
																				"nativeSrc": "7084:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7084:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "7104:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7104:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "7110:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7110:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7100:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7100:3:7"
																				},
																				"nativeSrc": "7100:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7100:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "7077:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7077:6:7"
																		},
																		"nativeSrc": "7077:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7077:38:7"
																	},
																	"nativeSrc": "7077:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7077:38:7"
																},
																{
																	"nativeSrc": "7128:81:7",
																	"nodeType": "YulAssignment",
																	"src": "7128:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7190:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7190:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "7204:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7204:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "7136:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "7136:53:7"
																		},
																		"nativeSrc": "7136:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7136:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "7128:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "7128:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7230:168:7",
															"nodeType": "YulBlock",
															"src": "7230:168:7",
															"statements": [
																{
																	"nativeSrc": "7269:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7269:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7299:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7299:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7306:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7306:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7295:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7295:3:7"
																				},
																				"nativeSrc": "7295:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7295:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7289:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7289:5:7"
																		},
																		"nativeSrc": "7289:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7289:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7273:12:7",
																			"nodeType": "YulTypedName",
																			"src": "7273:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7359:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "7359:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7377:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7377:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7382:4:7",
																						"nodeType": "YulLiteral",
																						"src": "7382:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7373:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7373:3:7"
																				},
																				"nativeSrc": "7373:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7373:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7325:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "7325:33:7"
																		},
																		"nativeSrc": "7325:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:63:7"
																	},
																	"nativeSrc": "7325:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "7325:63:7"
																}
															]
														},
														{
															"nativeSrc": "7408:11:7",
															"nodeType": "YulAssignment",
															"src": "7408:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "7415:4:7",
																"nodeType": "YulIdentifier",
																"src": "7415:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7408:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7408:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr",
												"nativeSrc": "6645:780:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6738:5:7",
														"nodeType": "YulTypedName",
														"src": "6738:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6745:3:7",
														"nodeType": "YulTypedName",
														"src": "6745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6754:3:7",
														"nodeType": "YulTypedName",
														"src": "6754:3:7",
														"type": ""
													}
												],
												"src": "6645:780:7"
											},
											{
												"body": {
													"nativeSrc": "7561:126:7",
													"nodeType": "YulBlock",
													"src": "7561:126:7",
													"statements": [
														{
															"nativeSrc": "7571:110:7",
															"nodeType": "YulAssignment",
															"src": "7571:110:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7669:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7677:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7677:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr",
																	"nativeSrc": "7585:83:7",
																	"nodeType": "YulIdentifier",
																	"src": "7585:83:7"
																},
																"nativeSrc": "7585:96:7",
																"nodeType": "YulFunctionCall",
																"src": "7585:96:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7571:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "7571:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr",
												"nativeSrc": "7431:256:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "7534:6:7",
														"nodeType": "YulTypedName",
														"src": "7534:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7542:3:7",
														"nodeType": "YulTypedName",
														"src": "7542:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "7550:10:7",
														"nodeType": "YulTypedName",
														"src": "7550:10:7",
														"type": ""
													}
												],
												"src": "7431:256:7"
											},
											{
												"body": {
													"nativeSrc": "7793:38:7",
													"nodeType": "YulBlock",
													"src": "7793:38:7",
													"statements": [
														{
															"nativeSrc": "7803:22:7",
															"nodeType": "YulAssignment",
															"src": "7803:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7815:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7815:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7820:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7820:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7811:3:7"
																},
																"nativeSrc": "7811:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7811:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7803:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7803:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7693:138:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7780:3:7",
														"nodeType": "YulTypedName",
														"src": "7780:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7788:4:7",
														"nodeType": "YulTypedName",
														"src": "7788:4:7",
														"type": ""
													}
												],
												"src": "7693:138:7"
											},
											{
												"body": {
													"nativeSrc": "8079:937:7",
													"nodeType": "YulBlock",
													"src": "8079:937:7",
													"statements": [
														{
															"nativeSrc": "8089:93:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8089:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8176:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8176:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8103:72:7",
																	"nodeType": "YulIdentifier",
																	"src": "8103:72:7"
																},
																"nativeSrc": "8103:79:7",
																"nodeType": "YulFunctionCall",
																"src": "8103:79:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8093:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8093:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8191:118:7",
															"nodeType": "YulAssignment",
															"src": "8191:118:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8297:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8297:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8302:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8302:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8198:98:7",
																	"nodeType": "YulIdentifier",
																	"src": "8198:98:7"
																},
																"nativeSrc": "8198:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8198:111:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8191:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8191:3:7"
																}
															]
														},
														{
															"nativeSrc": "8318:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8318:20:7",
															"value": {
																"name": "pos",
																"nativeSrc": "8335:3:7",
																"nodeType": "YulIdentifier",
																"src": "8335:3:7"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "8322:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8322:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8347:39:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8347:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8363:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8372:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8372:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8380:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8380:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8368:3:7"
																		},
																		"nativeSrc": "8368:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8368:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8359:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:7"
																},
																"nativeSrc": "8359:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8359:27:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "8351:4:7",
																	"nodeType": "YulTypedName",
																	"src": "8351:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8395:96:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8395:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8485:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8485:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "8410:74:7",
																	"nodeType": "YulIdentifier",
																	"src": "8410:74:7"
																},
																"nativeSrc": "8410:81:7",
																"nodeType": "YulFunctionCall",
																"src": "8410:81:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "8399:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8399:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8500:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8500:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "8514:7:7",
																"nodeType": "YulIdentifier",
																"src": "8514:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8504:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8504:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8590:381:7",
																"nodeType": "YulBlock",
																"src": "8590:381:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8611:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8611:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "8620:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8620:4:7"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "8626:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "8626:9:7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "8616:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8616:3:7"
																					},
																					"nativeSrc": "8616:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8616:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8604:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8604:6:7"
																			},
																			"nativeSrc": "8604:33:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8604:33:7"
																		},
																		"nativeSrc": "8604:33:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8604:33:7"
																	},
																	{
																		"nativeSrc": "8650:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8650:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8677:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8677:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8671:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8671:5:7"
																			},
																			"nativeSrc": "8671:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8671:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "8654:13:7",
																				"nodeType": "YulTypedName",
																				"src": "8654:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "8697:122:7",
																		"nodeType": "YulAssignment",
																		"src": "8697:122:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8799:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "8799:13:7"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "8814:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8814:4:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr",
																				"nativeSrc": "8705:93:7",
																				"nodeType": "YulIdentifier",
																				"src": "8705:93:7"
																			},
																			"nativeSrc": "8705:114:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:114:7"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "8697:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8697:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8832:95:7",
																		"nodeType": "YulAssignment",
																		"src": "8832:95:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8920:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8920:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "8842:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8842:77:7"
																			},
																			"nativeSrc": "8842:85:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8842:85:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8832:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8832:6:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8940:21:7",
																		"nodeType": "YulAssignment",
																		"src": "8940:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8951:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8951:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8956:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8956:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8947:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8947:3:7"
																			},
																			"nativeSrc": "8947:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8947:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8940:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8940:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8552:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8555:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8555:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8549:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8549:2:7"
																},
																"nativeSrc": "8549:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8549:13:7"
															},
															"nativeSrc": "8530:441:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8563:18:7",
																"nodeType": "YulBlock",
																"src": "8563:18:7",
																"statements": [
																	{
																		"nativeSrc": "8565:14:7",
																		"nodeType": "YulAssignment",
																		"src": "8565:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8574:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "8574:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8577:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8577:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8570:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8570:3:7"
																			},
																			"nativeSrc": "8570:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8570:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8565:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8565:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8534:14:7",
																"nodeType": "YulBlock",
																"src": "8534:14:7",
																"statements": [
																	{
																		"nativeSrc": "8536:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8536:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8545:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8545:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "8540:1:7",
																				"nodeType": "YulTypedName",
																				"src": "8540:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8530:441:7"
														},
														{
															"nativeSrc": "8980:11:7",
															"nodeType": "YulAssignment",
															"src": "8980:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "8987:4:7",
																"nodeType": "YulIdentifier",
																"src": "8987:4:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8980:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:7"
																}
															]
														},
														{
															"nativeSrc": "9000:10:7",
															"nodeType": "YulAssignment",
															"src": "9000:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9007:3:7",
																"nodeType": "YulIdentifier",
																"src": "9007:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9000:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9000:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7905:1111:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8058:5:7",
														"nodeType": "YulTypedName",
														"src": "8058:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8065:3:7",
														"nodeType": "YulTypedName",
														"src": "8065:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8074:3:7",
														"nodeType": "YulTypedName",
														"src": "8074:3:7",
														"type": ""
													}
												],
												"src": "7905:1111:7"
											},
											{
												"body": {
													"nativeSrc": "9220:275:7",
													"nodeType": "YulBlock",
													"src": "9220:275:7",
													"statements": [
														{
															"nativeSrc": "9230:26:7",
															"nodeType": "YulAssignment",
															"src": "9230:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9242:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9242:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9253:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9253:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9238:3:7"
																},
																"nativeSrc": "9238:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9238:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9230:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9230:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9277:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9277:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9288:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9288:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9273:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9273:3:7"
																		},
																		"nativeSrc": "9273:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9273:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9296:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9296:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9302:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9302:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9292:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9292:3:7"
																		},
																		"nativeSrc": "9292:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9292:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9266:6:7"
																},
																"nativeSrc": "9266:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9266:47:7"
															},
															"nativeSrc": "9266:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9266:47:7"
														},
														{
															"nativeSrc": "9322:166:7",
															"nodeType": "YulAssignment",
															"src": "9322:166:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9474:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9474:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9483:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9483:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9330:143:7",
																	"nodeType": "YulIdentifier",
																	"src": "9330:143:7"
																},
																"nativeSrc": "9330:158:7",
																"nodeType": "YulFunctionCall",
																"src": "9330:158:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9322:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "9022:473:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9192:9:7",
														"nodeType": "YulTypedName",
														"src": "9192:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9204:6:7",
														"nodeType": "YulTypedName",
														"src": "9204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9215:4:7",
														"nodeType": "YulTypedName",
														"src": "9215:4:7",
														"type": ""
													}
												],
												"src": "9022:473:7"
											},
											{
												"body": {
													"nativeSrc": "9566:53:7",
													"nodeType": "YulBlock",
													"src": "9566:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9583:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9583:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9606:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9606:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9588:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9588:17:7"
																		},
																		"nativeSrc": "9588:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9588:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9576:6:7"
																},
																"nativeSrc": "9576:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9576:37:7"
															},
															"nativeSrc": "9576:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9576:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9501:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9554:5:7",
														"nodeType": "YulTypedName",
														"src": "9554:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9561:3:7",
														"nodeType": "YulTypedName",
														"src": "9561:3:7",
														"type": ""
													}
												],
												"src": "9501:118:7"
											},
											{
												"body": {
													"nativeSrc": "9723:124:7",
													"nodeType": "YulBlock",
													"src": "9723:124:7",
													"statements": [
														{
															"nativeSrc": "9733:26:7",
															"nodeType": "YulAssignment",
															"src": "9733:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9745:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9745:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9756:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9756:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9741:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:7"
																},
																"nativeSrc": "9741:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9741:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9733:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9733:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9813:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9813:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9826:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9826:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9837:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9837:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9822:3:7"
																		},
																		"nativeSrc": "9822:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9822:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9769:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9769:43:7"
																},
																"nativeSrc": "9769:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9769:71:7"
															},
															"nativeSrc": "9769:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9769:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9625:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9695:9:7",
														"nodeType": "YulTypedName",
														"src": "9695:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9707:6:7",
														"nodeType": "YulTypedName",
														"src": "9707:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9718:4:7",
														"nodeType": "YulTypedName",
														"src": "9718:4:7",
														"type": ""
													}
												],
												"src": "9625:222:7"
											},
											{
												"body": {
													"nativeSrc": "9936:391:7",
													"nodeType": "YulBlock",
													"src": "9936:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9982:83:7",
																"nodeType": "YulBlock",
																"src": "9982:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9984:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9984:77:7"
																			},
																			"nativeSrc": "9984:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9984:79:7"
																		},
																		"nativeSrc": "9984:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9984:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9957:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9957:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9966:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9966:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9953:3:7"
																		},
																		"nativeSrc": "9953:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9953:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9978:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9978:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9949:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9949:3:7"
																},
																"nativeSrc": "9949:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9949:32:7"
															},
															"nativeSrc": "9946:119:7",
															"nodeType": "YulIf",
															"src": "9946:119:7"
														},
														{
															"nativeSrc": "10075:117:7",
															"nodeType": "YulBlock",
															"src": "10075:117:7",
															"statements": [
																{
																	"nativeSrc": "10090:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10090:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10104:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10094:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10094:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10119:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10119:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10154:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10154:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10165:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10165:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10150:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10150:3:7"
																				},
																				"nativeSrc": "10150:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10150:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10174:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10129:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10129:20:7"
																		},
																		"nativeSrc": "10129:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10129:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10119:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10119:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10202:118:7",
															"nodeType": "YulBlock",
															"src": "10202:118:7",
															"statements": [
																{
																	"nativeSrc": "10217:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10217:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10231:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10247:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10247:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10282:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10282:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10293:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10293:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10278:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10278:3:7"
																				},
																				"nativeSrc": "10278:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10278:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10302:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10302:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10257:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10257:20:7"
																		},
																		"nativeSrc": "10257:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10257:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10247:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9853:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9898:9:7",
														"nodeType": "YulTypedName",
														"src": "9898:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9909:7:7",
														"nodeType": "YulTypedName",
														"src": "9909:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9921:6:7",
														"nodeType": "YulTypedName",
														"src": "9921:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9929:6:7",
														"nodeType": "YulTypedName",
														"src": "9929:6:7",
														"type": ""
													}
												],
												"src": "9853:474:7"
											},
											{
												"body": {
													"nativeSrc": "10507:359:7",
													"nodeType": "YulBlock",
													"src": "10507:359:7",
													"statements": [
														{
															"nativeSrc": "10517:26:7",
															"nodeType": "YulAssignment",
															"src": "10517:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10529:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10529:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10540:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:7"
																},
																"nativeSrc": "10525:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10525:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10517:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10517:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10597:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10597:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10610:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10610:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10621:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10621:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10606:3:7"
																		},
																		"nativeSrc": "10606:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10606:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10553:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10553:43:7"
																},
																"nativeSrc": "10553:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10553:71:7"
															},
															"nativeSrc": "10553:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10553:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10645:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10645:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10656:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10656:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10641:3:7"
																		},
																		"nativeSrc": "10641:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10641:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10665:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10665:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10671:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10671:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10661:3:7"
																		},
																		"nativeSrc": "10661:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10661:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10634:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10634:6:7"
																},
																"nativeSrc": "10634:48:7",
																"nodeType": "YulFunctionCall",
																"src": "10634:48:7"
															},
															"nativeSrc": "10634:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "10634:48:7"
														},
														{
															"nativeSrc": "10691:86:7",
															"nodeType": "YulAssignment",
															"src": "10691:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10763:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10763:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10772:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10772:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10699:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "10699:63:7"
																},
																"nativeSrc": "10699:78:7",
																"nodeType": "YulFunctionCall",
																"src": "10699:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10691:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10691:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10831:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10831:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10844:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10844:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10855:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10855:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:7"
																		},
																		"nativeSrc": "10840:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10787:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10787:43:7"
																},
																"nativeSrc": "10787:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10787:72:7"
															},
															"nativeSrc": "10787:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10787:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "10333:533:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10463:9:7",
														"nodeType": "YulTypedName",
														"src": "10463:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10475:6:7",
														"nodeType": "YulTypedName",
														"src": "10475:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10483:6:7",
														"nodeType": "YulTypedName",
														"src": "10483:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10491:6:7",
														"nodeType": "YulTypedName",
														"src": "10491:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10502:4:7",
														"nodeType": "YulTypedName",
														"src": "10502:4:7",
														"type": ""
													}
												],
												"src": "10333:533:7"
											},
											{
												"body": {
													"nativeSrc": "10900:152:7",
													"nodeType": "YulBlock",
													"src": "10900:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10917:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10917:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10920:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10920:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10910:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:7"
																},
																"nativeSrc": "10910:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10910:88:7"
															},
															"nativeSrc": "10910:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10910:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11014:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11014:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11017:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11017:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11007:6:7"
																},
																"nativeSrc": "11007:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11007:15:7"
															},
															"nativeSrc": "11007:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11007:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11038:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11038:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11041:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11041:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11031:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:7"
																},
																"nativeSrc": "11031:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11031:15:7"
															},
															"nativeSrc": "11031:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11031:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10872:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10872:180:7"
											},
											{
												"body": {
													"nativeSrc": "11109:269:7",
													"nodeType": "YulBlock",
													"src": "11109:269:7",
													"statements": [
														{
															"nativeSrc": "11119:22:7",
															"nodeType": "YulAssignment",
															"src": "11119:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11133:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11133:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11129:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:7"
																},
																"nativeSrc": "11129:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11129:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:7"
																}
															]
														},
														{
															"nativeSrc": "11150:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11150:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11180:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11180:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11186:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11186:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11176:3:7"
																},
																"nativeSrc": "11176:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11176:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11154:18:7",
																	"nodeType": "YulTypedName",
																	"src": "11154:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11227:51:7",
																"nodeType": "YulBlock",
																"src": "11227:51:7",
																"statements": [
																	{
																		"nativeSrc": "11241:27:7",
																		"nodeType": "YulAssignment",
																		"src": "11241:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11255:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11255:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11263:4:7",
																					"nodeType": "YulLiteral",
																					"src": "11263:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11251:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11251:3:7"
																			},
																			"nativeSrc": "11251:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11251:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11241:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11241:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11207:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11207:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:7"
																},
																"nativeSrc": "11200:26:7",
																"nodeType": "YulFunctionCall",
																"src": "11200:26:7"
															},
															"nativeSrc": "11197:81:7",
															"nodeType": "YulIf",
															"src": "11197:81:7"
														},
														{
															"body": {
																"nativeSrc": "11330:42:7",
																"nodeType": "YulBlock",
																"src": "11330:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11344:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11344:16:7"
																			},
																			"nativeSrc": "11344:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11344:18:7"
																		},
																		"nativeSrc": "11344:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11344:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11294:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "11294:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11317:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11317:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11325:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11325:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11314:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11314:2:7"
																		},
																		"nativeSrc": "11314:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11291:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11291:2:7"
																},
																"nativeSrc": "11291:38:7",
																"nodeType": "YulFunctionCall",
																"src": "11291:38:7"
															},
															"nativeSrc": "11288:84:7",
															"nodeType": "YulIf",
															"src": "11288:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11058:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11093:4:7",
														"nodeType": "YulTypedName",
														"src": "11093:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11102:6:7",
														"nodeType": "YulTypedName",
														"src": "11102:6:7",
														"type": ""
													}
												],
												"src": "11058:320:7"
											},
											{
												"body": {
													"nativeSrc": "11490:59:7",
													"nodeType": "YulBlock",
													"src": "11490:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11512:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11512:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11520:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11520:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11508:3:7"
																		},
																		"nativeSrc": "11508:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11508:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420666f6f64204944",
																		"kind": "string",
																		"nativeSrc": "11524:17:7",
																		"nodeType": "YulLiteral",
																		"src": "11524:17:7",
																		"type": "",
																		"value": "Invalid food ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11501:6:7"
																},
																"nativeSrc": "11501:41:7",
																"nodeType": "YulFunctionCall",
																"src": "11501:41:7"
															},
															"nativeSrc": "11501:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "11501:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099",
												"nativeSrc": "11384:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11482:6:7",
														"nodeType": "YulTypedName",
														"src": "11482:6:7",
														"type": ""
													}
												],
												"src": "11384:165:7"
											},
											{
												"body": {
													"nativeSrc": "11701:220:7",
													"nodeType": "YulBlock",
													"src": "11701:220:7",
													"statements": [
														{
															"nativeSrc": "11711:74:7",
															"nodeType": "YulAssignment",
															"src": "11711:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11777:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11777:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11782:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11782:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11718:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11718:58:7"
																},
																"nativeSrc": "11718:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11718:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11711:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11711:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11883:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11883:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099",
																	"nativeSrc": "11794:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11794:88:7"
																},
																"nativeSrc": "11794:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11794:93:7"
															},
															"nativeSrc": "11794:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11794:93:7"
														},
														{
															"nativeSrc": "11896:19:7",
															"nodeType": "YulAssignment",
															"src": "11896:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11907:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11907:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11912:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11903:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11903:3:7"
																},
																"nativeSrc": "11903:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11903:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11896:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11555:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11689:3:7",
														"nodeType": "YulTypedName",
														"src": "11689:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11697:3:7",
														"nodeType": "YulTypedName",
														"src": "11697:3:7",
														"type": ""
													}
												],
												"src": "11555:366:7"
											},
											{
												"body": {
													"nativeSrc": "12098:248:7",
													"nodeType": "YulBlock",
													"src": "12098:248:7",
													"statements": [
														{
															"nativeSrc": "12108:26:7",
															"nodeType": "YulAssignment",
															"src": "12108:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12120:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12120:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12131:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12131:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12116:3:7"
																},
																"nativeSrc": "12116:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12116:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12108:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12108:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12155:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12155:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12166:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12166:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12151:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12151:3:7"
																		},
																		"nativeSrc": "12151:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12151:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12174:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12174:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12180:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12180:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12170:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12170:3:7"
																		},
																		"nativeSrc": "12170:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12170:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:7"
																},
																"nativeSrc": "12144:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12144:47:7"
															},
															"nativeSrc": "12144:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12144:47:7"
														},
														{
															"nativeSrc": "12200:139:7",
															"nodeType": "YulAssignment",
															"src": "12200:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12334:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12208:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12208:124:7"
																},
																"nativeSrc": "12208:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12208:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12200:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12200:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11927:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12078:9:7",
														"nodeType": "YulTypedName",
														"src": "12078:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12093:4:7",
														"nodeType": "YulTypedName",
														"src": "12093:4:7",
														"type": ""
													}
												],
												"src": "11927:419:7"
											},
											{
												"body": {
													"nativeSrc": "12380:152:7",
													"nodeType": "YulBlock",
													"src": "12380:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12397:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12397:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12400:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12400:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12390:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12390:6:7"
																},
																"nativeSrc": "12390:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12390:88:7"
															},
															"nativeSrc": "12390:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12390:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12494:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12494:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12497:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12497:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12487:6:7"
																},
																"nativeSrc": "12487:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12487:15:7"
															},
															"nativeSrc": "12487:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12487:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12518:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12518:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12521:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12511:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12511:6:7"
																},
																"nativeSrc": "12511:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12511:15:7"
															},
															"nativeSrc": "12511:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12511:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12352:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12352:180:7"
											},
											{
												"body": {
													"nativeSrc": "12583:149:7",
													"nodeType": "YulBlock",
													"src": "12583:149:7",
													"statements": [
														{
															"nativeSrc": "12593:25:7",
															"nodeType": "YulAssignment",
															"src": "12593:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12616:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12616:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12598:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12598:17:7"
																},
																"nativeSrc": "12598:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12598:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12593:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12593:1:7"
																}
															]
														},
														{
															"nativeSrc": "12627:25:7",
															"nodeType": "YulAssignment",
															"src": "12627:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12650:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12650:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12632:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12632:17:7"
																},
																"nativeSrc": "12632:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12632:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12627:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12627:1:7"
																}
															]
														},
														{
															"nativeSrc": "12661:17:7",
															"nodeType": "YulAssignment",
															"src": "12661:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12673:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12673:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12676:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12676:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12669:3:7"
																},
																"nativeSrc": "12669:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12669:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12661:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12661:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12703:22:7",
																"nodeType": "YulBlock",
																"src": "12703:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12705:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12705:16:7"
																			},
																			"nativeSrc": "12705:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12705:18:7"
																		},
																		"nativeSrc": "12705:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12705:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12694:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12694:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12700:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12700:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12691:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12691:2:7"
																},
																"nativeSrc": "12691:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12691:11:7"
															},
															"nativeSrc": "12688:37:7",
															"nodeType": "YulIf",
															"src": "12688:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12538:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12569:1:7",
														"nodeType": "YulTypedName",
														"src": "12569:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12572:1:7",
														"nodeType": "YulTypedName",
														"src": "12572:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12578:4:7",
														"nodeType": "YulTypedName",
														"src": "12578:4:7",
														"type": ""
													}
												],
												"src": "12538:194:7"
											},
											{
												"body": {
													"nativeSrc": "12766:152:7",
													"nodeType": "YulBlock",
													"src": "12766:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12783:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12783:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12786:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12786:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12776:6:7"
																},
																"nativeSrc": "12776:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12776:88:7"
															},
															"nativeSrc": "12776:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12776:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12880:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12880:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12883:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12883:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12873:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12873:6:7"
																},
																"nativeSrc": "12873:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12873:15:7"
															},
															"nativeSrc": "12873:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12873:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12904:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12904:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12907:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12907:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12897:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12897:6:7"
																},
																"nativeSrc": "12897:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12897:15:7"
															},
															"nativeSrc": "12897:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12897:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12738:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12738:180:7"
											},
											{
												"body": {
													"nativeSrc": "13030:116:7",
													"nodeType": "YulBlock",
													"src": "13030:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13052:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13052:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13060:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13060:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13048:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13048:3:7"
																		},
																		"nativeSrc": "13048:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13048:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f2072656465656d2066",
																		"kind": "string",
																		"nativeSrc": "13064:34:7",
																		"nodeType": "YulLiteral",
																		"src": "13064:34:7",
																		"type": "",
																		"value": "Insufficient balance to redeem f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13041:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13041:6:7"
																},
																"nativeSrc": "13041:58:7",
																"nodeType": "YulFunctionCall",
																"src": "13041:58:7"
															},
															"nativeSrc": "13041:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "13041:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13120:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13120:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13128:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13116:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13116:3:7"
																		},
																		"nativeSrc": "13116:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13116:15:7"
																	},
																	{
																		"hexValue": "6f6f64",
																		"kind": "string",
																		"nativeSrc": "13133:5:7",
																		"nodeType": "YulLiteral",
																		"src": "13133:5:7",
																		"type": "",
																		"value": "ood"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13109:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13109:6:7"
																},
																"nativeSrc": "13109:30:7",
																"nodeType": "YulFunctionCall",
																"src": "13109:30:7"
															},
															"nativeSrc": "13109:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "13109:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15",
												"nativeSrc": "12924:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13022:6:7",
														"nodeType": "YulTypedName",
														"src": "13022:6:7",
														"type": ""
													}
												],
												"src": "12924:222:7"
											},
											{
												"body": {
													"nativeSrc": "13298:220:7",
													"nodeType": "YulBlock",
													"src": "13298:220:7",
													"statements": [
														{
															"nativeSrc": "13308:74:7",
															"nodeType": "YulAssignment",
															"src": "13308:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13374:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13374:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13379:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13315:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13315:58:7"
																},
																"nativeSrc": "13315:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13315:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13308:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13480:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15",
																	"nativeSrc": "13391:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13391:88:7"
																},
																"nativeSrc": "13391:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13391:93:7"
															},
															"nativeSrc": "13391:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13391:93:7"
														},
														{
															"nativeSrc": "13493:19:7",
															"nodeType": "YulAssignment",
															"src": "13493:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13504:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13504:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13509:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13500:3:7"
																},
																"nativeSrc": "13500:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13500:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13493:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13152:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13286:3:7",
														"nodeType": "YulTypedName",
														"src": "13286:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13294:3:7",
														"nodeType": "YulTypedName",
														"src": "13294:3:7",
														"type": ""
													}
												],
												"src": "13152:366:7"
											},
											{
												"body": {
													"nativeSrc": "13695:248:7",
													"nodeType": "YulBlock",
													"src": "13695:248:7",
													"statements": [
														{
															"nativeSrc": "13705:26:7",
															"nodeType": "YulAssignment",
															"src": "13705:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13717:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13717:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13728:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13728:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13713:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13713:3:7"
																},
																"nativeSrc": "13713:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13713:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13705:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13705:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13752:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13752:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13763:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13763:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13748:3:7"
																		},
																		"nativeSrc": "13748:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13748:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13771:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13771:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13777:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13777:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13767:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13767:3:7"
																		},
																		"nativeSrc": "13767:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13767:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13741:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13741:6:7"
																},
																"nativeSrc": "13741:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13741:47:7"
															},
															"nativeSrc": "13741:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13741:47:7"
														},
														{
															"nativeSrc": "13797:139:7",
															"nodeType": "YulAssignment",
															"src": "13797:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13931:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13931:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13805:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13805:124:7"
																},
																"nativeSrc": "13805:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13805:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13797:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13797:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13524:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13675:9:7",
														"nodeType": "YulTypedName",
														"src": "13675:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13690:4:7",
														"nodeType": "YulTypedName",
														"src": "13690:4:7",
														"type": ""
													}
												],
												"src": "13524:419:7"
											},
											{
												"body": {
													"nativeSrc": "13977:152:7",
													"nodeType": "YulBlock",
													"src": "13977:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13994:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13994:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13997:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13997:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:7"
																},
																"nativeSrc": "13987:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13987:88:7"
															},
															"nativeSrc": "13987:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13987:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14091:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14091:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14094:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14094:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14084:6:7"
																},
																"nativeSrc": "14084:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14084:15:7"
															},
															"nativeSrc": "14084:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14084:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14115:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14115:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14118:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14118:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14108:6:7"
																},
																"nativeSrc": "14108:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14108:15:7"
															},
															"nativeSrc": "14108:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14108:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "13949:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13949:180:7"
											},
											{
												"body": {
													"nativeSrc": "14189:87:7",
													"nodeType": "YulBlock",
													"src": "14189:87:7",
													"statements": [
														{
															"nativeSrc": "14199:11:7",
															"nodeType": "YulAssignment",
															"src": "14199:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "14207:3:7",
																"nodeType": "YulIdentifier",
																"src": "14207:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14199:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14227:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "14230:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14230:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14220:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14220:6:7"
																},
																"nativeSrc": "14220:14:7",
																"nodeType": "YulFunctionCall",
																"src": "14220:14:7"
															},
															"nativeSrc": "14220:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "14220:14:7"
														},
														{
															"nativeSrc": "14243:26:7",
															"nodeType": "YulAssignment",
															"src": "14243:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14261:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14261:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14264:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14264:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "14251:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14251:9:7"
																},
																"nativeSrc": "14251:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14251:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14243:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14243:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "14135:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14176:3:7",
														"nodeType": "YulTypedName",
														"src": "14176:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14184:4:7",
														"nodeType": "YulTypedName",
														"src": "14184:4:7",
														"type": ""
													}
												],
												"src": "14135:141:7"
											},
											{
												"body": {
													"nativeSrc": "14326:49:7",
													"nodeType": "YulBlock",
													"src": "14326:49:7",
													"statements": [
														{
															"nativeSrc": "14336:33:7",
															"nodeType": "YulAssignment",
															"src": "14336:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14354:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14354:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14361:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14361:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14350:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14350:3:7"
																		},
																		"nativeSrc": "14350:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14350:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14366:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14366:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14346:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14346:3:7"
																},
																"nativeSrc": "14346:23:7",
																"nodeType": "YulFunctionCall",
																"src": "14346:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14336:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14282:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14309:5:7",
														"nodeType": "YulTypedName",
														"src": "14309:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14319:6:7",
														"nodeType": "YulTypedName",
														"src": "14319:6:7",
														"type": ""
													}
												],
												"src": "14282:93:7"
											},
											{
												"body": {
													"nativeSrc": "14434:54:7",
													"nodeType": "YulBlock",
													"src": "14434:54:7",
													"statements": [
														{
															"nativeSrc": "14444:37:7",
															"nodeType": "YulAssignment",
															"src": "14444:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14469:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14469:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14475:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14475:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14465:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14465:3:7"
																},
																"nativeSrc": "14465:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14465:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14444:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14444:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14381:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14409:4:7",
														"nodeType": "YulTypedName",
														"src": "14409:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14415:5:7",
														"nodeType": "YulTypedName",
														"src": "14415:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14425:8:7",
														"nodeType": "YulTypedName",
														"src": "14425:8:7",
														"type": ""
													}
												],
												"src": "14381:107:7"
											},
											{
												"body": {
													"nativeSrc": "14570:317:7",
													"nodeType": "YulBlock",
													"src": "14570:317:7",
													"statements": [
														{
															"nativeSrc": "14580:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14580:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14601:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "14601:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14613:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14597:3:7"
																},
																"nativeSrc": "14597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14597:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14584:9:7",
																	"nodeType": "YulTypedName",
																	"src": "14584:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14624:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14624:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14655:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14655:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14666:66:7",
																		"nodeType": "YulLiteral",
																		"src": "14666:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14636:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14636:18:7"
																},
																"nativeSrc": "14636:97:7",
																"nodeType": "YulFunctionCall",
																"src": "14636:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14628:4:7",
																	"nodeType": "YulTypedName",
																	"src": "14628:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14742:51:7",
															"nodeType": "YulAssignment",
															"src": "14742:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14773:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14773:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14784:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "14784:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14754:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14754:18:7"
																},
																"nativeSrc": "14754:39:7",
																"nodeType": "YulFunctionCall",
																"src": "14754:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14742:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14742:8:7"
																}
															]
														},
														{
															"nativeSrc": "14802:30:7",
															"nodeType": "YulAssignment",
															"src": "14802:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14815:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14815:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14826:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14826:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14822:3:7"
																		},
																		"nativeSrc": "14822:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14822:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14811:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:7"
																},
																"nativeSrc": "14811:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14811:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14802:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14802:5:7"
																}
															]
														},
														{
															"nativeSrc": "14841:40:7",
															"nodeType": "YulAssignment",
															"src": "14841:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14854:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14854:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14865:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "14865:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14875:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14875:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14861:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14861:3:7"
																		},
																		"nativeSrc": "14861:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14861:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14851:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14851:2:7"
																},
																"nativeSrc": "14851:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14851:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14841:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14841:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14494:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14531:5:7",
														"nodeType": "YulTypedName",
														"src": "14531:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14538:10:7",
														"nodeType": "YulTypedName",
														"src": "14538:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14550:8:7",
														"nodeType": "YulTypedName",
														"src": "14550:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14563:6:7",
														"nodeType": "YulTypedName",
														"src": "14563:6:7",
														"type": ""
													}
												],
												"src": "14494:393:7"
											},
											{
												"body": {
													"nativeSrc": "14925:28:7",
													"nodeType": "YulBlock",
													"src": "14925:28:7",
													"statements": [
														{
															"nativeSrc": "14935:12:7",
															"nodeType": "YulAssignment",
															"src": "14935:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "14942:5:7",
																"nodeType": "YulIdentifier",
																"src": "14942:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14935:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14893:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14911:5:7",
														"nodeType": "YulTypedName",
														"src": "14911:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14921:3:7",
														"nodeType": "YulTypedName",
														"src": "14921:3:7",
														"type": ""
													}
												],
												"src": "14893:60:7"
											},
											{
												"body": {
													"nativeSrc": "15019:82:7",
													"nodeType": "YulBlock",
													"src": "15019:82:7",
													"statements": [
														{
															"nativeSrc": "15029:66:7",
															"nodeType": "YulAssignment",
															"src": "15029:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15087:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "15087:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15069:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "15069:17:7"
																				},
																				"nativeSrc": "15069:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15069:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15060:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "15060:8:7"
																		},
																		"nativeSrc": "15060:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15060:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15042:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15042:17:7"
																},
																"nativeSrc": "15042:53:7",
																"nodeType": "YulFunctionCall",
																"src": "15042:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15029:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "15029:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14959:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14999:5:7",
														"nodeType": "YulTypedName",
														"src": "14999:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15009:9:7",
														"nodeType": "YulTypedName",
														"src": "15009:9:7",
														"type": ""
													}
												],
												"src": "14959:142:7"
											},
											{
												"body": {
													"nativeSrc": "15154:28:7",
													"nodeType": "YulBlock",
													"src": "15154:28:7",
													"statements": [
														{
															"nativeSrc": "15164:12:7",
															"nodeType": "YulAssignment",
															"src": "15164:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "15171:5:7",
																"nodeType": "YulIdentifier",
																"src": "15171:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15164:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15107:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15140:5:7",
														"nodeType": "YulTypedName",
														"src": "15140:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15150:3:7",
														"nodeType": "YulTypedName",
														"src": "15150:3:7",
														"type": ""
													}
												],
												"src": "15107:75:7"
											},
											{
												"body": {
													"nativeSrc": "15264:193:7",
													"nodeType": "YulBlock",
													"src": "15264:193:7",
													"statements": [
														{
															"nativeSrc": "15274:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15274:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15329:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "15329:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15298:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15298:30:7"
																},
																"nativeSrc": "15298:39:7",
																"nodeType": "YulFunctionCall",
																"src": "15298:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15278:16:7",
																	"nodeType": "YulTypedName",
																	"src": "15278:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15353:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15353:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15393:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15393:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15387:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15387:5:7"
																				},
																				"nativeSrc": "15387:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15387:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15400:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15400:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15432:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "15432:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15408:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "15408:23:7"
																				},
																				"nativeSrc": "15408:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15408:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15359:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "15359:27:7"
																		},
																		"nativeSrc": "15359:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15359:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15346:6:7"
																},
																"nativeSrc": "15346:105:7",
																"nodeType": "YulFunctionCall",
																"src": "15346:105:7"
															},
															"nativeSrc": "15346:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "15346:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "15188:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15241:4:7",
														"nodeType": "YulTypedName",
														"src": "15241:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15247:6:7",
														"nodeType": "YulTypedName",
														"src": "15247:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15255:7:7",
														"nodeType": "YulTypedName",
														"src": "15255:7:7",
														"type": ""
													}
												],
												"src": "15188:269:7"
											},
											{
												"body": {
													"nativeSrc": "15512:24:7",
													"nodeType": "YulBlock",
													"src": "15512:24:7",
													"statements": [
														{
															"nativeSrc": "15522:8:7",
															"nodeType": "YulAssignment",
															"src": "15522:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "15529:1:7",
																"nodeType": "YulLiteral",
																"src": "15529:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15522:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15522:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15463:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15508:3:7",
														"nodeType": "YulTypedName",
														"src": "15508:3:7",
														"type": ""
													}
												],
												"src": "15463:73:7"
											},
											{
												"body": {
													"nativeSrc": "15595:136:7",
													"nodeType": "YulBlock",
													"src": "15595:136:7",
													"statements": [
														{
															"nativeSrc": "15605:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15605:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15619:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15619:30:7"
																},
																"nativeSrc": "15619:32:7",
																"nodeType": "YulFunctionCall",
																"src": "15619:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15609:6:7",
																	"nodeType": "YulTypedName",
																	"src": "15609:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15704:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15704:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15710:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15710:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15718:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15660:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15660:43:7"
																},
																"nativeSrc": "15660:65:7",
																"nodeType": "YulFunctionCall",
																"src": "15660:65:7"
															},
															"nativeSrc": "15660:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "15660:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15542:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15581:4:7",
														"nodeType": "YulTypedName",
														"src": "15581:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15587:6:7",
														"nodeType": "YulTypedName",
														"src": "15587:6:7",
														"type": ""
													}
												],
												"src": "15542:189:7"
											},
											{
												"body": {
													"nativeSrc": "15787:136:7",
													"nodeType": "YulBlock",
													"src": "15787:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15854:63:7",
																"nodeType": "YulBlock",
																"src": "15854:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15898:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15898:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15905:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15905:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15868:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "15868:29:7"
																			},
																			"nativeSrc": "15868:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15868:39:7"
																		},
																		"nativeSrc": "15868:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15868:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15807:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15807:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15814:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15814:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15804:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15804:2:7"
																},
																"nativeSrc": "15804:14:7",
																"nodeType": "YulFunctionCall",
																"src": "15804:14:7"
															},
															"nativeSrc": "15797:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15819:26:7",
																"nodeType": "YulBlock",
																"src": "15819:26:7",
																"statements": [
																	{
																		"nativeSrc": "15821:22:7",
																		"nodeType": "YulAssignment",
																		"src": "15821:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15834:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15834:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15841:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15841:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15830:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15830:3:7"
																			},
																			"nativeSrc": "15830:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15830:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15821:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15821:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15801:2:7",
																"nodeType": "YulBlock",
																"src": "15801:2:7",
																"statements": []
															},
															"src": "15797:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15737:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15775:5:7",
														"nodeType": "YulTypedName",
														"src": "15775:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15782:3:7",
														"nodeType": "YulTypedName",
														"src": "15782:3:7",
														"type": ""
													}
												],
												"src": "15737:186:7"
											},
											{
												"body": {
													"nativeSrc": "16008:464:7",
													"nodeType": "YulBlock",
													"src": "16008:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16034:431:7",
																"nodeType": "YulBlock",
																"src": "16034:431:7",
																"statements": [
																	{
																		"nativeSrc": "16048:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16048:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "16096:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "16096:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "16064:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "16064:31:7"
																			},
																			"nativeSrc": "16064:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16064:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "16052:8:7",
																				"nodeType": "YulTypedName",
																				"src": "16052:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16115:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16115:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "16138:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "16138:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "16166:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "16166:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "16148:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "16148:17:7"
																					},
																					"nativeSrc": "16148:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16148:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16134:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16134:3:7"
																			},
																			"nativeSrc": "16134:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16134:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "16119:11:7",
																				"nodeType": "YulTypedName",
																				"src": "16119:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16335:27:7",
																			"nodeType": "YulBlock",
																			"src": "16335:27:7",
																			"statements": [
																				{
																					"nativeSrc": "16337:23:7",
																					"nodeType": "YulAssignment",
																					"src": "16337:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16352:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "16352:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16337:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "16337:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16319:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "16319:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16331:2:7",
																					"nodeType": "YulLiteral",
																					"src": "16331:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16316:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "16316:2:7"
																			},
																			"nativeSrc": "16316:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16316:18:7"
																		},
																		"nativeSrc": "16313:49:7",
																		"nodeType": "YulIf",
																		"src": "16313:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16404:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "16404:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16421:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "16421:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16449:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "16449:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16431:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "16431:17:7"
																							},
																							"nativeSrc": "16431:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16431:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16417:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16417:3:7"
																					},
																					"nativeSrc": "16417:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16417:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16375:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "16375:28:7"
																			},
																			"nativeSrc": "16375:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16375:80:7"
																		},
																		"nativeSrc": "16375:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16375:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "16025:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16025:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16030:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16030:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16022:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16022:2:7"
																},
																"nativeSrc": "16022:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16022:11:7"
															},
															"nativeSrc": "16019:446:7",
															"nodeType": "YulIf",
															"src": "16019:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15929:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15984:5:7",
														"nodeType": "YulTypedName",
														"src": "15984:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15991:3:7",
														"nodeType": "YulTypedName",
														"src": "15991:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15996:10:7",
														"nodeType": "YulTypedName",
														"src": "15996:10:7",
														"type": ""
													}
												],
												"src": "15929:543:7"
											},
											{
												"body": {
													"nativeSrc": "16541:54:7",
													"nodeType": "YulBlock",
													"src": "16541:54:7",
													"statements": [
														{
															"nativeSrc": "16551:37:7",
															"nodeType": "YulAssignment",
															"src": "16551:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16576:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16576:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16582:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16582:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16572:3:7"
																},
																"nativeSrc": "16572:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16572:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16551:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16551:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16478:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16516:4:7",
														"nodeType": "YulTypedName",
														"src": "16516:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16522:5:7",
														"nodeType": "YulTypedName",
														"src": "16522:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16532:8:7",
														"nodeType": "YulTypedName",
														"src": "16532:8:7",
														"type": ""
													}
												],
												"src": "16478:117:7"
											},
											{
												"body": {
													"nativeSrc": "16652:118:7",
													"nodeType": "YulBlock",
													"src": "16652:118:7",
													"statements": [
														{
															"nativeSrc": "16662:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16662:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16711:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16711:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16714:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "16714:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16707:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16707:3:7"
																				},
																				"nativeSrc": "16707:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16707:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16726:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16726:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16722:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16722:3:7"
																				},
																				"nativeSrc": "16722:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16722:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16678:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "16678:28:7"
																		},
																		"nativeSrc": "16678:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16678:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16674:3:7"
																},
																"nativeSrc": "16674:56:7",
																"nodeType": "YulFunctionCall",
																"src": "16674:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16666:4:7",
																	"nodeType": "YulTypedName",
																	"src": "16666:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16739:25:7",
															"nodeType": "YulAssignment",
															"src": "16739:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16753:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16753:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16759:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16759:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16749:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16749:3:7"
																},
																"nativeSrc": "16749:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16749:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16739:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16739:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16601:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16629:4:7",
														"nodeType": "YulTypedName",
														"src": "16629:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16635:5:7",
														"nodeType": "YulTypedName",
														"src": "16635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16645:6:7",
														"nodeType": "YulTypedName",
														"src": "16645:6:7",
														"type": ""
													}
												],
												"src": "16601:169:7"
											},
											{
												"body": {
													"nativeSrc": "16856:214:7",
													"nodeType": "YulBlock",
													"src": "16856:214:7",
													"statements": [
														{
															"nativeSrc": "16989:37:7",
															"nodeType": "YulAssignment",
															"src": "16989:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17016:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17016:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "17022:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17022:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16997:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "16997:18:7"
																},
																"nativeSrc": "16997:29:7",
																"nodeType": "YulFunctionCall",
																"src": "16997:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16989:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16989:4:7"
																}
															]
														},
														{
															"nativeSrc": "17035:29:7",
															"nodeType": "YulAssignment",
															"src": "17035:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17046:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17046:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17056:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17056:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "17059:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17059:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "17052:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17052:3:7"
																		},
																		"nativeSrc": "17052:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17052:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17043:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17043:2:7"
																},
																"nativeSrc": "17043:21:7",
																"nodeType": "YulFunctionCall",
																"src": "17043:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "17035:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17035:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16775:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16837:4:7",
														"nodeType": "YulTypedName",
														"src": "16837:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16843:3:7",
														"nodeType": "YulTypedName",
														"src": "16843:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16851:4:7",
														"nodeType": "YulTypedName",
														"src": "16851:4:7",
														"type": ""
													}
												],
												"src": "16775:295:7"
											},
											{
												"body": {
													"nativeSrc": "17167:1303:7",
													"nodeType": "YulBlock",
													"src": "17167:1303:7",
													"statements": [
														{
															"nativeSrc": "17178:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17178:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "17225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17225:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17192:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "17192:32:7"
																},
																"nativeSrc": "17192:37:7",
																"nodeType": "YulFunctionCall",
																"src": "17192:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "17182:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17182:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17314:22:7",
																"nodeType": "YulBlock",
																"src": "17314:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17316:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17316:16:7"
																			},
																			"nativeSrc": "17316:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17316:18:7"
																		},
																		"nativeSrc": "17316:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17316:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17286:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17286:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17294:18:7",
																		"nodeType": "YulLiteral",
																		"src": "17294:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17283:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17283:2:7"
																},
																"nativeSrc": "17283:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17283:30:7"
															},
															"nativeSrc": "17280:56:7",
															"nodeType": "YulIf",
															"src": "17280:56:7"
														},
														{
															"nativeSrc": "17346:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17346:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17392:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17392:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17386:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "17386:5:7"
																		},
																		"nativeSrc": "17386:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17386:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17360:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "17360:25:7"
																},
																"nativeSrc": "17360:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17360:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17350:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17350:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17491:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17491:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17497:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17497:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17505:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17505:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17445:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "17445:45:7"
																},
																"nativeSrc": "17445:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17445:67:7"
															},
															"nativeSrc": "17445:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "17445:67:7"
														},
														{
															"nativeSrc": "17522:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17522:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17539:1:7",
																"nodeType": "YulLiteral",
																"src": "17539:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17526:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17526:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17550:17:7",
															"nodeType": "YulAssignment",
															"src": "17550:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17563:4:7",
																"nodeType": "YulLiteral",
																"src": "17563:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17550:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "17550:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17614:611:7",
																		"nodeType": "YulBlock",
																		"src": "17614:611:7",
																		"statements": [
																			{
																				"nativeSrc": "17628:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17628:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17647:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17647:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17659:4:7",
																									"nodeType": "YulLiteral",
																									"src": "17659:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17655:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17655:3:7"
																							},
																							"nativeSrc": "17655:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17655:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17643:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "17643:3:7"
																					},
																					"nativeSrc": "17643:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17643:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17632:7:7",
																						"nodeType": "YulTypedName",
																						"src": "17632:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17679:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17679:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17725:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17725:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17693:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "17693:31:7"
																					},
																					"nativeSrc": "17693:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17693:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17683:6:7",
																						"nodeType": "YulTypedName",
																						"src": "17683:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17743:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17743:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17752:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17752:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17747:1:7",
																						"nodeType": "YulTypedName",
																						"src": "17747:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17811:163:7",
																					"nodeType": "YulBlock",
																					"src": "17811:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17836:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17836:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17854:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17854:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17859:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "17859:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17850:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17850:3:7"
																												},
																												"nativeSrc": "17850:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17850:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "17844:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "17844:5:7"
																										},
																										"nativeSrc": "17844:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17844:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17829:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17829:6:7"
																								},
																								"nativeSrc": "17829:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17829:42:7"
																							},
																							"nativeSrc": "17829:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17829:42:7"
																						},
																						{
																							"nativeSrc": "17888:24:7",
																							"nodeType": "YulAssignment",
																							"src": "17888:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17902:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17902:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17910:1:7",
																										"nodeType": "YulLiteral",
																										"src": "17910:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17898:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17898:3:7"
																								},
																								"nativeSrc": "17898:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17898:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17888:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17888:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17929:31:7",
																							"nodeType": "YulAssignment",
																							"src": "17929:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17946:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "17946:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17957:2:7",
																										"nodeType": "YulLiteral",
																										"src": "17957:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17942:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17942:3:7"
																								},
																								"nativeSrc": "17942:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17942:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17929:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "17929:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17777:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "17777:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17780:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17780:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17774:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17774:2:7"
																					},
																					"nativeSrc": "17774:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17774:14:7"
																				},
																				"nativeSrc": "17766:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17789:21:7",
																					"nodeType": "YulBlock",
																					"src": "17789:21:7",
																					"statements": [
																						{
																							"nativeSrc": "17791:17:7",
																							"nodeType": "YulAssignment",
																							"src": "17791:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17800:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "17800:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17803:4:7",
																										"nodeType": "YulLiteral",
																										"src": "17803:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17796:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17796:3:7"
																								},
																								"nativeSrc": "17796:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17796:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17791:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "17791:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17770:3:7",
																					"nodeType": "YulBlock",
																					"src": "17770:3:7",
																					"statements": []
																				},
																				"src": "17766:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "18010:156:7",
																					"nodeType": "YulBlock",
																					"src": "18010:156:7",
																					"statements": [
																						{
																							"nativeSrc": "18028:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "18028:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18055:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18055:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18060:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18060:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18051:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18051:3:7"
																										},
																										"nativeSrc": "18051:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18051:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18045:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18045:5:7"
																								},
																								"nativeSrc": "18045:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18045:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "18032:9:7",
																									"nodeType": "YulTypedName",
																									"src": "18032:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "18095:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "18095:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "18122:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18122:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "18137:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "18137:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "18145:4:7",
																														"nodeType": "YulLiteral",
																														"src": "18145:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "18133:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "18133:3:7"
																												},
																												"nativeSrc": "18133:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "18133:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "18103:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "18103:18:7"
																										},
																										"nativeSrc": "18103:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18103:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "18088:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18088:6:7"
																								},
																								"nativeSrc": "18088:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18088:64:7"
																							},
																							"nativeSrc": "18088:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "18088:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17993:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17993:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "18002:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "18002:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17990:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17990:2:7"
																					},
																					"nativeSrc": "17990:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17990:19:7"
																				},
																				"nativeSrc": "17987:179:7",
																				"nodeType": "YulIf",
																				"src": "17987:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18186:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18186:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "18200:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "18200:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "18208:1:7",
																											"nodeType": "YulLiteral",
																											"src": "18208:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "18196:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "18196:3:7"
																									},
																									"nativeSrc": "18196:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "18196:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "18212:1:7",
																									"nodeType": "YulLiteral",
																									"src": "18212:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "18192:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "18192:3:7"
																							},
																							"nativeSrc": "18192:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18192:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18179:6:7"
																					},
																					"nativeSrc": "18179:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18179:36:7"
																				},
																				"nativeSrc": "18179:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18179:36:7"
																			}
																		]
																	},
																	"nativeSrc": "17607:618:7",
																	"nodeType": "YulCase",
																	"src": "17607:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17612:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "18242:222:7",
																		"nodeType": "YulBlock",
																		"src": "18242:222:7",
																		"statements": [
																			{
																				"nativeSrc": "18256:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18256:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18269:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18269:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18260:5:7",
																						"nodeType": "YulTypedName",
																						"src": "18260:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18293:67:7",
																					"nodeType": "YulBlock",
																					"src": "18293:67:7",
																					"statements": [
																						{
																							"nativeSrc": "18311:35:7",
																							"nodeType": "YulAssignment",
																							"src": "18311:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18330:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18330:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18335:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18335:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18326:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18326:3:7"
																										},
																										"nativeSrc": "18326:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18326:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "18320:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18320:5:7"
																								},
																								"nativeSrc": "18320:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18320:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18311:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18311:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18286:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "18286:6:7"
																				},
																				"nativeSrc": "18283:77:7",
																				"nodeType": "YulIf",
																				"src": "18283:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18380:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18380:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18439:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18439:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18446:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18446:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18386:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "18386:52:7"
																							},
																							"nativeSrc": "18386:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18386:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18373:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18373:6:7"
																					},
																					"nativeSrc": "18373:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18373:81:7"
																				},
																				"nativeSrc": "18373:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18373:81:7"
																			}
																		]
																	},
																	"nativeSrc": "18234:230:7",
																	"nodeType": "YulCase",
																	"src": "18234:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17587:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17595:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17595:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17584:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17584:2:7"
																},
																"nativeSrc": "17584:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17584:14:7"
															},
															"nativeSrc": "17577:887:7",
															"nodeType": "YulSwitch",
															"src": "17577:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "17075:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17156:4:7",
														"nodeType": "YulTypedName",
														"src": "17156:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "17162:3:7",
														"nodeType": "YulTypedName",
														"src": "17162:3:7",
														"type": ""
													}
												],
												"src": "17075:1395:7"
											},
											{
												"body": {
													"nativeSrc": "18582:115:7",
													"nodeType": "YulBlock",
													"src": "18582:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18604:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18604:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18612:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18612:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18600:3:7"
																		},
																		"nativeSrc": "18600:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18600:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520746f206275",
																		"kind": "string",
																		"nativeSrc": "18616:34:7",
																		"nodeType": "YulLiteral",
																		"src": "18616:34:7",
																		"type": "",
																		"value": "Insufficient token balance to bu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18593:6:7"
																},
																"nativeSrc": "18593:58:7",
																"nodeType": "YulFunctionCall",
																"src": "18593:58:7"
															},
															"nativeSrc": "18593:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "18593:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18672:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18672:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18680:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18680:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18668:3:7"
																		},
																		"nativeSrc": "18668:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18668:15:7"
																	},
																	{
																		"hexValue": "726e",
																		"kind": "string",
																		"nativeSrc": "18685:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18685:4:7",
																		"type": "",
																		"value": "rn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18661:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18661:6:7"
																},
																"nativeSrc": "18661:29:7",
																"nodeType": "YulFunctionCall",
																"src": "18661:29:7"
															},
															"nativeSrc": "18661:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "18661:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2",
												"nativeSrc": "18476:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18574:6:7",
														"nodeType": "YulTypedName",
														"src": "18574:6:7",
														"type": ""
													}
												],
												"src": "18476:221:7"
											},
											{
												"body": {
													"nativeSrc": "18849:220:7",
													"nodeType": "YulBlock",
													"src": "18849:220:7",
													"statements": [
														{
															"nativeSrc": "18859:74:7",
															"nodeType": "YulAssignment",
															"src": "18859:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18925:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18925:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18930:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18930:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18866:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18866:58:7"
																},
																"nativeSrc": "18866:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18866:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18859:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18859:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19031:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19031:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2",
																	"nativeSrc": "18942:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18942:88:7"
																},
																"nativeSrc": "18942:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18942:93:7"
															},
															"nativeSrc": "18942:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18942:93:7"
														},
														{
															"nativeSrc": "19044:19:7",
															"nodeType": "YulAssignment",
															"src": "19044:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19055:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19055:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19060:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19060:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19051:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19051:3:7"
																},
																"nativeSrc": "19051:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19051:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19044:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18703:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18837:3:7",
														"nodeType": "YulTypedName",
														"src": "18837:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18845:3:7",
														"nodeType": "YulTypedName",
														"src": "18845:3:7",
														"type": ""
													}
												],
												"src": "18703:366:7"
											},
											{
												"body": {
													"nativeSrc": "19246:248:7",
													"nodeType": "YulBlock",
													"src": "19246:248:7",
													"statements": [
														{
															"nativeSrc": "19256:26:7",
															"nodeType": "YulAssignment",
															"src": "19256:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19268:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19268:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19279:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19279:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19264:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19264:3:7"
																},
																"nativeSrc": "19264:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19264:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19256:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19256:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19314:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19314:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19299:3:7"
																		},
																		"nativeSrc": "19299:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19299:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19322:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19322:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19328:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19328:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19318:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19318:3:7"
																		},
																		"nativeSrc": "19318:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19318:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19292:6:7"
																},
																"nativeSrc": "19292:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19292:47:7"
															},
															"nativeSrc": "19292:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19292:47:7"
														},
														{
															"nativeSrc": "19348:139:7",
															"nodeType": "YulAssignment",
															"src": "19348:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19482:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19482:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19356:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19356:124:7"
																},
																"nativeSrc": "19356:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19356:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19348:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19075:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19226:9:7",
														"nodeType": "YulTypedName",
														"src": "19226:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19241:4:7",
														"nodeType": "YulTypedName",
														"src": "19241:4:7",
														"type": ""
													}
												],
												"src": "19075:419:7"
											},
											{
												"body": {
													"nativeSrc": "19606:118:7",
													"nodeType": "YulBlock",
													"src": "19606:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19628:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19628:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19636:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19636:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19624:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19624:3:7"
																		},
																		"nativeSrc": "19624:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19624:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20696e73756666696369656e74206261",
																		"kind": "string",
																		"nativeSrc": "19640:34:7",
																		"nodeType": "YulLiteral",
																		"src": "19640:34:7",
																		"type": "",
																		"value": "Transfer failed: insufficient ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19617:6:7"
																},
																"nativeSrc": "19617:58:7",
																"nodeType": "YulFunctionCall",
																"src": "19617:58:7"
															},
															"nativeSrc": "19617:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "19617:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19696:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19696:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19704:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19704:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19692:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19692:3:7"
																		},
																		"nativeSrc": "19692:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19692:15:7"
																	},
																	{
																		"hexValue": "6c616e6365",
																		"kind": "string",
																		"nativeSrc": "19709:7:7",
																		"nodeType": "YulLiteral",
																		"src": "19709:7:7",
																		"type": "",
																		"value": "lance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19685:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19685:6:7"
																},
																"nativeSrc": "19685:32:7",
																"nodeType": "YulFunctionCall",
																"src": "19685:32:7"
															},
															"nativeSrc": "19685:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "19685:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
												"nativeSrc": "19500:224:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19598:6:7",
														"nodeType": "YulTypedName",
														"src": "19598:6:7",
														"type": ""
													}
												],
												"src": "19500:224:7"
											},
											{
												"body": {
													"nativeSrc": "19876:220:7",
													"nodeType": "YulBlock",
													"src": "19876:220:7",
													"statements": [
														{
															"nativeSrc": "19886:74:7",
															"nodeType": "YulAssignment",
															"src": "19886:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19952:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19952:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19957:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19957:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19893:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19893:58:7"
																},
																"nativeSrc": "19893:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19893:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19886:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19886:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20058:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20058:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																	"nativeSrc": "19969:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19969:88:7"
																},
																"nativeSrc": "19969:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19969:93:7"
															},
															"nativeSrc": "19969:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19969:93:7"
														},
														{
															"nativeSrc": "20071:19:7",
															"nodeType": "YulAssignment",
															"src": "20071:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20082:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20082:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20087:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20087:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20078:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20078:3:7"
																},
																"nativeSrc": "20078:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20078:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20071:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20071:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19730:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19864:3:7",
														"nodeType": "YulTypedName",
														"src": "19864:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19872:3:7",
														"nodeType": "YulTypedName",
														"src": "19872:3:7",
														"type": ""
													}
												],
												"src": "19730:366:7"
											},
											{
												"body": {
													"nativeSrc": "20273:248:7",
													"nodeType": "YulBlock",
													"src": "20273:248:7",
													"statements": [
														{
															"nativeSrc": "20283:26:7",
															"nodeType": "YulAssignment",
															"src": "20283:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20295:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20295:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20306:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20306:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20291:3:7"
																},
																"nativeSrc": "20291:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20291:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20283:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20283:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20330:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20330:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20341:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20341:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20326:3:7"
																		},
																		"nativeSrc": "20326:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20326:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20349:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20349:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20355:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20355:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20345:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20345:3:7"
																		},
																		"nativeSrc": "20345:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20345:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20319:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20319:6:7"
																},
																"nativeSrc": "20319:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20319:47:7"
															},
															"nativeSrc": "20319:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20319:47:7"
														},
														{
															"nativeSrc": "20375:139:7",
															"nodeType": "YulAssignment",
															"src": "20375:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20509:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20383:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20383:124:7"
																},
																"nativeSrc": "20383:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20383:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20375:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20102:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20253:9:7",
														"nodeType": "YulTypedName",
														"src": "20253:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20268:4:7",
														"nodeType": "YulTypedName",
														"src": "20268:4:7",
														"type": ""
													}
												],
												"src": "20102:419:7"
											},
											{
												"body": {
													"nativeSrc": "20681:288:7",
													"nodeType": "YulBlock",
													"src": "20681:288:7",
													"statements": [
														{
															"nativeSrc": "20691:26:7",
															"nodeType": "YulAssignment",
															"src": "20691:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20703:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20703:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20714:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20714:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20699:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20699:3:7"
																},
																"nativeSrc": "20699:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20699:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20691:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20691:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20771:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20771:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20784:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20784:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20795:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20795:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20780:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20780:3:7"
																		},
																		"nativeSrc": "20780:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20780:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20727:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20727:43:7"
																},
																"nativeSrc": "20727:71:7",
																"nodeType": "YulFunctionCall",
																"src": "20727:71:7"
															},
															"nativeSrc": "20727:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "20727:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20852:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20852:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20865:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20865:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20876:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20876:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20861:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20861:3:7"
																		},
																		"nativeSrc": "20861:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20861:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20808:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20808:43:7"
																},
																"nativeSrc": "20808:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20808:72:7"
															},
															"nativeSrc": "20808:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20808:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20934:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20934:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20947:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20947:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20958:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20958:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20943:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20943:3:7"
																		},
																		"nativeSrc": "20943:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20943:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20890:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20890:43:7"
																},
																"nativeSrc": "20890:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20890:72:7"
															},
															"nativeSrc": "20890:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20890:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20527:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20637:9:7",
														"nodeType": "YulTypedName",
														"src": "20637:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20649:6:7",
														"nodeType": "YulTypedName",
														"src": "20649:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20657:6:7",
														"nodeType": "YulTypedName",
														"src": "20657:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20665:6:7",
														"nodeType": "YulTypedName",
														"src": "20665:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20676:4:7",
														"nodeType": "YulTypedName",
														"src": "20676:4:7",
														"type": ""
													}
												],
												"src": "20527:442:7"
											},
											{
												"body": {
													"nativeSrc": "21019:147:7",
													"nodeType": "YulBlock",
													"src": "21019:147:7",
													"statements": [
														{
															"nativeSrc": "21029:25:7",
															"nodeType": "YulAssignment",
															"src": "21029:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21052:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21052:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21034:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21034:17:7"
																},
																"nativeSrc": "21034:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21034:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21029:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21029:1:7"
																}
															]
														},
														{
															"nativeSrc": "21063:25:7",
															"nodeType": "YulAssignment",
															"src": "21063:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21086:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21086:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21068:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21068:17:7"
																},
																"nativeSrc": "21068:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21068:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21063:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21063:1:7"
																}
															]
														},
														{
															"nativeSrc": "21097:16:7",
															"nodeType": "YulAssignment",
															"src": "21097:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21108:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21108:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21111:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21111:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21104:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21104:3:7"
																},
																"nativeSrc": "21104:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21104:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21097:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21097:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21137:22:7",
																"nodeType": "YulBlock",
																"src": "21137:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21139:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21139:16:7"
																			},
																			"nativeSrc": "21139:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21139:18:7"
																		},
																		"nativeSrc": "21139:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21139:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21129:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21129:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21132:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21132:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21126:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21126:2:7"
																},
																"nativeSrc": "21126:10:7",
																"nodeType": "YulFunctionCall",
																"src": "21126:10:7"
															},
															"nativeSrc": "21123:36:7",
															"nodeType": "YulIf",
															"src": "21123:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20975:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21006:1:7",
														"nodeType": "YulTypedName",
														"src": "21006:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21009:1:7",
														"nodeType": "YulTypedName",
														"src": "21009:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21015:3:7",
														"nodeType": "YulTypedName",
														"src": "21015:3:7",
														"type": ""
													}
												],
												"src": "20975:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct DegenToken.FoodItem -> struct DegenToken.FoodItem\n    function abi_encode_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // foodId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // foodName\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // foodCost\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DegenToken.FoodItem[] -> struct DegenToken.FoodItem[]\n    function abi_encode_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_FoodItem_$948_memory_ptr_to_t_struct$_FoodItem_$948_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid food ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to redeem f\")\n\n        mstore(add(memPtr, 32), \"ood\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance to bu\")\n\n        mstore(add(memPtr, 32), \"rn\")\n\n    }\n\n    function abi_encode_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: insufficient ba\")\n\n        mstore(add(memPtr, 32), \"lance\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c806384c13cd0116100ab578063ca07fbc41161006f578063ca07fbc41461031e578063dd62ed3e1461033c578063ef6eb4c71461036c578063f0dda65c1461039e578063f2fde38b146103ba5761012a565b806384c13cd0146102785780638da5cb5b1461029657806395d89b41146102b4578063a9059cbb146102d2578063bec3fa17146103025761012a565b8063313ce567116100f2578063313ce567146101e65780636d1b229d1461020457806370a0823114610220578063715018a61461025057806382b2e2571461025a5761012a565b806306fdde031461012e578063095ea7b31461014c57806318160ddd1461017c578063184619491461019a57806323b872dd146101b6575b5f5ffd5b6101366103d6565b604051610143919061158c565b60405180910390f35b6101666004803603810190610161919061163d565b610466565b6040516101739190611695565b60405180910390f35b610184610488565b60405161019191906116bd565b60405180910390f35b6101b460048036038101906101af91906116d6565b610491565b005b6101d060048036038101906101cb9190611701565b61070d565b6040516101dd9190611695565b60405180910390f35b6101ee61073b565b6040516101fb919061176c565b60405180910390f35b61021e600480360381019061021991906116d6565b610742565b005b61023a60048036038101906102359190611785565b61079a565b60405161024791906116bd565b60405180910390f35b6102586107df565b005b6102626107f2565b60405161026f91906116bd565b60405180910390f35b610280610801565b60405161028d919061190f565b60405180910390f35b61029e610900565b6040516102ab919061193e565b60405180910390f35b6102bc610928565b6040516102c9919061158c565b60405180910390f35b6102ec60048036038101906102e7919061163d565b6109b8565b6040516102f99190611695565b60405180910390f35b61031c6004803603810190610317919061163d565b6109da565b005b610326610a40565b604051610333919061190f565b60405180910390f35b61035660048036038101906103519190611957565b610b7a565b60405161036391906116bd565b60405180910390f35b610386600480360381019061038191906116d6565b610bfc565b60405161039593929190611995565b60405180910390f35b6103b860048036038101906103b3919061163d565b610cb7565b005b6103d460048036038101906103cf9190611785565b610ccd565b005b6060600380546103e5906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610411906119fe565b801561045c5780601f106104335761010080835404028352916020019161045c565b820191905f5260205f20905b81548152906001019060200180831161043f57829003601f168201915b5050505050905090565b5f5f610470610d51565b905061047d818585610d58565b600191505092915050565b5f600254905090565b5f811180156104a557506006805490508111155b6104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90611a78565b60405180910390fd5b5f60066001836104f49190611ac3565b8154811061050557610504611af6565b5b905f5260205f2090600302016040518060600160405290815f8201548152602001600182018054610535906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610561906119fe565b80156105ac5780601f10610583576101008083540402835291602001916105ac565b820191905f5260205f20905b81548152906001019060200180831161058f57829003601f168201915b50505050508152602001600282015481525050905080604001516105cf3361079a565b1015610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060790611b93565b60405180910390fd5b61061e338260400151610d6a565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f0155602082015181600101908161069f9190611d7e565b506040820151816002015550503373ffffffffffffffffffffffffffffffffffffffff167f6897b74eb742aaf38dadb2956389fae0b6ed24f776eb038d3df6cf5b909371a4825f01518360200151846040015160405161070193929190611995565b60405180910390a25050565b5f5f610717610d51565b9050610724858285610de9565b61072f858585610e7b565b60019150509392505050565b5f5f905090565b8061074c3361079a565b101561078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490611ebd565b60405180910390fd5b6107973382610d6a565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6107e7610f6b565b6107f05f610ff2565b565b5f6107fc3361079a565b905090565b60606006805480602002602001604051908101604052809291908181526020015f905b828210156108f7578382905f5260205f2090600302016040518060600160405290815f820154815260200160018201805461085e906119fe565b80601f016020809104026020016040519081016040528092919081815260200182805461088a906119fe565b80156108d55780601f106108ac576101008083540402835291602001916108d5565b820191905f5260205f20905b8154815290600101906020018083116108b857829003601f168201915b5050505050815260200160028201548152505081526020019060010190610824565b50505050905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610937906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610963906119fe565b80156109ae5780601f10610985576101008083540402835291602001916109ae565b820191905f5260205f20905b81548152906001019060200180831161099157829003601f168201915b5050505050905090565b5f5f6109c2610d51565b90506109cf818585610e7b565b600191505092915050565b806109e43361079a565b1015610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611f4b565b60405180910390fd5b610a2f3382610466565b50610a3b33838361070d565b505050565b606060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015610b71578382905f5260205f2090600302016040518060600160405290815f8201548152602001600182018054610ad8906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610b04906119fe565b8015610b4f5780601f10610b2657610100808354040283529160200191610b4f565b820191905f5260205f20905b815481529060010190602001808311610b3257829003601f168201915b5050505050815260200160028201548152505081526020019060010190610a9e565b50505050905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60068181548110610c0b575f80fd5b905f5260205f2090600302015f91509050805f015490806001018054610c30906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5c906119fe565b8015610ca75780601f10610c7e57610100808354040283529160200191610ca7565b820191905f5260205f20905b815481529060010190602001808311610c8a57829003601f168201915b5050505050908060020154905083565b610cbf610f6b565b610cc982826110b5565b5050565b610cd5610f6b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d45575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d3c919061193e565b60405180910390fd5b610d4e81610ff2565b50565b5f33905090565b610d658383836001611134565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dda575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610dd1919061193e565b60405180910390fd5b610de5825f83611303565b5050565b5f610df48484610b7a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e755781811015610e66578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e5d93929190611f69565b60405180910390fd5b610e7484848484035f611134565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eeb575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ee2919061193e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f52919061193e565b60405180910390fd5b610f66838383611303565b505050565b610f73610d51565b73ffffffffffffffffffffffffffffffffffffffff16610f91610900565b73ffffffffffffffffffffffffffffffffffffffff1614610ff057610fb4610d51565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610fe7919061193e565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611125575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161111c919061193e565b60405180910390fd5b6111305f8383611303565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111a4575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161119b919061193e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611214575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161120b919061193e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156112fd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516112f491906116bd565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611353578060025f8282546113479190611f9e565b92505081905550611421565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156113dc578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016113d393929190611f69565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611468578060025f82825403925050819055506114b2565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161150f91906116bd565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61155e8261151c565b6115688185611526565b9350611578818560208601611536565b61158181611544565b840191505092915050565b5f6020820190508181035f8301526115a48184611554565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115d9826115b0565b9050919050565b6115e9816115cf565b81146115f3575f5ffd5b50565b5f81359050611604816115e0565b92915050565b5f819050919050565b61161c8161160a565b8114611626575f5ffd5b50565b5f8135905061163781611613565b92915050565b5f5f60408385031215611653576116526115ac565b5b5f611660858286016115f6565b925050602061167185828601611629565b9150509250929050565b5f8115159050919050565b61168f8161167b565b82525050565b5f6020820190506116a85f830184611686565b92915050565b6116b78161160a565b82525050565b5f6020820190506116d05f8301846116ae565b92915050565b5f602082840312156116eb576116ea6115ac565b5b5f6116f884828501611629565b91505092915050565b5f5f5f60608486031215611718576117176115ac565b5b5f611725868287016115f6565b9350506020611736868287016115f6565b925050604061174786828701611629565b9150509250925092565b5f60ff82169050919050565b61176681611751565b82525050565b5f60208201905061177f5f83018461175d565b92915050565b5f6020828403121561179a576117996115ac565b5b5f6117a7848285016115f6565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6117e28161160a565b82525050565b5f82825260208201905092915050565b5f6118028261151c565b61180c81856117e8565b935061181c818560208601611536565b61182581611544565b840191505092915050565b5f606083015f8301516118455f8601826117d9565b506020830151848203602086015261185d82826117f8565b915050604083015161187260408601826117d9565b508091505092915050565b5f6118888383611830565b905092915050565b5f602082019050919050565b5f6118a6826117b0565b6118b081856117ba565b9350836020820285016118c2856117ca565b805f5b858110156118fd57848403895281516118de858261187d565b94506118e983611890565b925060208a019950506001810190506118c5565b50829750879550505050505092915050565b5f6020820190508181035f830152611927818461189c565b905092915050565b611938816115cf565b82525050565b5f6020820190506119515f83018461192f565b92915050565b5f5f6040838503121561196d5761196c6115ac565b5b5f61197a858286016115f6565b925050602061198b858286016115f6565b9150509250929050565b5f6060820190506119a85f8301866116ae565b81810360208301526119ba8185611554565b90506119c960408301846116ae565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611a1557607f821691505b602082108103611a2857611a276119d1565b5b50919050565b7f496e76616c696420666f6f6420494400000000000000000000000000000000005f82015250565b5f611a62600f83611526565b9150611a6d82611a2e565b602082019050919050565b5f6020820190508181035f830152611a8f81611a56565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611acd8261160a565b9150611ad88361160a565b9250828203905081811115611af057611aef611a96565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e73756666696369656e742062616c616e636520746f2072656465656d20665f8201527f6f6f640000000000000000000000000000000000000000000000000000000000602082015250565b5f611b7d602383611526565b9150611b8882611b23565b604082019050919050565b5f6020820190508181035f830152611baa81611b71565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611c3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bff565b611c448683611bff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611c7f611c7a611c758461160a565b611c5c565b61160a565b9050919050565b5f819050919050565b611c9883611c65565b611cac611ca482611c86565b848454611c0b565b825550505050565b5f5f905090565b611cc3611cb4565b611cce818484611c8f565b505050565b5b81811015611cf157611ce65f82611cbb565b600181019050611cd4565b5050565b601f821115611d3657611d0781611bde565b611d1084611bf0565b81016020851015611d1f578190505b611d33611d2b85611bf0565b830182611cd3565b50505b505050565b5f82821c905092915050565b5f611d565f1984600802611d3b565b1980831691505092915050565b5f611d6e8383611d47565b9150826002028217905092915050565b611d878261151c565b67ffffffffffffffff811115611da057611d9f611bb1565b5b611daa82546119fe565b611db5828285611cf5565b5f60209050601f831160018114611de6575f8415611dd4578287015190505b611dde8582611d63565b865550611e45565b601f198416611df486611bde565b5f5b82811015611e1b57848901518255600182019150602085019450602081019050611df6565b86831015611e385784890151611e34601f891682611d47565b8355505b6001600288020188555050505b505050505050565b7f496e73756666696369656e7420746f6b656e2062616c616e636520746f2062755f8201527f726e000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ea7602283611526565b9150611eb282611e4d565b604082019050919050565b5f6020820190508181035f830152611ed481611e9b565b9050919050565b7f5472616e73666572206661696c65643a20696e73756666696369656e742062615f8201527f6c616e6365000000000000000000000000000000000000000000000000000000602082015250565b5f611f35602583611526565b9150611f4082611edb565b604082019050919050565b5f6020820190508181035f830152611f6281611f29565b9050919050565b5f606082019050611f7c5f83018661192f565b611f8960208301856116ae565b611f9660408301846116ae565b949350505050565b5f611fa88261160a565b9150611fb38361160a565b9250828201905080821115611fcb57611fca611a96565b5b9291505056fea2646970667358221220704eafa01bac17e47874dfa6cbdf5fe938b7274a931f5b6f755ac1d7ed00d21a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84C13CD0 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCA07FBC4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCA07FBC4 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xEF6EB4C7 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF0DDA65C EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x84C13CD0 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x302 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6D1B229D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x82B2E257 EQ PUSH2 0x25A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18461949 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x136 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH2 0x900 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST PUSH2 0xCB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH2 0xCCD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x411 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x433 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x470 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x47D DUP2 DUP6 DUP6 PUSH2 0xD58 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x4A5 JUMPI POP PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 GT ISZERO JUMPDEST PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH1 0x1 DUP4 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x505 JUMPI PUSH2 0x504 PUSH2 0x1AF6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x535 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x561 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x583 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD PUSH2 0x5CF CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x607 SWAP1 PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61E CALLER DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6897B74EB742AAF38DADB2956389FAE0B6ED24F776EB038D3DF6CF5B909371A4 DUP3 PUSH0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x701 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x717 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x724 DUP6 DUP3 DUP6 PUSH2 0xDE9 JUMP JUMPDEST PUSH2 0x72F DUP6 DUP6 DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x74C CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x797 CALLER DUP3 PUSH2 0xD6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0xF6B JUMP JUMPDEST PUSH2 0x7F0 PUSH0 PUSH2 0xFF2 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7FC CALLER PUSH2 0x79A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x8F7 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x85E SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88A SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x824 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x937 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x963 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x985 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x991 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x9C2 PUSH2 0xD51 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF DUP2 DUP6 DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9E4 CALLER PUSH2 0x79A JUMP JUMPDEST LT ISZERO PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1C SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA2F CALLER DUP3 PUSH2 0x466 JUMP JUMPDEST POP PUSH2 0xA3B CALLER DUP4 DUP4 PUSH2 0x70D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB71 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xAD8 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB04 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB26 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xC30 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC5C SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0xCBF PUSH2 0xF6B JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x10B5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD5 PUSH2 0xF6B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD45 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4E DUP2 PUSH2 0xFF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1134 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE5 DUP3 PUSH0 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF4 DUP5 DUP5 PUSH2 0xB7A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE75 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE66 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE74 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1134 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE2 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF52 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF66 DUP4 DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF73 PUSH2 0xD51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF91 PUSH2 0x900 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF0 JUMPI PUSH2 0xFB4 PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1125 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111C SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1130 PUSH0 DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1214 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP2 SWAP1 PUSH2 0x193E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x12FD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1353 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1421 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13DC JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1468 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14B2 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x150F SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155E DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1568 DUP2 DUP6 PUSH2 0x1526 JUMP JUMPDEST SWAP4 POP PUSH2 0x1578 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1581 DUP2 PUSH2 0x1544 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A4 DUP2 DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D9 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E9 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1604 DUP2 PUSH2 0x15E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x160A JUMP JUMPDEST DUP2 EQ PUSH2 0x1626 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1637 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1660 DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1671 DUP6 DUP3 DUP7 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168F DUP2 PUSH2 0x167B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1686 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x160A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP7 DUP3 DUP8 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1736 DUP7 DUP3 DUP8 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1747 DUP7 DUP3 DUP8 ADD PUSH2 0x1629 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1766 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x177F PUSH0 DUP4 ADD DUP5 PUSH2 0x175D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179A JUMPI PUSH2 0x1799 PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A7 DUP5 DUP3 DUP6 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x160A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1802 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x180C DUP2 DUP6 PUSH2 0x17E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x181C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x1825 DUP2 PUSH2 0x1544 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1845 PUSH0 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x185D DUP3 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1872 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x17D9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1888 DUP4 DUP4 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x18B0 DUP2 DUP6 PUSH2 0x17BA JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x18C2 DUP6 PUSH2 0x17CA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18FD JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x18DE DUP6 DUP3 PUSH2 0x187D JUMP JUMPDEST SWAP5 POP PUSH2 0x18E9 DUP4 PUSH2 0x1890 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18C5 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1927 DUP2 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1938 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1951 PUSH0 DUP4 ADD DUP5 PUSH2 0x192F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x196D JUMPI PUSH2 0x196C PUSH2 0x15AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x197A DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198B DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A8 PUSH0 DUP4 ADD DUP7 PUSH2 0x16AE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19BA DUP2 DUP6 PUSH2 0x1554 JUMP JUMPDEST SWAP1 POP PUSH2 0x19C9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A15 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A28 JUMPI PUSH2 0x1A27 PUSH2 0x19D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420666F6F642049440000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A62 PUSH1 0xF DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6D DUP3 PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8F DUP2 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1ACD DUP3 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD8 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1AF0 JUMPI PUSH2 0x1AEF PUSH2 0x1A96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F2072656465656D2066 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F6F640000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B7D PUSH1 0x23 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B88 DUP3 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAA DUP2 PUSH2 0x1B71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH2 0x1C44 DUP7 DUP4 PUSH2 0x1BFF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C7F PUSH2 0x1C7A PUSH2 0x1C75 DUP5 PUSH2 0x160A JUMP JUMPDEST PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C98 DUP4 PUSH2 0x1C65 JUMP JUMPDEST PUSH2 0x1CAC PUSH2 0x1CA4 DUP3 PUSH2 0x1C86 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C0B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CC3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP5 DUP5 PUSH2 0x1C8F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI PUSH2 0x1CE6 PUSH0 DUP3 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1D07 DUP2 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x1D10 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D1F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D33 PUSH2 0x1D2B DUP6 PUSH2 0x1BF0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CD3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D56 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D3B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6E DUP4 DUP4 PUSH2 0x1D47 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D87 DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH2 0x1DAA DUP3 SLOAD PUSH2 0x19FE JUMP JUMPDEST PUSH2 0x1DB5 DUP3 DUP3 DUP6 PUSH2 0x1CF5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DE6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DD4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DDE DUP6 DUP3 PUSH2 0x1D63 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E45 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DF4 DUP7 PUSH2 0x1BDE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E1B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E38 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E34 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D47 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520746F206275 PUSH0 DUP3 ADD MSTORE PUSH32 0x726E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA7 PUSH1 0x22 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB2 DUP3 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED4 DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20696E73756666696369656E74206261 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F35 PUSH1 0x25 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F40 DUP3 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F62 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP7 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1F96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA8 DUP3 PUSH2 0x160A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP4 PUSH2 0x160A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FCB JUMPI PUSH2 0x1FCA PUSH2 0x1A96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x4EAFA01BAC17E47874DFA6CBDF5FE938B7 0x27 BLOBBASEFEE SWAP4 0x1F JUMPDEST PUSH16 0x755AC1D7ED00D21A64736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "168:2823:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1797:693:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1020:106:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1242:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1132:104:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2534:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1455:290:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2692:121;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;358:31:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;915:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;1797:693:6:-;1869:1;1860:6;:10;:44;;;;;1884:13;:20;;;;1874:6;:30;;1860:44;1852:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1934:20;1957:13;1980:1;1971:6;:10;;;;:::i;:::-;1957:25;;;;;;;;:::i;:::-;;;;;;;;;;;;1934:48;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2068:4;:13;;;2043:21;2053:10;2043:9;:21::i;:::-;:38;;2022:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2153:32;2159:10;2171:4;:13;;;2153:5;:32::i;:::-;2256:14;:26;2271:10;2256:26;;;;;;;;;;;;;;;2288:4;2256:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2384:10;2358:125;;;2408:4;:11;;;2433:4;:13;;;2460:4;:13;;;2358:125;;;;;;;;:::i;:::-;;;;;;;;1842:648;1797:693;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1020:106:6:-;1070:5;1094:1;1087:8;;1020:106;:::o;1242:207::-;1341:6;1316:21;1326:10;1316:9;:21::i;:::-;:31;;1295:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1417:25;1423:10;1435:6;1417:5;:25::i;:::-;1242:207;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1132:104:6:-;1182:7;1208:21;1218:10;1208:9;:21::i;:::-;1201:28;;1132:104;:::o;2534:107::-;2585:17;2621:13;2614:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2534:107;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1455:290:6:-;1579:6;1554:21;1564:10;1554:9;:21::i;:::-;:31;;1533:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1658:27;1666:10;1678:6;1658:7;:27::i;:::-;;1695:43;1708:10;1720:9;1731:6;1695:12;:43::i;:::-;;1455:290;;:::o;2692:121::-;2744:17;2780:14;:26;2795:10;2780:26;;;;;;;;;;;;;;;2773:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:121;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;358:31:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;915:99::-;1531:13:0;:11;:13::i;:::-;990:17:6::1;996:2;1000:6;990:5;:17::i;:::-;915:99:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:139::-;5508:6;5542:5;5536:12;5526:22;;5416:139;;;:::o;5561:209::-;5685:11;5719:6;5714:3;5707:19;5759:4;5754:3;5750:14;5735:29;;5561:209;;;;:::o;5776:157::-;5868:4;5891:3;5883:11;;5921:4;5916:3;5912:14;5904:22;;5776:157;;;:::o;5939:108::-;6016:24;6034:5;6016:24;:::i;:::-;6011:3;6004:37;5939:108;;:::o;6053:159::-;6127:11;6161:6;6156:3;6149:19;6201:4;6196:3;6192:14;6177:29;;6053:159;;;;:::o;6218:357::-;6296:3;6324:39;6357:5;6324:39;:::i;:::-;6379:61;6433:6;6428:3;6379:61;:::i;:::-;6372:68;;6449:65;6507:6;6502:3;6495:4;6488:5;6484:16;6449:65;:::i;:::-;6539:29;6561:6;6539:29;:::i;:::-;6534:3;6530:39;6523:46;;6300:275;6218:357;;;;:::o;6645:780::-;6754:3;6790:4;6785:3;6781:14;6879:4;6872:5;6868:16;6862:23;6898:63;6955:4;6950:3;6946:14;6932:12;6898:63;:::i;:::-;6805:166;7057:4;7050:5;7046:16;7040:23;7110:3;7104:4;7100:14;7093:4;7088:3;7084:14;7077:38;7136:73;7204:4;7190:12;7136:73;:::i;:::-;7128:81;;6981:239;7306:4;7299:5;7295:16;7289:23;7325:63;7382:4;7377:3;7373:14;7359:12;7325:63;:::i;:::-;7230:168;7415:4;7408:11;;6759:666;6645:780;;;;:::o;7431:256::-;7550:10;7585:96;7677:3;7669:6;7585:96;:::i;:::-;7571:110;;7431:256;;;;:::o;7693:138::-;7788:4;7820;7815:3;7811:14;7803:22;;7693:138;;;:::o;7905:1111::-;8074:3;8103:79;8176:5;8103:79;:::i;:::-;8198:111;8302:6;8297:3;8198:111;:::i;:::-;8191:118;;8335:3;8380:4;8372:6;8368:17;8363:3;8359:27;8410:81;8485:5;8410:81;:::i;:::-;8514:7;8545:1;8530:441;8555:6;8552:1;8549:13;8530:441;;;8626:9;8620:4;8616:20;8611:3;8604:33;8677:6;8671:13;8705:114;8814:4;8799:13;8705:114;:::i;:::-;8697:122;;8842:85;8920:6;8842:85;:::i;:::-;8832:95;;8956:4;8951:3;8947:14;8940:21;;8590:381;8577:1;8574;8570:9;8565:14;;8530:441;;;8534:14;8987:4;8980:11;;9007:3;9000:10;;8079:937;;;;;7905:1111;;;;:::o;9022:473::-;9215:4;9253:2;9242:9;9238:18;9230:26;;9302:9;9296:4;9292:20;9288:1;9277:9;9273:17;9266:47;9330:158;9483:4;9474:6;9330:158;:::i;:::-;9322:166;;9022:473;;;;:::o;9501:118::-;9588:24;9606:5;9588:24;:::i;:::-;9583:3;9576:37;9501:118;;:::o;9625:222::-;9718:4;9756:2;9745:9;9741:18;9733:26;;9769:71;9837:1;9826:9;9822:17;9813:6;9769:71;:::i;:::-;9625:222;;;;:::o;9853:474::-;9921:6;9929;9978:2;9966:9;9957:7;9953:23;9949:32;9946:119;;;9984:79;;:::i;:::-;9946:119;10104:1;10129:53;10174:7;10165:6;10154:9;10150:22;10129:53;:::i;:::-;10119:63;;10075:117;10231:2;10257:53;10302:7;10293:6;10282:9;10278:22;10257:53;:::i;:::-;10247:63;;10202:118;9853:474;;;;;:::o;10333:533::-;10502:4;10540:2;10529:9;10525:18;10517:26;;10553:71;10621:1;10610:9;10606:17;10597:6;10553:71;:::i;:::-;10671:9;10665:4;10661:20;10656:2;10645:9;10641:18;10634:48;10699:78;10772:4;10763:6;10699:78;:::i;:::-;10691:86;;10787:72;10855:2;10844:9;10840:18;10831:6;10787:72;:::i;:::-;10333:533;;;;;;:::o;10872:180::-;10920:77;10917:1;10910:88;11017:4;11014:1;11007:15;11041:4;11038:1;11031:15;11058:320;11102:6;11139:1;11133:4;11129:12;11119:22;;11186:1;11180:4;11176:12;11207:18;11197:81;;11263:4;11255:6;11251:17;11241:27;;11197:81;11325:2;11317:6;11314:14;11294:18;11291:38;11288:84;;11344:18;;:::i;:::-;11288:84;11109:269;11058:320;;;:::o;11384:165::-;11524:17;11520:1;11512:6;11508:14;11501:41;11384:165;:::o;11555:366::-;11697:3;11718:67;11782:2;11777:3;11718:67;:::i;:::-;11711:74;;11794:93;11883:3;11794:93;:::i;:::-;11912:2;11907:3;11903:12;11896:19;;11555:366;;;:::o;11927:419::-;12093:4;12131:2;12120:9;12116:18;12108:26;;12180:9;12174:4;12170:20;12166:1;12155:9;12151:17;12144:47;12208:131;12334:4;12208:131;:::i;:::-;12200:139;;11927:419;;;:::o;12352:180::-;12400:77;12397:1;12390:88;12497:4;12494:1;12487:15;12521:4;12518:1;12511:15;12538:194;12578:4;12598:20;12616:1;12598:20;:::i;:::-;12593:25;;12632:20;12650:1;12632:20;:::i;:::-;12627:25;;12676:1;12673;12669:9;12661:17;;12700:1;12694:4;12691:11;12688:37;;;12705:18;;:::i;:::-;12688:37;12538:194;;;;:::o;12738:180::-;12786:77;12783:1;12776:88;12883:4;12880:1;12873:15;12907:4;12904:1;12897:15;12924:222;13064:34;13060:1;13052:6;13048:14;13041:58;13133:5;13128:2;13120:6;13116:15;13109:30;12924:222;:::o;13152:366::-;13294:3;13315:67;13379:2;13374:3;13315:67;:::i;:::-;13308:74;;13391:93;13480:3;13391:93;:::i;:::-;13509:2;13504:3;13500:12;13493:19;;13152:366;;;:::o;13524:419::-;13690:4;13728:2;13717:9;13713:18;13705:26;;13777:9;13771:4;13767:20;13763:1;13752:9;13748:17;13741:47;13805:131;13931:4;13805:131;:::i;:::-;13797:139;;13524:419;;;:::o;13949:180::-;13997:77;13994:1;13987:88;14094:4;14091:1;14084:15;14118:4;14115:1;14108:15;14135:141;14184:4;14207:3;14199:11;;14230:3;14227:1;14220:14;14264:4;14261:1;14251:18;14243:26;;14135:141;;;:::o;14282:93::-;14319:6;14366:2;14361;14354:5;14350:14;14346:23;14336:33;;14282:93;;;:::o;14381:107::-;14425:8;14475:5;14469:4;14465:16;14444:37;;14381:107;;;;:::o;14494:393::-;14563:6;14613:1;14601:10;14597:18;14636:97;14666:66;14655:9;14636:97;:::i;:::-;14754:39;14784:8;14773:9;14754:39;:::i;:::-;14742:51;;14826:4;14822:9;14815:5;14811:21;14802:30;;14875:4;14865:8;14861:19;14854:5;14851:30;14841:40;;14570:317;;14494:393;;;;;:::o;14893:60::-;14921:3;14942:5;14935:12;;14893:60;;;:::o;14959:142::-;15009:9;15042:53;15060:34;15069:24;15087:5;15069:24;:::i;:::-;15060:34;:::i;:::-;15042:53;:::i;:::-;15029:66;;14959:142;;;:::o;15107:75::-;15150:3;15171:5;15164:12;;15107:75;;;:::o;15188:269::-;15298:39;15329:7;15298:39;:::i;:::-;15359:91;15408:41;15432:16;15408:41;:::i;:::-;15400:6;15393:4;15387:11;15359:91;:::i;:::-;15353:4;15346:105;15264:193;15188:269;;;:::o;15463:73::-;15508:3;15529:1;15522:8;;15463:73;:::o;15542:189::-;15619:32;;:::i;:::-;15660:65;15718:6;15710;15704:4;15660:65;:::i;:::-;15595:136;15542:189;;:::o;15737:186::-;15797:120;15814:3;15807:5;15804:14;15797:120;;;15868:39;15905:1;15898:5;15868:39;:::i;:::-;15841:1;15834:5;15830:13;15821:22;;15797:120;;;15737:186;;:::o;15929:543::-;16030:2;16025:3;16022:11;16019:446;;;16064:38;16096:5;16064:38;:::i;:::-;16148:29;16166:10;16148:29;:::i;:::-;16138:8;16134:44;16331:2;16319:10;16316:18;16313:49;;;16352:8;16337:23;;16313:49;16375:80;16431:22;16449:3;16431:22;:::i;:::-;16421:8;16417:37;16404:11;16375:80;:::i;:::-;16034:431;;16019:446;15929:543;;;:::o;16478:117::-;16532:8;16582:5;16576:4;16572:16;16551:37;;16478:117;;;;:::o;16601:169::-;16645:6;16678:51;16726:1;16722:6;16714:5;16711:1;16707:13;16678:51;:::i;:::-;16674:56;16759:4;16753;16749:15;16739:25;;16652:118;16601:169;;;;:::o;16775:295::-;16851:4;16997:29;17022:3;17016:4;16997:29;:::i;:::-;16989:37;;17059:3;17056:1;17052:11;17046:4;17043:21;17035:29;;16775:295;;;;:::o;17075:1395::-;17192:37;17225:3;17192:37;:::i;:::-;17294:18;17286:6;17283:30;17280:56;;;17316:18;;:::i;:::-;17280:56;17360:38;17392:4;17386:11;17360:38;:::i;:::-;17445:67;17505:6;17497;17491:4;17445:67;:::i;:::-;17539:1;17563:4;17550:17;;17595:2;17587:6;17584:14;17612:1;17607:618;;;;18269:1;18286:6;18283:77;;;18335:9;18330:3;18326:19;18320:26;18311:35;;18283:77;18386:67;18446:6;18439:5;18386:67;:::i;:::-;18380:4;18373:81;18242:222;17577:887;;17607:618;17659:4;17655:9;17647:6;17643:22;17693:37;17725:4;17693:37;:::i;:::-;17752:1;17766:208;17780:7;17777:1;17774:14;17766:208;;;17859:9;17854:3;17850:19;17844:26;17836:6;17829:42;17910:1;17902:6;17898:14;17888:24;;17957:2;17946:9;17942:18;17929:31;;17803:4;17800:1;17796:12;17791:17;;17766:208;;;18002:6;17993:7;17990:19;17987:179;;;18060:9;18055:3;18051:19;18045:26;18103:48;18145:4;18137:6;18133:17;18122:9;18103:48;:::i;:::-;18095:6;18088:64;18010:156;17987:179;18212:1;18208;18200:6;18196:14;18192:22;18186:4;18179:36;17614:611;;;17577:887;;17167:1303;;;17075:1395;;:::o;18476:221::-;18616:34;18612:1;18604:6;18600:14;18593:58;18685:4;18680:2;18672:6;18668:15;18661:29;18476:221;:::o;18703:366::-;18845:3;18866:67;18930:2;18925:3;18866:67;:::i;:::-;18859:74;;18942:93;19031:3;18942:93;:::i;:::-;19060:2;19055:3;19051:12;19044:19;;18703:366;;;:::o;19075:419::-;19241:4;19279:2;19268:9;19264:18;19256:26;;19328:9;19322:4;19318:20;19314:1;19303:9;19299:17;19292:47;19356:131;19482:4;19356:131;:::i;:::-;19348:139;;19075:419;;;:::o;19500:224::-;19640:34;19636:1;19628:6;19624:14;19617:58;19709:7;19704:2;19696:6;19692:15;19685:32;19500:224;:::o;19730:366::-;19872:3;19893:67;19957:2;19952:3;19893:67;:::i;:::-;19886:74;;19969:93;20058:3;19969:93;:::i;:::-;20087:2;20082:3;20078:12;20071:19;;19730:366;;;:::o;20102:419::-;20268:4;20306:2;20295:9;20291:18;20283:26;;20355:9;20349:4;20345:20;20341:1;20330:9;20326:17;20319:47;20383:131;20509:4;20383:131;:::i;:::-;20375:139;;20102:419;;;:::o;20527:442::-;20676:4;20714:2;20703:9;20699:18;20691:26;;20727:71;20795:1;20784:9;20780:17;20771:6;20727:71;:::i;:::-;20808:72;20876:2;20865:9;20861:18;20852:6;20808:72;:::i;:::-;20890;20958:2;20947:9;20943:18;20934:6;20890:72;:::i;:::-;20527:442;;;;;;:::o;20975:191::-;21015:3;21034:20;21052:1;21034:20;:::i;:::-;21029:25;;21068:20;21086:1;21068:20;:::i;:::-;21063:25;;21111:1;21108;21104:9;21097:16;;21132:3;21129:1;21126:10;21123:36;;;21139:18;;:::i;:::-;21123:36;20975:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1639800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"availableFood(uint256)": "infinite",
								"balanceOf(address)": "2895",
								"burnTokens(uint256)": "infinite",
								"decimals()": "360",
								"getAvailableFood()": "infinite",
								"getOwnedFoodItems()": "infinite",
								"getTokenBalance()": "2671",
								"mintTokens(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2560",
								"redeemFood(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 909,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 546,
									"end": 909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 546,
									"end": 909,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 546,
									"end": 909,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 594,
									"end": 604,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "466F6F64546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "46544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 676,
									"end": 689,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 704,
									"end": 705,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "42616E616E612043616B65000000000000000000000000000000000000000000"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 722,
									"end": 724,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 695,
									"end": 725,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 676,
									"end": 726,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 676,
									"end": 726,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 749,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 764,
									"end": 765,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4C69656D706F73696C6F67000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 782,
									"end": 784,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 755,
									"end": 785,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 736,
									"end": 786,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 736,
									"end": 786,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 809,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "43726F66666C6573000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 839,
									"end": 841,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1E"
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 815,
									"end": 842,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 796,
									"end": 843,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 843,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 881,
									"end": 882,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "49636564204C6174746500000000000000000000000000000000000000000000"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 898,
									"end": 900,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 872,
									"end": 901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 853,
									"end": 902,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 853,
									"end": 902,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 2991,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220704eafa01bac17e47874dfa6cbdf5fe938b7274a931f5b6f755ac1d7ed00d21a64736f6c634300081c0033",
									".code": [
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "84C13CD0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "CA07FBC4"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "CA07FBC4"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "EF6EB4C7"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "F0DDA65C"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "84C13CD0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "BEC3FA17"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "6D1B229D"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "82B2E257"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "18461949"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 2991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1797,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1797,
											"end": 2490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1020,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1020,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1242,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1242,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1132,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1132,
											"end": 1236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2534,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2534,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1455,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1455,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2692,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2692,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 915,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 915,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1870,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1884,
											"end": 1904,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1884,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1860,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1852,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1852,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1971,
											"end": 1977,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1971,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1971,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1957,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1934,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1934,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2063,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2043,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2043,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2081,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2022,
											"end": 2142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2022,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2153,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2281,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2282,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2256,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2394,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "6897B74EB742AAF38DADB2956389FAE0B6ED24F776EB038D3DF6CF5B909371A4"
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2358,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2483,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 2490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 2490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1316,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1295,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1295,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1417,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1442,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1417,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1218,
											"end": 1228,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1208,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1208,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2602,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2621,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2614,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2614,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1564,
											"end": 1574,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1554,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1585,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1585,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1533,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1533,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1666,
											"end": 1676,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1658,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1658,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1708,
											"end": 1718,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1695,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1738,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1695,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2805,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2773,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2773,
											"end": 2806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 358,
											"end": 389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 996,
											"end": 998,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1006,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 990,
											"end": 1007,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1007,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 990,
											"end": 1007,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 915,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5508,
											"end": 5514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5725,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5714,
											"end": 5717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 5894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5926,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5776,
											"end": 5933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 6047,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5939,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6034,
											"end": 6039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6016,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6016,
											"end": 6040,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6016,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6011,
											"end": 6014,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6004,
											"end": 6041,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 6047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 6047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 6047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6201,
											"end": 6205,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6206,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6357,
											"end": 6362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 6324,
											"end": 6363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6363,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6324,
											"end": 6363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 6379,
											"end": 6440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6440,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6379,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6372,
											"end": 6440,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6372,
											"end": 6440,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6493,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6484,
											"end": 6500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 6449,
											"end": 6514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6449,
											"end": 6514,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 6449,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 6539,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6539,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6569,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6569,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6218,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6794,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6785,
											"end": 6788,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6795,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6862,
											"end": 6885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 6955,
											"end": 6959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6953,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 6960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6898,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6961,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 6898,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 6971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7063,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7113,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7100,
											"end": 7114,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7136,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7136,
											"end": 7209,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7136,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7209,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7128,
											"end": 7209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6981,
											"end": 7220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7310,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7304,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7295,
											"end": 7311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7380,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7373,
											"end": 7387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7359,
											"end": 7371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7325,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7388,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7325,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7415,
											"end": 7419,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 7425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7550,
											"end": 7560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7677,
											"end": 7680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 7585,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7585,
											"end": 7681,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7585,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7831,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7693,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7811,
											"end": 7825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7831,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 8176,
											"end": 8181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 8103,
											"end": 8182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8182,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 8103,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8302,
											"end": 8308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8300,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8198,
											"end": 8309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8309,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 8198,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8191,
											"end": 8309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8335,
											"end": 8338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8384,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8368,
											"end": 8385,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8363,
											"end": 8366,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8485,
											"end": 8490,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 8410,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8410,
											"end": 8491,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8410,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8521,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8561,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8549,
											"end": 8562,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8626,
											"end": 8635,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8624,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8614,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8677,
											"end": 8683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8684,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8814,
											"end": 8818,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8799,
											"end": 8812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 8705,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8705,
											"end": 8819,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8705,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8819,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8697,
											"end": 8819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8842,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8927,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 8842,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8927,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 8961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8961,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8590,
											"end": 8971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8565,
											"end": 8579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8530,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9010,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9010,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7905,
											"end": 9016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9215,
											"end": 9219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9253,
											"end": 9255,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9242,
											"end": 9251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9238,
											"end": 9256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9230,
											"end": 9256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9302,
											"end": 9311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9296,
											"end": 9300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9292,
											"end": 9312,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9286,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9483,
											"end": 9487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9474,
											"end": 9480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 9330,
											"end": 9488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9488,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 9330,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9022,
											"end": 9495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9619,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9501,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9606,
											"end": 9611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 9588,
											"end": 9612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9612,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9588,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 9722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9756,
											"end": 9758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9754,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9733,
											"end": 9759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9835,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9813,
											"end": 9819,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 9769,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9840,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 9769,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9625,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9921,
											"end": 9927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9980,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9966,
											"end": 9975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9957,
											"end": 9964,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9949,
											"end": 9981,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10065,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9946,
											"end": 10065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9984,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9984,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 9984,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9984,
											"end": 10063,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9984,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 10065,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9946,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 10174,
											"end": 10181,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10163,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10129,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10182,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 10129,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10182,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10075,
											"end": 10192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10257,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 10302,
											"end": 10309,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10282,
											"end": 10291,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10278,
											"end": 10300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10257,
											"end": 10310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10310,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 10257,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10247,
											"end": 10310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10202,
											"end": 10320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 10327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10502,
											"end": 10506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10540,
											"end": 10542,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10529,
											"end": 10538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10517,
											"end": 10543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10621,
											"end": 10622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10619,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10603,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10553,
											"end": 10624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10553,
											"end": 10624,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10553,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10671,
											"end": 10680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10661,
											"end": 10681,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10645,
											"end": 10654,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10641,
											"end": 10659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10634,
											"end": 10682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 10772,
											"end": 10776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10763,
											"end": 10769,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10699,
											"end": 10777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10777,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 10699,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10787,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10855,
											"end": 10857,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10840,
											"end": 10858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10831,
											"end": 10837,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10787,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10787,
											"end": 10859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10787,
											"end": 10859,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 10787,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 11052,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 10872,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10920,
											"end": 10997,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10998,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11021,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 11014,
											"end": 11015,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11007,
											"end": 11022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11045,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11038,
											"end": 11039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 11133,
											"end": 11137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11186,
											"end": 11187,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11188,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11207,
											"end": 11225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11267,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11251,
											"end": 11268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11197,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11325,
											"end": 11327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11317,
											"end": 11323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11314,
											"end": 11328,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11294,
											"end": 11312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11291,
											"end": 11329,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 11344,
											"end": 11362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 11344,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 11288,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11109,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11524,
											"end": 11541,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420666F6F642049440000000000000000000000000000000000"
										},
										{
											"begin": 11520,
											"end": 11521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11508,
											"end": 11522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11501,
											"end": 11542,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11384,
											"end": 11549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 11777,
											"end": 11780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 11718,
											"end": 11785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 11718,
											"end": 11785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11711,
											"end": 11785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11711,
											"end": 11785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 11883,
											"end": 11886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11794,
											"end": 11887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 11794,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11912,
											"end": 11914,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11907,
											"end": 11910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11903,
											"end": 11915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11896,
											"end": 11915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11896,
											"end": 11915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12133,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12180,
											"end": 12189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12170,
											"end": 12190,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12166,
											"end": 12167,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12155,
											"end": 12164,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12168,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12144,
											"end": 12191,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 12208,
											"end": 12339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 12208,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12200,
											"end": 12339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 12346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 12346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12352,
											"end": 12532,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 12352,
											"end": 12532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12400,
											"end": 12477,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12397,
											"end": 12398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12390,
											"end": 12478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 12494,
											"end": 12495,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12487,
											"end": 12502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12525,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12518,
											"end": 12519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12598,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 12616,
											"end": 12617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 12598,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 12618,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 12598,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12593,
											"end": 12618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12593,
											"end": 12618,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12632,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 12650,
											"end": 12651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12632,
											"end": 12652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 12632,
											"end": 12652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12632,
											"end": 12652,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 12632,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12627,
											"end": 12652,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12627,
											"end": 12652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12669,
											"end": 12678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12661,
											"end": 12678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12661,
											"end": 12678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12700,
											"end": 12701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12702,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 12688,
											"end": 12725,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 12705,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 12705,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12725,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 12688,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12538,
											"end": 12732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12738,
											"end": 12918,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 12738,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12863,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12783,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12776,
											"end": 12864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12883,
											"end": 12887,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 12880,
											"end": 12881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12888,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12911,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12912,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 13146,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 12924,
											"end": 13146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13064,
											"end": 13098,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E636520746F2072656465656D2066"
										},
										{
											"begin": 13060,
											"end": 13061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13052,
											"end": 13058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13048,
											"end": 13062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13041,
											"end": 13099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13138,
											"name": "PUSH",
											"source": 7,
											"value": "6F6F640000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13128,
											"end": 13130,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13120,
											"end": 13126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13116,
											"end": 13131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13109,
											"end": 13139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 13146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 13146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13518,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13152,
											"end": 13518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13315,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 13379,
											"end": 13381,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 13374,
											"end": 13377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13315,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 13315,
											"end": 13382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13315,
											"end": 13382,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 13315,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 13480,
											"end": 13483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 13391,
											"end": 13484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13484,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 13391,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13509,
											"end": 13511,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13504,
											"end": 13507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13943,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 13524,
											"end": 13943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13690,
											"end": 13694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13728,
											"end": 13730,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13717,
											"end": 13726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13713,
											"end": 13731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13705,
											"end": 13731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13777,
											"end": 13786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13767,
											"end": 13787,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13761,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13805,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13931,
											"end": 13935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13805,
											"end": 13936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13805,
											"end": 13936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13805,
											"end": 13936,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13805,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13797,
											"end": 13936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13943,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13943,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13524,
											"end": 13943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13949,
											"end": 14129,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13949,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13997,
											"end": 14074,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 14075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14094,
											"end": 14098,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 14084,
											"end": 14099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14118,
											"end": 14122,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14108,
											"end": 14123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14276,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 14135,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14184,
											"end": 14188,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14207,
											"end": 14210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14199,
											"end": 14210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14199,
											"end": 14210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14230,
											"end": 14233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14227,
											"end": 14228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14264,
											"end": 14268,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14261,
											"end": 14262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14269,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14276,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14375,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 14282,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14319,
											"end": 14325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14366,
											"end": 14368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14361,
											"end": 14363,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14354,
											"end": 14359,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14350,
											"end": 14364,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14346,
											"end": 14369,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14282,
											"end": 14375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14425,
											"end": 14433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14475,
											"end": 14480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14469,
											"end": 14473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14465,
											"end": 14481,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14381,
											"end": 14488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14613,
											"end": 14614,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 14601,
											"end": 14611,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 14666,
											"end": 14732,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14655,
											"end": 14664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14636,
											"end": 14733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14733,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 14636,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14754,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 14784,
											"end": 14792,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14773,
											"end": 14782,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14754,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14754,
											"end": 14793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14754,
											"end": 14793,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 14754,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14742,
											"end": 14793,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 14742,
											"end": 14793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14826,
											"end": 14830,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14822,
											"end": 14831,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14811,
											"end": 14832,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14802,
											"end": 14832,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14802,
											"end": 14832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14875,
											"end": 14879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14865,
											"end": 14873,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14861,
											"end": 14880,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14854,
											"end": 14859,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14881,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14841,
											"end": 14881,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14841,
											"end": 14881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14570,
											"end": 14887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14570,
											"end": 14887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14494,
											"end": 14887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14953,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 14893,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14921,
											"end": 14924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14942,
											"end": 14947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14935,
											"end": 14947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14935,
											"end": 14947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14893,
											"end": 14953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15101,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 14959,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15009,
											"end": 15018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15042,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15060,
											"end": 15094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 15069,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15087,
											"end": 15092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15069,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 15069,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15069,
											"end": 15093,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 15069,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15060,
											"end": 15094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 15060,
											"end": 15094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15060,
											"end": 15094,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 15060,
											"end": 15094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15042,
											"end": 15095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 15042,
											"end": 15095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15042,
											"end": 15095,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 15042,
											"end": 15095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15029,
											"end": 15095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15182,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 15107,
											"end": 15182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15150,
											"end": 15153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15171,
											"end": 15176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15164,
											"end": 15176,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15164,
											"end": 15176,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15457,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 15188,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 15329,
											"end": 15336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 15298,
											"end": 15337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15298,
											"end": 15337,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 15298,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15359,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15408,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15432,
											"end": 15448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 15408,
											"end": 15449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15408,
											"end": 15449,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15408,
											"end": 15449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15400,
											"end": 15406,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15387,
											"end": 15398,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15359,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 15359,
											"end": 15450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15359,
											"end": 15450,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15359,
											"end": 15450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15353,
											"end": 15357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15346,
											"end": 15451,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15264,
											"end": 15457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15188,
											"end": 15457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15463,
											"end": 15536,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 15463,
											"end": 15536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15529,
											"end": 15530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15530,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15522,
											"end": 15530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15463,
											"end": 15536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15463,
											"end": 15536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15731,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 15542,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15619,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 15619,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 15619,
											"end": 15651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15619,
											"end": 15651,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 15619,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15660,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 15718,
											"end": 15724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15710,
											"end": 15716,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15704,
											"end": 15708,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15660,
											"end": 15725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 15660,
											"end": 15725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15660,
											"end": 15725,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 15660,
											"end": 15725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15595,
											"end": 15731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15923,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 15737,
											"end": 15923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15814,
											"end": 15817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15807,
											"end": 15812,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15804,
											"end": 15818,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15868,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 15905,
											"end": 15906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15898,
											"end": 15903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15868,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 15868,
											"end": 15907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15868,
											"end": 15907,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 15868,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15841,
											"end": 15842,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15834,
											"end": 15839,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15821,
											"end": 15843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15821,
											"end": 15843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15797,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 16472,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 15929,
											"end": 16472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16030,
											"end": 16032,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16025,
											"end": 16028,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16022,
											"end": 16033,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 16019,
											"end": 16465,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 16096,
											"end": 16101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 16064,
											"end": 16102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16064,
											"end": 16102,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 16064,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16148,
											"end": 16177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 16166,
											"end": 16176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16148,
											"end": 16177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 16148,
											"end": 16177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16148,
											"end": 16177,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 16148,
											"end": 16177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16134,
											"end": 16178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16331,
											"end": 16333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16319,
											"end": 16329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16316,
											"end": 16334,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16362,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 16313,
											"end": 16362,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16352,
											"end": 16360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16337,
											"end": 16360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16337,
											"end": 16360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16313,
											"end": 16362,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 16313,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 16431,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16449,
											"end": 16452,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16431,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 16431,
											"end": 16453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16431,
											"end": 16453,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16431,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16417,
											"end": 16454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16404,
											"end": 16415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 16375,
											"end": 16455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16455,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 16375,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16034,
											"end": 16465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16034,
											"end": 16465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16019,
											"end": 16465,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 16019,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 16472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 16472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 16472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 16472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16532,
											"end": 16540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16582,
											"end": 16587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16576,
											"end": 16580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16572,
											"end": 16588,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 16551,
											"end": 16588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16551,
											"end": 16588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16478,
											"end": 16595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16645,
											"end": 16651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16678,
											"end": 16729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 16726,
											"end": 16727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16722,
											"end": 16728,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16714,
											"end": 16719,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16711,
											"end": 16712,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16707,
											"end": 16720,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16678,
											"end": 16729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 16678,
											"end": 16729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16678,
											"end": 16729,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 16678,
											"end": 16729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16674,
											"end": 16730,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16759,
											"end": 16763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16753,
											"end": 16757,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 16764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16739,
											"end": 16764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16739,
											"end": 16764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16652,
											"end": 16770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16851,
											"end": 16855,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16997,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17022,
											"end": 17025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17016,
											"end": 17020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 16997,
											"end": 17026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17026,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 16997,
											"end": 17026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16989,
											"end": 17026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16989,
											"end": 17026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17059,
											"end": 17062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17052,
											"end": 17063,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17046,
											"end": 17050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17043,
											"end": 17064,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 17035,
											"end": 17064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17035,
											"end": 17064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16775,
											"end": 17070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 18470,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 17075,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17192,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17225,
											"end": 17228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17192,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 17192,
											"end": 17229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17192,
											"end": 17229,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17192,
											"end": 17229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17294,
											"end": 17312,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17286,
											"end": 17292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17283,
											"end": 17313,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17336,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17280,
											"end": 17336,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17316,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17316,
											"end": 17334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 17316,
											"end": 17334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17316,
											"end": 17334,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17316,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17336,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17280,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17360,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17392,
											"end": 17396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17386,
											"end": 17397,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17360,
											"end": 17398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 17360,
											"end": 17398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17360,
											"end": 17398,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 17360,
											"end": 17398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 17505,
											"end": 17511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17497,
											"end": 17503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17491,
											"end": 17495,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 17445,
											"end": 17512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17512,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 17445,
											"end": 17512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17539,
											"end": 17540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17563,
											"end": 17567,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17550,
											"end": 17567,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17550,
											"end": 17567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17595,
											"end": 17597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17587,
											"end": 17593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17584,
											"end": 17598,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17612,
											"end": 17613,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18269,
											"end": 18270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18286,
											"end": 18292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18360,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18283,
											"end": 18360,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18335,
											"end": 18344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18330,
											"end": 18333,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18326,
											"end": 18345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18346,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18311,
											"end": 18346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18311,
											"end": 18346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18283,
											"end": 18360,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18283,
											"end": 18360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18446,
											"end": 18452,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18439,
											"end": 18444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 18386,
											"end": 18453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18386,
											"end": 18453,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18386,
											"end": 18453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18380,
											"end": 18384,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18373,
											"end": 18454,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18242,
											"end": 18464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 18464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 17577,
											"end": 18464,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 17607,
											"end": 18225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17659,
											"end": 17663,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17655,
											"end": 17664,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17653,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17643,
											"end": 17665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 17725,
											"end": 17729,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 17693,
											"end": 17730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17730,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 17693,
											"end": 17730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17752,
											"end": 17753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17780,
											"end": 17787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17777,
											"end": 17778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17774,
											"end": 17788,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 17868,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17854,
											"end": 17857,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17850,
											"end": 17869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17844,
											"end": 17870,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 17836,
											"end": 17842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17829,
											"end": 17871,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17910,
											"end": 17911,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17902,
											"end": 17908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17898,
											"end": 17912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17888,
											"end": 17912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17888,
											"end": 17912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17957,
											"end": 17959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17946,
											"end": 17955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17942,
											"end": 17960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17929,
											"end": 17960,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17929,
											"end": 17960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17803,
											"end": 17807,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17800,
											"end": 17801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17796,
											"end": 17808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17791,
											"end": 17808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17791,
											"end": 17808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 17766,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18002,
											"end": 18008,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17993,
											"end": 18000,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17990,
											"end": 18009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17987,
											"end": 18166,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17987,
											"end": 18166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 17987,
											"end": 18166,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18060,
											"end": 18069,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18055,
											"end": 18058,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18051,
											"end": 18070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18045,
											"end": 18071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 18103,
											"end": 18151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18145,
											"end": 18149,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 18137,
											"end": 18143,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 18133,
											"end": 18150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18122,
											"end": 18131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18103,
											"end": 18151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 18103,
											"end": 18151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18103,
											"end": 18151,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18103,
											"end": 18151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18095,
											"end": 18101,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18088,
											"end": 18152,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18010,
											"end": 18166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17987,
											"end": 18166,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 17987,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18212,
											"end": 18213,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18208,
											"end": 18209,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 18200,
											"end": 18206,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18196,
											"end": 18210,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18192,
											"end": 18214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18186,
											"end": 18190,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 18179,
											"end": 18215,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17614,
											"end": 18225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17614,
											"end": 18225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17614,
											"end": 18225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 18464,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 17577,
											"end": 18464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 18464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 18470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 18470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17167,
											"end": 18470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 18470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 18470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17075,
											"end": 18470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18476,
											"end": 18697,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 18476,
											"end": 18697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18616,
											"end": 18650,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E636520746F206275"
										},
										{
											"begin": 18612,
											"end": 18613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18600,
											"end": 18614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18685,
											"end": 18689,
											"name": "PUSH",
											"source": 7,
											"value": "726E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18680,
											"end": 18682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18672,
											"end": 18678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18668,
											"end": 18683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18661,
											"end": 18690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18476,
											"end": 18697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18476,
											"end": 18697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 19069,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 18703,
											"end": 19069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18845,
											"end": 18848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18866,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 18930,
											"end": 18932,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 18925,
											"end": 18928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 18866,
											"end": 18933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18933,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 18866,
											"end": 18933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18933,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18933,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18942,
											"end": 19035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 19031,
											"end": 19034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18942,
											"end": 19035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 18942,
											"end": 19035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18942,
											"end": 19035,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 18942,
											"end": 19035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19060,
											"end": 19062,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19055,
											"end": 19058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19051,
											"end": 19063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 19069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 19069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 19069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18703,
											"end": 19069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19494,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 19075,
											"end": 19494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19241,
											"end": 19245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19279,
											"end": 19281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19268,
											"end": 19277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19264,
											"end": 19282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19256,
											"end": 19282,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19256,
											"end": 19282,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19328,
											"end": 19337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19322,
											"end": 19326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19318,
											"end": 19338,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19314,
											"end": 19315,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19303,
											"end": 19312,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19299,
											"end": 19316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19292,
											"end": 19339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19356,
											"end": 19487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 19482,
											"end": 19486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19356,
											"end": 19487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 19356,
											"end": 19487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19356,
											"end": 19487,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 19356,
											"end": 19487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19348,
											"end": 19487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19348,
											"end": 19487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19724,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 19500,
											"end": 19724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19640,
											"end": 19674,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65643A20696E73756666696369656E74206261"
										},
										{
											"begin": 19636,
											"end": 19637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19628,
											"end": 19634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19624,
											"end": 19638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19617,
											"end": 19675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19709,
											"end": 19716,
											"name": "PUSH",
											"source": 7,
											"value": "6C616E6365000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19704,
											"end": 19706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19692,
											"end": 19707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19685,
											"end": 19717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19500,
											"end": 19724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19872,
											"end": 19875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 19957,
											"end": 19959,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 19952,
											"end": 19955,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 19893,
											"end": 19960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 19893,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19886,
											"end": 19960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19886,
											"end": 19960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 20058,
											"end": 20061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 19969,
											"end": 20062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 19969,
											"end": 20062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20087,
											"end": 20089,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20082,
											"end": 20085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20078,
											"end": 20090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20071,
											"end": 20090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19730,
											"end": 20096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19730,
											"end": 20096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20268,
											"end": 20272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20308,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20295,
											"end": 20304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20291,
											"end": 20309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20283,
											"end": 20309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20283,
											"end": 20309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20355,
											"end": 20364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20349,
											"end": 20353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20345,
											"end": 20365,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20341,
											"end": 20342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20330,
											"end": 20339,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20326,
											"end": 20343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 20509,
											"end": 20513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 20383,
											"end": 20514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 20383,
											"end": 20514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20375,
											"end": 20514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20375,
											"end": 20514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20676,
											"end": 20680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20716,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 20703,
											"end": 20712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20699,
											"end": 20717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 20717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 20717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20727,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 20795,
											"end": 20796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20784,
											"end": 20793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20780,
											"end": 20797,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20771,
											"end": 20777,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20727,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 20727,
											"end": 20798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20727,
											"end": 20798,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 20727,
											"end": 20798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20808,
											"end": 20880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 20876,
											"end": 20878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20865,
											"end": 20874,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20861,
											"end": 20879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 20858,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20808,
											"end": 20880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 20808,
											"end": 20880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20808,
											"end": 20880,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 20808,
											"end": 20880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20890,
											"end": 20962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 20958,
											"end": 20960,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 20947,
											"end": 20956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20943,
											"end": 20961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20934,
											"end": 20940,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20890,
											"end": 20962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 20890,
											"end": 20962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20890,
											"end": 20962,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 20890,
											"end": 20962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20527,
											"end": 20969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21015,
											"end": 21018,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21034,
											"end": 21054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 21052,
											"end": 21053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21034,
											"end": 21054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 21034,
											"end": 21054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21034,
											"end": 21054,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 21034,
											"end": 21054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21029,
											"end": 21054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21029,
											"end": 21054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21068,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 21086,
											"end": 21087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21068,
											"end": 21088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 21068,
											"end": 21088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21068,
											"end": 21088,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 21068,
											"end": 21088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21063,
											"end": 21088,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21063,
											"end": 21088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21111,
											"end": 21112,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21108,
											"end": 21109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21104,
											"end": 21113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21097,
											"end": 21113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21097,
											"end": 21113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21132,
											"end": 21135,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21129,
											"end": 21130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21126,
											"end": 21136,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21123,
											"end": 21159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21123,
											"end": 21159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 21123,
											"end": 21159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21139,
											"end": 21157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 21139,
											"end": 21157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 21139,
											"end": 21157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21139,
											"end": 21157,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 21139,
											"end": 21157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21123,
											"end": 21159,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 21123,
											"end": 21159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20975,
											"end": 21166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DegenToken-main/contracts/DegenToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"availableFood(uint256)": "ef6eb4c7",
							"balanceOf(address)": "70a08231",
							"burnTokens(uint256)": "6d1b229d",
							"decimals()": "313ce567",
							"getAvailableFood()": "84c13cd0",
							"getOwnedFoodItems()": "ca07fbc4",
							"getTokenBalance()": "82b2e257",
							"mintTokens(address,uint256)": "f0dda65c",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"redeemFood(uint256)": "18461949",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,uint256)": "bec3fa17"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"foodName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"foodCost\",\"type\":\"uint256\"}],\"name\":\"FoodRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableFood\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"foodName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"foodCost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableFood\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"foodName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"foodCost\",\"type\":\"uint256\"}],\"internalType\":\"struct DegenToken.FoodItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnedFoodItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"foodName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"foodCost\",\"type\":\"uint256\"}],\"internalType\":\"struct DegenToken.FoodItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"foodId\",\"type\":\"uint256\"}],\"name\":\"redeemFood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DegenToken-main/contracts/DegenToken.sol\":\"DegenToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"DegenToken-main/contracts/DegenToken.sol\":{\"keccak256\":\"0x9156c60fa0bb87cb013a4e6d5010f89bb1a88f947e97262bd217f0e0a29e915c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aa94e64397bda3933bb6c8c212fe2668774f302b9690e729b309f5f6199d44a\",\"dweb:/ipfs/QmdYq7XguPGnFrj2JSDobeBpM4aJJMvCsQj2xWvz2UdJfa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 952,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "availableFood",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(FoodItem)948_storage)dyn_storage"
							},
							{
								"astId": 958,
								"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
								"label": "ownedFoodItems",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(FoodItem)948_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FoodItem)948_storage)dyn_storage": {
								"base": "t_struct(FoodItem)948_storage",
								"encoding": "dynamic_array",
								"label": "struct DegenToken.FoodItem[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(FoodItem)948_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DegenToken.FoodItem[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(FoodItem)948_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(FoodItem)948_storage": {
								"encoding": "inplace",
								"label": "struct DegenToken.FoodItem",
								"members": [
									{
										"astId": 943,
										"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
										"label": "foodId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
										"label": "foodName",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 947,
										"contract": "DegenToken-main/contracts/DegenToken.sol:DegenToken",
										"label": "foodCost",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"DegenToken-main/contracts/DegenToken.sol": {
				"ast": {
					"absolutePath": "DegenToken-main/contracts/DegenToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"DegenToken": [
							1196
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1197,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1197,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"191:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "191:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "191:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"198:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "198:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "198:7:6"
								}
							],
							"canonicalName": "DegenToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1196,
							"linearizedBaseContracts": [
								1196,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "DegenToken",
							"nameLocation": "177:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DegenToken.FoodItem",
									"id": 948,
									"members": [
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "foodId",
											"nameLocation": "288:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "280:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "280:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "foodName",
											"nameLocation": "311:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "304:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 944,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "304:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "foodCost",
											"nameLocation": "337:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "329:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 946,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "329:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FoodItem",
									"nameLocation": "261:8:6",
									"nodeType": "StructDefinition",
									"scope": 1196,
									"src": "254:98:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef6eb4c7",
									"id": 952,
									"mutability": "mutable",
									"name": "availableFood",
									"nameLocation": "376:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "358:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
										"typeString": "struct DegenToken.FoodItem[]"
									},
									"typeName": {
										"baseType": {
											"id": 950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 949,
												"name": "FoodItem",
												"nameLocations": [
													"358:8:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "358:8:6"
											},
											"referencedDeclaration": 948,
											"src": "358:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FoodItem_$948_storage_ptr",
												"typeString": "struct DegenToken.FoodItem"
											}
										},
										"id": 951,
										"nodeType": "ArrayTypeName",
										"src": "358:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr",
											"typeString": "struct DegenToken.FoodItem[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 958,
									"mutability": "mutable",
									"name": "ownedFoodItems",
									"nameLocation": "525:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1196,
									"src": "486:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DegenToken.FoodItem[])"
									},
									"typeName": {
										"id": 957,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 953,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "494:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "486:30:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DegenToken.FoodItem[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 955,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 954,
													"name": "FoodItem",
													"nameLocations": [
														"505:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 948,
													"src": "505:8:6"
												},
												"referencedDeclaration": 948,
												"src": "505:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FoodItem_$948_storage_ptr",
													"typeString": "struct DegenToken.FoodItem"
												}
											},
											"id": 956,
											"nodeType": "ArrayTypeName",
											"src": "505:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr",
												"typeString": "struct DegenToken.FoodItem[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "606:303:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "31",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "704:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																{
																	"hexValue": "42616e616e612043616b65",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "707:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2d72e89dd43506211be4a1885cbafde0338dbf578961758ca670d19e8ff515a5",
																		"typeString": "literal_string \"Banana Cake\""
																	},
																	"value": "Banana Cake"
																},
																{
																	"hexValue": "3130",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "722:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2d72e89dd43506211be4a1885cbafde0338dbf578961758ca670d19e8ff515a5",
																		"typeString": "literal_string \"Banana Cake\""
																	},
																	{
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	}
																],
																"id": 972,
																"name": "FoodItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "695:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FoodItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.FoodItem storage pointer)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "695:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														],
														"expression": {
															"id": 969,
															"name": "availableFood",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "676:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "690:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "676:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$_t_struct$_FoodItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.FoodItem storage ref[] storage pointer,struct DegenToken.FoodItem storage ref)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "676:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "676:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "764:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																{
																	"hexValue": "4c69656d706f73696c6f67",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "767:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3712b0e6f9ac4b0d5cd7ec46d672f9412998126ea0115ca067e4870bf877263b",
																		"typeString": "literal_string \"Liemposilog\""
																	},
																	"value": "Liemposilog"
																},
																{
																	"hexValue": "3235",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "782:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_3712b0e6f9ac4b0d5cd7ec46d672f9412998126ea0115ca067e4870bf877263b",
																		"typeString": "literal_string \"Liemposilog\""
																	},
																	{
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	}
																],
																"id": 982,
																"name": "FoodItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "755:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FoodItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.FoodItem storage pointer)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "755:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														],
														"expression": {
															"id": 979,
															"name": "availableFood",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "736:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "750:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "736:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$_t_struct$_FoodItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.FoodItem storage ref[] storage pointer,struct DegenToken.FoodItem storage ref)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "736:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "736:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "33",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "824:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																{
																	"hexValue": "43726f66666c6573",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "827:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_eed3c25acdf1c24a4074587b8fcc2894d615c9f8bf86ea893ac8f99230bd757a",
																		"typeString": "literal_string \"Croffles\""
																	},
																	"value": "Croffles"
																},
																{
																	"hexValue": "3330",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "839:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_eed3c25acdf1c24a4074587b8fcc2894d615c9f8bf86ea893ac8f99230bd757a",
																		"typeString": "literal_string \"Croffles\""
																	},
																	{
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	}
																],
																"id": 992,
																"name": "FoodItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "815:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FoodItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.FoodItem storage pointer)"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "815:27:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														],
														"expression": {
															"id": 989,
															"name": "availableFood",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "796:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "810:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "796:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$_t_struct$_FoodItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.FoodItem storage ref[] storage pointer,struct DegenToken.FoodItem storage ref)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "796:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "796:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "34",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "881:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																{
																	"hexValue": "49636564204c61747465",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "884:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_afee70c52d7be132e5669926808f2698488156a85c79a7d5a87acd185230bdaa",
																		"typeString": "literal_string \"Iced Latte\""
																	},
																	"value": "Iced Latte"
																},
																{
																	"hexValue": "3135",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "898:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	},
																	"value": "15"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_afee70c52d7be132e5669926808f2698488156a85c79a7d5a87acd185230bdaa",
																		"typeString": "literal_string \"Iced Latte\""
																	},
																	{
																		"typeIdentifier": "t_rational_15_by_1",
																		"typeString": "int_const 15"
																	}
																],
																"id": 1002,
																"name": "FoodItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "872:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FoodItem_$948_storage_ptr_$",
																	"typeString": "type(struct DegenToken.FoodItem storage pointer)"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "872:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														],
														"expression": {
															"id": 999,
															"name": "availableFood",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "853:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "867:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "853:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$_t_struct$_FoodItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.FoodItem storage ref[] storage pointer,struct DegenToken.FoodItem storage ref)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "853:49:6"
											}
										]
									},
									"id": 1010,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "466f6f64546f6b656e",
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "566:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_cb5023a54e884f74b8018882d554e65278c9bcad770a472e455da8f80aed489b",
														"typeString": "literal_string \"FoodToken\""
													},
													"value": "FoodToken"
												},
												{
													"hexValue": "46544b",
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "579:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_02bca2b3c9dc86ef031c0cc3e00d82c459209872591be274d19868b0c5bb8641",
														"typeString": "literal_string \"FTK\""
													},
													"value": "FTK"
												}
											],
											"id": 963,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 960,
												"name": "ERC20",
												"nameLocations": [
													"560:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "560:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "560:25:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 965,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "594:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "598:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "594:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 967,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 964,
												"name": "Ownable",
												"nameLocations": [
													"586:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "586:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "586:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:0:6"
									},
									"scope": 1196,
									"src": "546:363:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "980:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "996:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "990:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "990:17:6"
											}
										]
									},
									"functionSelector": "f0dda65c",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1017,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1016,
												"name": "onlyOwner",
												"nameLocations": [
													"970:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "970:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:9:6"
										}
									],
									"name": "mintTokens",
									"nameLocation": "924:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "943:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "935:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "955:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "947:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:28:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:0:6"
									},
									"scope": 1196,
									"src": "915:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "1077:49:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1094:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1030,
												"id": 1032,
												"nodeType": "Return",
												"src": "1087:8:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1029:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1027,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1052:8:6"
									},
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:2:6"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "1070:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1028,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1070:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:7:6"
									},
									"scope": 1196,
									"src": "1020:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "1191:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1040,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1218:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1222:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1218:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1039,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1208:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1208:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1043,
												"nodeType": "Return",
												"src": "1201:28:6"
											}
										]
									},
									"functionSelector": "82b2e257",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nameLocation": "1141:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:6"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "1182:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:9:6"
									},
									"scope": 1196,
									"src": "1132:104:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "1285:164:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1052,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1326:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1330:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1326:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1316:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1316:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1055,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "1341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1316:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520746f206275726e",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1361:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2",
																"typeString": "literal_string \"Insufficient token balance to burn\""
															},
															"value": "Insufficient token balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bb4ae4fbfc03fb87b789c3ed571a16003982a4538298376195489e45be820c2",
																"typeString": "literal_string \"Insufficient token balance to burn\""
															}
														],
														"id": 1050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1295:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1295:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "1295:112:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1061,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1423:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1427:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1423:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1435:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1417:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1417:25:6"
											}
										]
									},
									"functionSelector": "6d1b229d",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "1251:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1270:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1262:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:6"
									},
									"scope": 1196,
									"src": "1242:207:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1523:222:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1076,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1564:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1568:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1564:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1075,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "1554:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1554:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1079,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "1579:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1554:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20696e73756666696369656e742062616c616e6365",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1599:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																"typeString": "literal_string \"Transfer failed: insufficient balance\""
															},
															"value": "Transfer failed: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b3173746bfb3d5817582c1fc5a4f0ec8f3401f61136876b8a82b6a02a1a04fe",
																"typeString": "literal_string \"Transfer failed: insufficient balance\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "1533:115:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1666:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1670:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1666:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1678:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1658:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "1658:27:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1708:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1712:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1708:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1720:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1731:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1695:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1695:43:6"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1464:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1487:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1479:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1506:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "1498:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1478:35:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:6"
									},
									"scope": 1196,
									"src": "1455:290:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "1842:648:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1104,
																	"name": "foodId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "1860:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1869:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1860:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "foodId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "1874:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1108,
																		"name": "availableFood",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "1884:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																			"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1898:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1884:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1874:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1860:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420666f6f64204944",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099",
																"typeString": "literal_string \"Invalid food ID\""
															},
															"value": "Invalid food ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c3fcedbf38f546eeb09095657bdde919f7dc331e5341d58d035e1a30f4b099",
																"typeString": "literal_string \"Invalid food ID\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1852:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1852:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1852:72:6"
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "food",
														"nameLocation": "1950:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "1934:20:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
															"typeString": "struct DegenToken.FoodItem"
														},
														"typeName": {
															"id": 1116,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1115,
																"name": "FoodItem",
																"nameLocations": [
																	"1934:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 948,
																"src": "1934:8:6"
															},
															"referencedDeclaration": 948,
															"src": "1934:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_storage_ptr",
																"typeString": "struct DegenToken.FoodItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"baseExpression": {
														"id": 1118,
														"name": "availableFood",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "1957:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
															"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
														}
													},
													"id": 1122,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1119,
															"name": "foodId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "1971:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1980:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1971:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1957:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FoodItem_$948_storage",
														"typeString": "struct DegenToken.FoodItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1934:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1126,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2053:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2057:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2053:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1125,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2043:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2043:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1129,
																	"name": "food",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "2068:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																		"typeString": "struct DegenToken.FoodItem memory"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2073:8:6",
																"memberName": "foodCost",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "2068:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2043:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f2072656465656d20666f6f64",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2095:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15",
																"typeString": "literal_string \"Insufficient balance to redeem food\""
															},
															"value": "Insufficient balance to redeem food"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6872982eeefcd5b602fc86bd91e8b94a57b100f5b6864cc9b997b3d102f4e15",
																"typeString": "literal_string \"Insufficient balance to redeem food\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2022:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:120:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2022:120:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2159:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2163:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2159:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1138,
																"name": "food",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2171:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.FoodItem memory"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2176:8:6",
															"memberName": "foodCost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "2171:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2153:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2153:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "food",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "2288:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																"typeString": "struct DegenToken.FoodItem memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1142,
																"name": "ownedFoodItems",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2256:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DegenToken.FoodItem storage ref[] storage ref)"
																}
															},
															"id": 1145,
															"indexExpression": {
																"expression": {
																	"id": 1143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2271:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2275:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2271:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2256:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
																"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2283:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2256:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$_t_struct$_FoodItem_$948_storage_$returns$__$attached_to$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DegenToken.FoodItem storage ref[] storage pointer,struct DegenToken.FoodItem storage ref)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2256:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2384:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2388:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2384:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1153,
																"name": "food",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2408:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.FoodItem memory"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2413:6:6",
															"memberName": "foodId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "2408:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1155,
																"name": "food",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2433:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.FoodItem memory"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2438:8:6",
															"memberName": "foodName",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 945,
															"src": "2433:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1157,
																"name": "food",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2460:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FoodItem_$948_memory_ptr",
																	"typeString": "struct DegenToken.FoodItem memory"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2465:8:6",
															"memberName": "foodCost",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "2460:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "FoodRedeemed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "2358:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,string memory,uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2358:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "EmitStatement",
												"src": "2353:130:6"
											}
										]
									},
									"functionSelector": "18461949",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemFood",
									"nameLocation": "1806:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "foodId",
												"nameLocation": "1825:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1817:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1816:16:6"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:0:6"
									},
									"scope": 1196,
									"src": "1797:693:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "2604:37:6",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"name": "availableFood",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "2621:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
														"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1170,
												"nodeType": "Return",
												"src": "2614:20:6"
											}
										]
									},
									"functionSelector": "84c13cd0",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAvailableFood",
									"nameLocation": "2543:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:2:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2585:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DegenToken.FoodItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1164,
															"name": "FoodItem",
															"nameLocations": [
																"2585:8:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 948,
															"src": "2585:8:6"
														},
														"referencedDeclaration": 948,
														"src": "2585:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FoodItem_$948_storage_ptr",
															"typeString": "struct DegenToken.FoodItem"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "2585:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr",
														"typeString": "struct DegenToken.FoodItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:19:6"
									},
									"scope": 1196,
									"src": "2534:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "2763:50:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1179,
														"name": "ownedFoodItems",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2780:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DegenToken.FoodItem storage ref[] storage ref)"
														}
													},
													"id": 1182,
													"indexExpression": {
														"expression": {
															"id": 1180,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2795:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2799:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2795:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2780:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage",
														"typeString": "struct DegenToken.FoodItem storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1183,
												"nodeType": "Return",
												"src": "2773:33:6"
											}
										]
									},
									"functionSelector": "ca07fbc4",
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnedFoodItems",
									"nameLocation": "2701:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:2:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2744:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DegenToken.FoodItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 1175,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1174,
															"name": "FoodItem",
															"nameLocations": [
																"2744:8:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 948,
															"src": "2744:8:6"
														},
														"referencedDeclaration": 948,
														"src": "2744:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FoodItem_$948_storage_ptr",
															"typeString": "struct DegenToken.FoodItem"
														}
													},
													"id": 1176,
													"nodeType": "ArrayTypeName",
													"src": "2744:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FoodItem_$948_storage_$dyn_storage_ptr",
														"typeString": "struct DegenToken.FoodItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:19:6"
									},
									"scope": 1196,
									"src": "2692:121:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "6897b74eb742aaf38dadb2956389fae0b6ed24f776eb038d3df6cf5b909371a4",
									"id": 1195,
									"name": "FoodRedeemed",
									"nameLocation": "2861:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "redeemer",
												"nameLocation": "2899:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2883:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2883:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "foodId",
												"nameLocation": "2925:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2917:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "foodName",
												"nameLocation": "2948:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2941:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "foodCost",
												"nameLocation": "2974:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "2966:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:115:6"
									},
									"src": "2855:134:6"
								}
							],
							"scope": 1197,
							"src": "168:2823:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1195
							]
						}
					],
					"src": "32:2960:6"
				},
				"id": 6
			}
		}
	}
}